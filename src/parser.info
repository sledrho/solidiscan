-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from parser.y
-----------------------------------------------------------------------------

state 3 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 5 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.

rule 1 is unused
rule 2 is unused
rule 6 is unused
rule 7 is unused
rule 8 is unused
rule 9 is unused
rule 10 is unused
rule 11 is unused
rule 12 is unused
rule 13 is unused
rule 14 is unused
rule 15 is unused

terminal "reservedid" is unused
terminal "decimalnum" is unused
terminal "exponent" is unused
terminal "int" is unused
terminal "import" is unused
terminal "public" is unused
terminal contract is unused
terminal "boolean" is unused
terminal "true" is unused
terminal "!" is unused
terminal "&&" is unused
terminal "||" is unused
terminal "!=" is unused
terminal "<" is unused
terminal ">" is unused
terminal "<=" is unused
terminal ">=" is unused
terminal "==" is unused
terminal "{" is unused
terminal "}" is unused
terminal "[" is unused
terminal "]" is unused
terminal "." is unused
terminal "=" is unused
terminal "*" is unused
terminal "/" is unused
terminal "**" is unused
terminal "%" is unused
terminal op is unused
terminal "-" is unused
terminal stringLiteral is unused
terminal "(" is unused
terminal ")" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_solidiscan -> ProgSource                    (0)
	ProgSource -> ProgSource SourceUnit                (1)
	ProgSource -> SourceUnit                           (2)
	SourceUnit -> SourceUnit PragmaDirective           (3)
	SourceUnit -> SourceUnit                           (4)
	PragmaDirective -> "pragma" ident ";"              (5)
	ImportDirective -> "import" stringLiteral ";"      (6)
	ContractDefinition -> contract ident "{" ContractPart "}"   (7)
	ContractPart ->                                    (8)
	StateVariableDeclaration -> TypeName "public" ident ";"   (9)
	StateVariableDeclaration -> TypeName "public" ident "=" Expression ";"   (10)
	StateVariableDeclaration ->                        (11)
	TypeName -> ElementaryTypeName                     (12)
	ElementaryTypeName -> stringLiteral                (13)
	Expression -> Expression op Expression             (14)
	Type -> ident                                      (15)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"reservedid"   { TReservedOp _ }
	"decimalnum"   { TDec _ $$ }
	"exponent"     { TExp _ $$ }
	"int"          { TInt _ $$ }
	"pragma"       { TPragma _ }
	"import"       { TImport _ }
	"public"       { TPublic _ }
	contract       { TContract _ }
	"boolean"      { TBooleanLit _ }
	"true"         { TTrue _ }
	"!"            { TNegate _ }
	"&&"           { TAnd _ }
	"||"           { TOr _ }
	"!="           { TInEqual _ }
	"<"            { TLThan _ }
	">"            { TGThan _ }
	"<="           { TLTEq _ }
	">="           { TGTEq _ }
	"=="           { TEquality _ }
	"{"            { TLCurl _ }
	"}"            { TRCurl _ }
	"["            { TLBrack _ }
	"]"            { TRBrack _ }
	"."            { TPeriod _ }
	"="            { TEquals _ }
	"*"            { TMult _ }
	"/"            { TDiv _ }
	"**"           { TExpSym _ }
	"%"            { TModul _ }
	op             { TOp _ $$ }
	"-"            { TSub _ }
	";"            { TSemiCol _ }
	ident          { TIdent _ $$ }
	stringLiteral  { TStringLiteral _ $$ }
	"("            { TLeftParen _ }
	")"            { TRightParen _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_solidiscan rule  0
	ProgSource      rules 1, 2
	SourceUnit      rules 3, 4
	PragmaDirective rule  5
	ImportDirective rule  6
	ContractDefinition rule  7
	ContractPart    rule  8
	StateVariableDeclaration rules 9, 10, 11
	TypeName        rule  12
	ElementaryTypeName rule  13
	Expression      rule  14
	Type            rule  15

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0



	ProgSource     goto state 4
	SourceUnit     goto state 3

State 1



	ProgSource     goto state 2
	SourceUnit     goto state 3

State 2

	ProgSource -> ProgSource . SourceUnit               (rule 1)


	SourceUnit     goto state 5

State 3

	ProgSource -> SourceUnit .                          (rule 2)
	SourceUnit -> SourceUnit . PragmaDirective          (rule 3)
	SourceUnit -> SourceUnit .                          (rule 4)

	"pragma"       shift, and enter state 7
			(reduce using rule 4)

	%eof           reduce using rule 4
			(reduce using rule 2)


	PragmaDirectivegoto state 6

State 4

	%start_solidiscan -> ProgSource .                   (rule 0)
	ProgSource -> ProgSource . SourceUnit               (rule 1)

	%eof           accept

	SourceUnit     goto state 5

State 5

	ProgSource -> ProgSource SourceUnit .               (rule 1)
	SourceUnit -> SourceUnit . PragmaDirective          (rule 3)
	SourceUnit -> SourceUnit .                          (rule 4)

	"pragma"       shift, and enter state 7
			(reduce using rule 4)

	%eof           reduce using rule 4
			(reduce using rule 1)


	PragmaDirectivegoto state 6

State 6

	SourceUnit -> SourceUnit PragmaDirective .          (rule 3)

	"pragma"       reduce using rule 3
	%eof           reduce using rule 3


State 7

	PragmaDirective -> "pragma" . ident ";"             (rule 5)

	ident          shift, and enter state 8


State 8

	PragmaDirective -> "pragma" ident . ";"             (rule 5)

	";"            shift, and enter state 9


State 9

	PragmaDirective -> "pragma" ident ";" .             (rule 5)

	"pragma"       reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 16
Number of terminals: 36
Number of non-terminals: 12
Number of states: 10
