-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from parser.y
-----------------------------------------------------------------------------

state 226 contains 1 shift/reduce conflicts.

rule 65 is unused
rule 66 is unused
rule 73 is unused
rule 74 is unused

terminal "reservedid" is unused
terminal "exponent" is unused
terminal "int" is unused
terminal "^" is unused
terminal "!" is unused
terminal "&&" is unused
terminal "||" is unused
terminal "!=" is unused
terminal "<" is unused
terminal ">" is unused
terminal "<=" is unused
terminal ">=" is unused
terminal "==" is unused
terminal "[" is unused
terminal "]" is unused
terminal "." is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_solidiscan -> SourceUnit                    (0)
	SourceUnit ->                                      (1)
	SourceUnit -> SourceUnit SourceUnitSol             (2)
	SourceUnitSol -> PragmaDirective                   (3)
	SourceUnitSol -> ImportDirective                   (4)
	SourceUnitSol -> ContractDefinition                (5)
	PragmaDirective -> "pragma" PragmaName version ";"   (6)
	PragmaName -> ident                                (7)
	ImportDirective -> "import" stringLiteral ImportAs ";"   (8)
	ImportDirective -> "import" ImportAster ImportAs "from" stringLiteral ";"   (9)
	ImportAs -> "as" ident                             (10)
	ImportAs ->                                        (11)
	ImportAster -> "*"                                 (12)
	ImportAster -> ident                               (13)
	ContractDefinition -> ConLibInt ident zero(InheritanceSpecList) "{" list(ContractPart) "}"   (14)
	ConLibInt -> contract                              (15)
	ConLibInt -> "library"                             (16)
	ConLibInt -> "interface"                           (17)
	InheritanceSpecList -> "is" InheritanceSpecifier list(OMInheritanceSpec)   (18)
	OMInheritanceSpec -> "," InheritanceSpecifier      (19)
	InheritanceSpecifier -> UserDefinedTypeName zero(InhExpList)   (20)
	InhExpList -> "(" Expression list(CSExpList) ")"   (21)
	CSExpList -> "," Expression                        (22)
	ContractPart -> StateVarDec                        (23)
	ContractPart -> UsingForDec                        (24)
	ContractPart -> FunctionDefinition                 (25)
	ContractPart -> EventDefinition                    (26)
	ContractPart -> ModifierDefinition                 (27)
	ContractPart -> EnumDefinition                     (28)
	FunctionDefinition -> function ident ParameterList list(FuncMods) zero(ReturnParam) TermBlock   (29)
	EventDefinition -> "event" ident zero(EventParamList) zero(AnonList) ";"   (30)
	ModifierDefinition -> "modifier" ident zero(ParameterList) TermBlock   (31)
	ModifierInvocation -> ident "(" list(ModExpList) ")"   (32)
	ModExpList -> ExpressionList                       (33)
	EnumDefinition -> "enum" ident "{" EnumValList "}"   (34)
	EnumValue -> ident                                 (35)
	EnumValList -> EnumValue list(MultiEnumValue)      (36)
	MultiEnumValue -> "," EnumValue                    (37)
	EventParamList -> "(" zero(EventParams) ")"        (38)
	EventParams -> EParameters list(EParamList)        (39)
	EParamList -> "," EParameters                      (40)
	EParameters -> TypeName ident                      (41)
	AnonList -> "anonymous"                            (42)
	ParameterList -> "(" zero(Parameters) ")"          (43)
	Parameters -> Parameter list(ParamList)            (44)
	ParamList -> "," Parameter                         (45)
	Parameter -> TypeName zero(StorageLocation) ident   (46)
	FuncMods -> ModifierInvocation                     (47)
	FuncMods -> StateMutability                        (48)
	FuncMods -> FuncVar                                (49)
	ReturnParam -> "returns" ParameterList             (50)
	TermBlock -> ";"                                   (51)
	TermBlock -> "{" list(Statement) "}"               (52)
	StateMutability -> "pure"                          (53)
	StateMutability -> "constant"                      (54)
	StateMutability -> "view"                          (55)
	StateMutability -> "payable"                       (56)
	StorageLocation -> "memory"                        (57)
	StorageLocation -> "storage"                       (58)
	FuncVar -> "external"                              (59)
	FuncVar -> "internal"                              (60)
	FuncVar -> "private"                               (61)
	FuncVar -> "public"                                (62)
	StateVarDec -> TypeName zero(AssVar) ident zero(MExpression) ";"   (63)
	UsingForDec -> "using" ident "for" TypeName ";"    (64)
	MTypeName -> "*"                                   (65)
	MTypeName -> TypeName                              (66)
	TypeName -> ElementaryTypeName                     (67)
	TypeName -> UserDefinedTypeName                    (68)
	AssVar -> "public"                                 (69)
	AssVar -> "private"                                (70)
	AssVar -> "internal"                               (71)
	AssVar -> "constant"                               (72)
	MaybeExp -> MExpression                            (73)
	MaybeExp ->                                        (74)
	MExpression -> "=" Expression                      (75)
	ExpressionList -> Expression list(ExprList)        (76)
	ExprList -> "," Expression                         (77)
	Expression -> Expression "**" Expression           (78)
	Expression -> Expression "*" Expression            (79)
	Expression -> Expression "/" Expression            (80)
	Expression -> Expression "%" Expression            (81)
	Expression -> Expression "+" Expression            (82)
	Expression -> Expression "-" Expression            (83)
	Expression -> PrimaryExpression                    (84)
	Statement -> IfStatement                           (85)
	Statement -> SimpleStatement ";"                   (86)
	SimpleStatement -> VariableDefinition              (87)
	SimpleStatement -> ExpressionStatement             (88)
	VariableDefinition -> "var" VariableDeclaration    (89)
	VariableDeclaration -> TypeName zero(StorageLocation) ident   (90)
	ExpressionStatement -> Expression                  (91)
	IfStatement -> "if" "(" Expression ")" Statement zero(ElseState)   (92)
	ElseState -> "else" Statement                      (93)
	PrimaryExpression -> BooleanLiteral                (94)
	PrimaryExpression -> NumberLiteral                 (95)
	PrimaryExpression -> stringLiteral                 (96)
	PrimaryExpression -> ident                         (97)
	BooleanLiteral -> "true"                           (98)
	BooleanLiteral -> "false"                          (99)
	NumberLiteral -> "decimalnum" numberunit           (100)
	UserDefinedTypeName -> ident                       (101)
	ElementaryTypeName -> "address"                    (102)
	ElementaryTypeName -> "bool"                       (103)
	ElementaryTypeName -> "var"                        (104)
	ElementaryTypeName -> "string"                     (105)
	list(CSExpList) -> list1(CSExpList)                (106)
	list(CSExpList) ->                                 (107)
	list(ContractPart) -> list1(ContractPart)          (108)
	list(ContractPart) ->                              (109)
	list(EParamList) -> list1(EParamList)              (110)
	list(EParamList) ->                                (111)
	list(ExprList) -> list1(ExprList)                  (112)
	list(ExprList) ->                                  (113)
	list(FuncMods) -> list1(FuncMods)                  (114)
	list(FuncMods) ->                                  (115)
	list(ModExpList) -> list1(ModExpList)              (116)
	list(ModExpList) ->                                (117)
	list(MultiEnumValue) -> list1(MultiEnumValue)      (118)
	list(MultiEnumValue) ->                            (119)
	list(OMInheritanceSpec) -> list1(OMInheritanceSpec)   (120)
	list(OMInheritanceSpec) ->                         (121)
	list(ParamList) -> list1(ParamList)                (122)
	list(ParamList) ->                                 (123)
	list(Statement) -> list1(Statement)                (124)
	list(Statement) ->                                 (125)
	zero(AnonList) -> AnonList                         (126)
	zero(AnonList) ->                                  (127)
	zero(AssVar) -> AssVar                             (128)
	zero(AssVar) ->                                    (129)
	zero(ElseState) -> ElseState                       (130)
	zero(ElseState) ->                                 (131)
	zero(EventParamList) -> EventParamList             (132)
	zero(EventParamList) ->                            (133)
	zero(EventParams) -> EventParams                   (134)
	zero(EventParams) ->                               (135)
	zero(InhExpList) -> InhExpList                     (136)
	zero(InhExpList) ->                                (137)
	zero(InheritanceSpecList) -> InheritanceSpecList   (138)
	zero(InheritanceSpecList) ->                       (139)
	zero(MExpression) -> MExpression                   (140)
	zero(MExpression) ->                               (141)
	zero(ParameterList) -> ParameterList               (142)
	zero(ParameterList) ->                             (143)
	zero(Parameters) -> Parameters                     (144)
	zero(Parameters) ->                                (145)
	zero(ReturnParam) -> ReturnParam                   (146)
	zero(ReturnParam) ->                               (147)
	zero(StorageLocation) -> StorageLocation           (148)
	zero(StorageLocation) ->                           (149)
	list1(CSExpList) -> CSExpList                      (150)
	list1(CSExpList) -> CSExpList list1(CSExpList)     (151)
	list1(ContractPart) -> ContractPart                (152)
	list1(ContractPart) -> ContractPart list1(ContractPart)   (153)
	list1(EParamList) -> EParamList                    (154)
	list1(EParamList) -> EParamList list1(EParamList)   (155)
	list1(ExprList) -> ExprList                        (156)
	list1(ExprList) -> ExprList list1(ExprList)        (157)
	list1(FuncMods) -> FuncMods                        (158)
	list1(FuncMods) -> FuncMods list1(FuncMods)        (159)
	list1(ModExpList) -> ModExpList                    (160)
	list1(ModExpList) -> ModExpList list1(ModExpList)   (161)
	list1(MultiEnumValue) -> MultiEnumValue            (162)
	list1(MultiEnumValue) -> MultiEnumValue list1(MultiEnumValue)   (163)
	list1(OMInheritanceSpec) -> OMInheritanceSpec      (164)
	list1(OMInheritanceSpec) -> OMInheritanceSpec list1(OMInheritanceSpec)   (165)
	list1(ParamList) -> ParamList                      (166)
	list1(ParamList) -> ParamList list1(ParamList)     (167)
	list1(Statement) -> Statement                      (168)
	list1(Statement) -> Statement list1(Statement)     (169)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"reservedid"   { TReservedOp _ }
	version        { TVers _ }
	"decimalnum"   { TDec _ $$ }
	"exponent"     { TExp _ $$ }
	"int"          { TInt _ $$ }
	numberunit     { TNumUnit _ }
	"pragma"       { TPragma _ }
	"import"       { TImport _ }
	"external"     { TExternal _ $$ }
	"public"       { TPublic _ $$ }
	"internal"     { TIntern _ $$ }
	"private"      { TPriv _ $$ }
	"constant"     { TConst _ $$ }
	"string"       { TStringAs _ $$ }
	contract       { TContract _ }
	"library"      { TLibrary _ }
	"interface"    { TInterface _ }
	function       { TFuncDef _ }
	"address"      { TAddr _ $$ }
	"bool"         { TBooleanLit _ $$ }
	"var"          { TVar _ $$ }
	"using"        { TUsing _ $$ }
	"for"          { TFor _ $$ }
	"true"         { TTrue _ $$ }
	"false"        { TFalse _ $$ }
	"as"           { TAs _ }
	"is"           { TIs _ }
	"from"         { TFrom _ }
	"view"         { TView _ $$ }
	"pure"         { TPure _ $$ }
	"payable"      { TPayable _ $$ }
	"returns"      { TReturns _ }
	"if"           { TIf _ }
	"else"         { TElse _ }
	"event"        { TEvent _ }
	"anonymous"    { TAnon _ }
	"modifier"     { TModi _ }
	"memory"       { TMem _  $$ }
	"storage"      { TStorage _ $$ }
	"enum"         { TEnum _ }
	"^"            { THat _ }
	"!"            { TNegate _ }
	"&&"           { TAnd _ }
	"||"           { TOr _ }
	"!="           { TInEqual _ }
	"<"            { TLThan _ }
	">"            { TGThan _ }
	"<="           { TLTEq _ }
	">="           { TGTEq _ }
	"=="           { TEquality _ }
	"{"            { TLCurl _ }
	"}"            { TRCurl _ }
	"["            { TLBrack _ }
	"]"            { TRBrack _ }
	"."            { TPeriod _ }
	"="            { TEquals _ }
	"*"            { TMult _ }
	"/"            { TDiv _ }
	"**"           { TExpSym _ }
	"%"            { TModul _ }
	"+"            { TOp _ $$ }
	"-"            { TSub _ }
	";"            { TSemiCol _ }
	","            { TComma _ }
	ident          { TIdent _ $$ }
	stringLiteral  { TStringLiteral _ $$ }
	"("            { TLeftParen _ }
	")"            { TRightParen _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_solidiscan rule  0
	SourceUnit      rules 1, 2
	SourceUnitSol   rules 3, 4, 5
	PragmaDirective rule  6
	PragmaName      rule  7
	ImportDirective rules 8, 9
	ImportAs        rules 10, 11
	ImportAster     rules 12, 13
	ContractDefinition rule  14
	ConLibInt       rules 15, 16, 17
	InheritanceSpecList rule  18
	OMInheritanceSpec rule  19
	InheritanceSpecifier rule  20
	InhExpList      rule  21
	CSExpList       rule  22
	ContractPart    rules 23, 24, 25, 26, 27, 28
	FunctionDefinition rule  29
	EventDefinition rule  30
	ModifierDefinition rule  31
	ModifierInvocation rule  32
	ModExpList      rule  33
	EnumDefinition  rule  34
	EnumValue       rule  35
	EnumValList     rule  36
	MultiEnumValue  rule  37
	EventParamList  rule  38
	EventParams     rule  39
	EParamList      rule  40
	EParameters     rule  41
	AnonList        rule  42
	ParameterList   rule  43
	Parameters      rule  44
	ParamList       rule  45
	Parameter       rule  46
	FuncMods        rules 47, 48, 49
	ReturnParam     rule  50
	TermBlock       rules 51, 52
	StateMutability rules 53, 54, 55, 56
	StorageLocation rules 57, 58
	FuncVar         rules 59, 60, 61, 62
	StateVarDec     rule  63
	UsingForDec     rule  64
	MTypeName       rules 65, 66
	TypeName        rules 67, 68
	AssVar          rules 69, 70, 71, 72
	MaybeExp        rules 73, 74
	MExpression     rule  75
	ExpressionList  rule  76
	ExprList        rule  77
	Expression      rules 78, 79, 80, 81, 82, 83, 84
	Statement       rules 85, 86
	SimpleStatement rules 87, 88
	VariableDefinition rule  89
	VariableDeclaration rule  90
	ExpressionStatement rule  91
	IfStatement     rule  92
	ElseState       rule  93
	PrimaryExpression rules 94, 95, 96, 97
	BooleanLiteral  rules 98, 99
	NumberLiteral   rule  100
	UserDefinedTypeName rule  101
	ElementaryTypeName rules 102, 103, 104, 105
	list(CSExpList) rules 106, 107
	list(ContractPart) rules 108, 109
	list(EParamList) rules 110, 111
	list(ExprList)  rules 112, 113
	list(FuncMods)  rules 114, 115
	list(ModExpList) rules 116, 117
	list(MultiEnumValue) rules 118, 119
	list(OMInheritanceSpec) rules 120, 121
	list(ParamList) rules 122, 123
	list(Statement) rules 124, 125
	zero(AnonList)  rules 126, 127
	zero(AssVar)    rules 128, 129
	zero(ElseState) rules 130, 131
	zero(EventParamList) rules 132, 133
	zero(EventParams) rules 134, 135
	zero(InhExpList) rules 136, 137
	zero(InheritanceSpecList) rules 138, 139
	zero(MExpression) rules 140, 141
	zero(ParameterList) rules 142, 143
	zero(Parameters) rules 144, 145
	zero(ReturnParam) rules 146, 147
	zero(StorageLocation) rules 148, 149
	list1(CSExpList) rules 150, 151
	list1(ContractPart) rules 152, 153
	list1(EParamList) rules 154, 155
	list1(ExprList) rules 156, 157
	list1(FuncMods) rules 158, 159
	list1(ModExpList) rules 160, 161
	list1(MultiEnumValue) rules 162, 163
	list1(OMInheritanceSpec) rules 164, 165
	list1(ParamList) rules 166, 167
	list1(Statement) rules 168, 169

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"pragma"       reduce using rule 1
	"import"       reduce using rule 1
	contract       reduce using rule 1
	"library"      reduce using rule 1
	"interface"    reduce using rule 1
	%eof           reduce using rule 1

	SourceUnit     goto state 2

State 1




State 2

	%start_solidiscan -> SourceUnit .                   (rule 0)
	SourceUnit -> SourceUnit . SourceUnitSol            (rule 2)

	"pragma"       shift, and enter state 8
	"import"       shift, and enter state 9
	contract       shift, and enter state 10
	"library"      shift, and enter state 11
	"interface"    shift, and enter state 12
	%eof           accept

	SourceUnitSol  goto state 3
	PragmaDirectivegoto state 4
	ImportDirectivegoto state 5
	ContractDefinitiongoto state 6
	ConLibInt      goto state 7

State 3

	SourceUnit -> SourceUnit SourceUnitSol .            (rule 2)

	"pragma"       reduce using rule 2
	"import"       reduce using rule 2
	contract       reduce using rule 2
	"library"      reduce using rule 2
	"interface"    reduce using rule 2
	%eof           reduce using rule 2


State 4

	SourceUnitSol -> PragmaDirective .                  (rule 3)

	"pragma"       reduce using rule 3
	"import"       reduce using rule 3
	contract       reduce using rule 3
	"library"      reduce using rule 3
	"interface"    reduce using rule 3
	%eof           reduce using rule 3


State 5

	SourceUnitSol -> ImportDirective .                  (rule 4)

	"pragma"       reduce using rule 4
	"import"       reduce using rule 4
	contract       reduce using rule 4
	"library"      reduce using rule 4
	"interface"    reduce using rule 4
	%eof           reduce using rule 4


State 6

	SourceUnitSol -> ContractDefinition .               (rule 5)

	"pragma"       reduce using rule 5
	"import"       reduce using rule 5
	contract       reduce using rule 5
	"library"      reduce using rule 5
	"interface"    reduce using rule 5
	%eof           reduce using rule 5


State 7

	ContractDefinition -> ConLibInt . ident zero(InheritanceSpecList) "{" list(ContractPart) "}"    (rule 14)

	ident          shift, and enter state 19


State 8

	PragmaDirective -> "pragma" . PragmaName version ";"    (rule 6)

	ident          shift, and enter state 18

	PragmaName     goto state 17

State 9

	ImportDirective -> "import" . stringLiteral ImportAs ";"    (rule 8)
	ImportDirective -> "import" . ImportAster ImportAs "from" stringLiteral ";"    (rule 9)

	"*"            shift, and enter state 14
	ident          shift, and enter state 15
	stringLiteral  shift, and enter state 16

	ImportAster    goto state 13

State 10

	ConLibInt -> contract .                             (rule 15)

	ident          reduce using rule 15


State 11

	ConLibInt -> "library" .                            (rule 16)

	ident          reduce using rule 16


State 12

	ConLibInt -> "interface" .                          (rule 17)

	ident          reduce using rule 17


State 13

	ImportDirective -> "import" ImportAster . ImportAs "from" stringLiteral ";"    (rule 9)

	"as"           shift, and enter state 25
	"from"         reduce using rule 11

	ImportAs       goto state 26

State 14

	ImportAster -> "*" .                                (rule 12)

	"as"           reduce using rule 12
	"from"         reduce using rule 12


State 15

	ImportAster -> ident .                              (rule 13)

	"as"           reduce using rule 13
	"from"         reduce using rule 13


State 16

	ImportDirective -> "import" stringLiteral . ImportAs ";"    (rule 8)

	"as"           shift, and enter state 25
	";"            reduce using rule 11

	ImportAs       goto state 24

State 17

	PragmaDirective -> "pragma" PragmaName . version ";"    (rule 6)

	version        shift, and enter state 23


State 18

	PragmaName -> ident .                               (rule 7)

	version        reduce using rule 7


State 19

	ContractDefinition -> ConLibInt ident . zero(InheritanceSpecList) "{" list(ContractPart) "}"    (rule 14)

	"is"           shift, and enter state 22
	"{"            reduce using rule 139

	InheritanceSpecListgoto state 20
	zero(InheritanceSpecList)goto state 21

State 20

	zero(InheritanceSpecList) -> InheritanceSpecList .    (rule 138)

	"{"            reduce using rule 138


State 21

	ContractDefinition -> ConLibInt ident zero(InheritanceSpecList) . "{" list(ContractPart) "}"    (rule 14)

	"{"            shift, and enter state 34


State 22

	InheritanceSpecList -> "is" . InheritanceSpecifier list(OMInheritanceSpec)    (rule 18)

	ident          shift, and enter state 33

	InheritanceSpecifiergoto state 31
	UserDefinedTypeNamegoto state 32

State 23

	PragmaDirective -> "pragma" PragmaName version . ";"    (rule 6)

	";"            shift, and enter state 30


State 24

	ImportDirective -> "import" stringLiteral ImportAs . ";"    (rule 8)

	";"            shift, and enter state 29


State 25

	ImportAs -> "as" . ident                            (rule 10)

	ident          shift, and enter state 28


State 26

	ImportDirective -> "import" ImportAster ImportAs . "from" stringLiteral ";"    (rule 9)

	"from"         shift, and enter state 27


State 27

	ImportDirective -> "import" ImportAster ImportAs "from" . stringLiteral ";"    (rule 9)

	stringLiteral  shift, and enter state 63


State 28

	ImportAs -> "as" ident .                            (rule 10)

	"from"         reduce using rule 10
	";"            reduce using rule 10


State 29

	ImportDirective -> "import" stringLiteral ImportAs ";" .    (rule 8)

	"pragma"       reduce using rule 8
	"import"       reduce using rule 8
	contract       reduce using rule 8
	"library"      reduce using rule 8
	"interface"    reduce using rule 8
	%eof           reduce using rule 8


State 30

	PragmaDirective -> "pragma" PragmaName version ";" .    (rule 6)

	"pragma"       reduce using rule 6
	"import"       reduce using rule 6
	contract       reduce using rule 6
	"library"      reduce using rule 6
	"interface"    reduce using rule 6
	%eof           reduce using rule 6


State 31

	InheritanceSpecList -> "is" InheritanceSpecifier . list(OMInheritanceSpec)    (rule 18)

	"{"            reduce using rule 121
	","            shift, and enter state 62

	OMInheritanceSpecgoto state 59
	list(OMInheritanceSpec)goto state 60
	list1(OMInheritanceSpec)goto state 61

State 32

	InheritanceSpecifier -> UserDefinedTypeName . zero(InhExpList)    (rule 20)

	"{"            reduce using rule 137
	","            reduce using rule 137
	"("            shift, and enter state 58

	InhExpList     goto state 56
	zero(InhExpList)goto state 57

State 33

	UserDefinedTypeName -> ident .                      (rule 101)

	"public"       reduce using rule 101
	"internal"     reduce using rule 101
	"private"      reduce using rule 101
	"constant"     reduce using rule 101
	"memory"       reduce using rule 101
	"storage"      reduce using rule 101
	"{"            reduce using rule 101
	";"            reduce using rule 101
	","            reduce using rule 101
	ident          reduce using rule 101
	"("            reduce using rule 101


State 34

	ContractDefinition -> ConLibInt ident zero(InheritanceSpecList) "{" . list(ContractPart) "}"    (rule 14)

	"string"       shift, and enter state 47
	function       shift, and enter state 48
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	"using"        shift, and enter state 52
	"event"        shift, and enter state 53
	"modifier"     shift, and enter state 54
	"enum"         shift, and enter state 55
	"}"            reduce using rule 109
	ident          shift, and enter state 33

	ContractPart   goto state 35
	FunctionDefinitiongoto state 36
	EventDefinitiongoto state 37
	ModifierDefinitiongoto state 38
	EnumDefinition goto state 39
	StateVarDec    goto state 40
	UsingForDec    goto state 41
	TypeName       goto state 42
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44
	list(ContractPart)goto state 45
	list1(ContractPart)goto state 46

State 35

	list1(ContractPart) -> ContractPart .               (rule 152)
	list1(ContractPart) -> ContractPart . list1(ContractPart)    (rule 153)

	"string"       shift, and enter state 47
	function       shift, and enter state 48
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	"using"        shift, and enter state 52
	"event"        shift, and enter state 53
	"modifier"     shift, and enter state 54
	"enum"         shift, and enter state 55
	"}"            reduce using rule 152
	ident          shift, and enter state 33

	ContractPart   goto state 35
	FunctionDefinitiongoto state 36
	EventDefinitiongoto state 37
	ModifierDefinitiongoto state 38
	EnumDefinition goto state 39
	StateVarDec    goto state 40
	UsingForDec    goto state 41
	TypeName       goto state 42
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44
	list1(ContractPart)goto state 88

State 36

	ContractPart -> FunctionDefinition .                (rule 25)

	"string"       reduce using rule 25
	function       reduce using rule 25
	"address"      reduce using rule 25
	"bool"         reduce using rule 25
	"var"          reduce using rule 25
	"using"        reduce using rule 25
	"event"        reduce using rule 25
	"modifier"     reduce using rule 25
	"enum"         reduce using rule 25
	"}"            reduce using rule 25
	ident          reduce using rule 25


State 37

	ContractPart -> EventDefinition .                   (rule 26)

	"string"       reduce using rule 26
	function       reduce using rule 26
	"address"      reduce using rule 26
	"bool"         reduce using rule 26
	"var"          reduce using rule 26
	"using"        reduce using rule 26
	"event"        reduce using rule 26
	"modifier"     reduce using rule 26
	"enum"         reduce using rule 26
	"}"            reduce using rule 26
	ident          reduce using rule 26


State 38

	ContractPart -> ModifierDefinition .                (rule 27)

	"string"       reduce using rule 27
	function       reduce using rule 27
	"address"      reduce using rule 27
	"bool"         reduce using rule 27
	"var"          reduce using rule 27
	"using"        reduce using rule 27
	"event"        reduce using rule 27
	"modifier"     reduce using rule 27
	"enum"         reduce using rule 27
	"}"            reduce using rule 27
	ident          reduce using rule 27


State 39

	ContractPart -> EnumDefinition .                    (rule 28)

	"string"       reduce using rule 28
	function       reduce using rule 28
	"address"      reduce using rule 28
	"bool"         reduce using rule 28
	"var"          reduce using rule 28
	"using"        reduce using rule 28
	"event"        reduce using rule 28
	"modifier"     reduce using rule 28
	"enum"         reduce using rule 28
	"}"            reduce using rule 28
	ident          reduce using rule 28


State 40

	ContractPart -> StateVarDec .                       (rule 23)

	"string"       reduce using rule 23
	function       reduce using rule 23
	"address"      reduce using rule 23
	"bool"         reduce using rule 23
	"var"          reduce using rule 23
	"using"        reduce using rule 23
	"event"        reduce using rule 23
	"modifier"     reduce using rule 23
	"enum"         reduce using rule 23
	"}"            reduce using rule 23
	ident          reduce using rule 23


State 41

	ContractPart -> UsingForDec .                       (rule 24)

	"string"       reduce using rule 24
	function       reduce using rule 24
	"address"      reduce using rule 24
	"bool"         reduce using rule 24
	"var"          reduce using rule 24
	"using"        reduce using rule 24
	"event"        reduce using rule 24
	"modifier"     reduce using rule 24
	"enum"         reduce using rule 24
	"}"            reduce using rule 24
	ident          reduce using rule 24


State 42

	StateVarDec -> TypeName . zero(AssVar) ident zero(MExpression) ";"    (rule 63)

	"public"       shift, and enter state 84
	"internal"     shift, and enter state 85
	"private"      shift, and enter state 86
	"constant"     shift, and enter state 87
	ident          reduce using rule 129

	AssVar         goto state 82
	zero(AssVar)   goto state 83

State 43

	TypeName -> UserDefinedTypeName .                   (rule 68)

	"public"       reduce using rule 68
	"internal"     reduce using rule 68
	"private"      reduce using rule 68
	"constant"     reduce using rule 68
	"memory"       reduce using rule 68
	"storage"      reduce using rule 68
	";"            reduce using rule 68
	ident          reduce using rule 68


State 44

	TypeName -> ElementaryTypeName .                    (rule 67)

	"public"       reduce using rule 67
	"internal"     reduce using rule 67
	"private"      reduce using rule 67
	"constant"     reduce using rule 67
	"memory"       reduce using rule 67
	"storage"      reduce using rule 67
	";"            reduce using rule 67
	ident          reduce using rule 67


State 45

	ContractDefinition -> ConLibInt ident zero(InheritanceSpecList) "{" list(ContractPart) . "}"    (rule 14)

	"}"            shift, and enter state 81


State 46

	list(ContractPart) -> list1(ContractPart) .         (rule 108)

	"}"            reduce using rule 108


State 47

	ElementaryTypeName -> "string" .                    (rule 105)

	"public"       reduce using rule 105
	"internal"     reduce using rule 105
	"private"      reduce using rule 105
	"constant"     reduce using rule 105
	"memory"       reduce using rule 105
	"storage"      reduce using rule 105
	";"            reduce using rule 105
	ident          reduce using rule 105


State 48

	FunctionDefinition -> function . ident ParameterList list(FuncMods) zero(ReturnParam) TermBlock    (rule 29)

	ident          shift, and enter state 80


State 49

	ElementaryTypeName -> "address" .                   (rule 102)

	"public"       reduce using rule 102
	"internal"     reduce using rule 102
	"private"      reduce using rule 102
	"constant"     reduce using rule 102
	"memory"       reduce using rule 102
	"storage"      reduce using rule 102
	";"            reduce using rule 102
	ident          reduce using rule 102


State 50

	ElementaryTypeName -> "bool" .                      (rule 103)

	"public"       reduce using rule 103
	"internal"     reduce using rule 103
	"private"      reduce using rule 103
	"constant"     reduce using rule 103
	"memory"       reduce using rule 103
	"storage"      reduce using rule 103
	";"            reduce using rule 103
	ident          reduce using rule 103


State 51

	ElementaryTypeName -> "var" .                       (rule 104)

	"public"       reduce using rule 104
	"internal"     reduce using rule 104
	"private"      reduce using rule 104
	"constant"     reduce using rule 104
	"memory"       reduce using rule 104
	"storage"      reduce using rule 104
	";"            reduce using rule 104
	ident          reduce using rule 104


State 52

	UsingForDec -> "using" . ident "for" TypeName ";"    (rule 64)

	ident          shift, and enter state 79


State 53

	EventDefinition -> "event" . ident zero(EventParamList) zero(AnonList) ";"    (rule 30)

	ident          shift, and enter state 78


State 54

	ModifierDefinition -> "modifier" . ident zero(ParameterList) TermBlock    (rule 31)

	ident          shift, and enter state 77


State 55

	EnumDefinition -> "enum" . ident "{" EnumValList "}"    (rule 34)

	ident          shift, and enter state 76


State 56

	zero(InhExpList) -> InhExpList .                    (rule 136)

	"{"            reduce using rule 136
	","            reduce using rule 136


State 57

	InheritanceSpecifier -> UserDefinedTypeName zero(InhExpList) .    (rule 20)

	"{"            reduce using rule 20
	","            reduce using rule 20


State 58

	InhExpList -> "(" . Expression list(CSExpList) ")"    (rule 21)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 67
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 59

	list1(OMInheritanceSpec) -> OMInheritanceSpec .     (rule 164)
	list1(OMInheritanceSpec) -> OMInheritanceSpec . list1(OMInheritanceSpec)    (rule 165)

	"{"            reduce using rule 164
	","            shift, and enter state 62

	OMInheritanceSpecgoto state 59
	list1(OMInheritanceSpec)goto state 66

State 60

	InheritanceSpecList -> "is" InheritanceSpecifier list(OMInheritanceSpec) .    (rule 18)

	"{"            reduce using rule 18


State 61

	list(OMInheritanceSpec) -> list1(OMInheritanceSpec) .    (rule 120)

	"{"            reduce using rule 120


State 62

	OMInheritanceSpec -> "," . InheritanceSpecifier     (rule 19)

	ident          shift, and enter state 33

	InheritanceSpecifiergoto state 65
	UserDefinedTypeNamegoto state 32

State 63

	ImportDirective -> "import" ImportAster ImportAs "from" stringLiteral . ";"    (rule 9)

	";"            shift, and enter state 64


State 64

	ImportDirective -> "import" ImportAster ImportAs "from" stringLiteral ";" .    (rule 9)

	"pragma"       reduce using rule 9
	"import"       reduce using rule 9
	contract       reduce using rule 9
	"library"      reduce using rule 9
	"interface"    reduce using rule 9
	%eof           reduce using rule 9


State 65

	OMInheritanceSpec -> "," InheritanceSpecifier .     (rule 19)

	"{"            reduce using rule 19
	","            reduce using rule 19


State 66

	list1(OMInheritanceSpec) -> OMInheritanceSpec list1(OMInheritanceSpec) .    (rule 165)

	"{"            reduce using rule 165


State 67

	InhExpList -> "(" Expression . list(CSExpList) ")"    (rule 21)
	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	","            shift, and enter state 109
	")"            reduce using rule 107

	CSExpList      goto state 100
	list(CSExpList)goto state 101
	list1(CSExpList)goto state 102

State 68

	Expression -> PrimaryExpression .                   (rule 84)

	"decimalnum"   reduce using rule 84
	"true"         reduce using rule 84
	"false"        reduce using rule 84
	"*"            reduce using rule 84
	"/"            reduce using rule 84
	"**"           reduce using rule 84
	"%"            reduce using rule 84
	"+"            reduce using rule 84
	"-"            reduce using rule 84
	";"            reduce using rule 84
	","            reduce using rule 84
	ident          reduce using rule 84
	stringLiteral  reduce using rule 84
	")"            reduce using rule 84


State 69

	PrimaryExpression -> BooleanLiteral .               (rule 94)

	"decimalnum"   reduce using rule 94
	"true"         reduce using rule 94
	"false"        reduce using rule 94
	"*"            reduce using rule 94
	"/"            reduce using rule 94
	"**"           reduce using rule 94
	"%"            reduce using rule 94
	"+"            reduce using rule 94
	"-"            reduce using rule 94
	";"            reduce using rule 94
	","            reduce using rule 94
	ident          reduce using rule 94
	stringLiteral  reduce using rule 94
	")"            reduce using rule 94


State 70

	PrimaryExpression -> NumberLiteral .                (rule 95)

	"decimalnum"   reduce using rule 95
	"true"         reduce using rule 95
	"false"        reduce using rule 95
	"*"            reduce using rule 95
	"/"            reduce using rule 95
	"**"           reduce using rule 95
	"%"            reduce using rule 95
	"+"            reduce using rule 95
	"-"            reduce using rule 95
	";"            reduce using rule 95
	","            reduce using rule 95
	ident          reduce using rule 95
	stringLiteral  reduce using rule 95
	")"            reduce using rule 95


State 71

	NumberLiteral -> "decimalnum" . numberunit          (rule 100)

	numberunit     shift, and enter state 99


State 72

	BooleanLiteral -> "true" .                          (rule 98)

	"decimalnum"   reduce using rule 98
	"true"         reduce using rule 98
	"false"        reduce using rule 98
	"*"            reduce using rule 98
	"/"            reduce using rule 98
	"**"           reduce using rule 98
	"%"            reduce using rule 98
	"+"            reduce using rule 98
	"-"            reduce using rule 98
	";"            reduce using rule 98
	","            reduce using rule 98
	ident          reduce using rule 98
	stringLiteral  reduce using rule 98
	")"            reduce using rule 98


State 73

	BooleanLiteral -> "false" .                         (rule 99)

	"decimalnum"   reduce using rule 99
	"true"         reduce using rule 99
	"false"        reduce using rule 99
	"*"            reduce using rule 99
	"/"            reduce using rule 99
	"**"           reduce using rule 99
	"%"            reduce using rule 99
	"+"            reduce using rule 99
	"-"            reduce using rule 99
	";"            reduce using rule 99
	","            reduce using rule 99
	ident          reduce using rule 99
	stringLiteral  reduce using rule 99
	")"            reduce using rule 99


State 74

	PrimaryExpression -> ident .                        (rule 97)

	"decimalnum"   reduce using rule 97
	"true"         reduce using rule 97
	"false"        reduce using rule 97
	"*"            reduce using rule 97
	"/"            reduce using rule 97
	"**"           reduce using rule 97
	"%"            reduce using rule 97
	"+"            reduce using rule 97
	"-"            reduce using rule 97
	";"            reduce using rule 97
	","            reduce using rule 97
	ident          reduce using rule 97
	stringLiteral  reduce using rule 97
	")"            reduce using rule 97


State 75

	PrimaryExpression -> stringLiteral .                (rule 96)

	"decimalnum"   reduce using rule 96
	"true"         reduce using rule 96
	"false"        reduce using rule 96
	"*"            reduce using rule 96
	"/"            reduce using rule 96
	"**"           reduce using rule 96
	"%"            reduce using rule 96
	"+"            reduce using rule 96
	"-"            reduce using rule 96
	";"            reduce using rule 96
	","            reduce using rule 96
	ident          reduce using rule 96
	stringLiteral  reduce using rule 96
	")"            reduce using rule 96


State 76

	EnumDefinition -> "enum" ident . "{" EnumValList "}"    (rule 34)

	"{"            shift, and enter state 98


State 77

	ModifierDefinition -> "modifier" ident . zero(ParameterList) TermBlock    (rule 31)

	"{"            reduce using rule 143
	";"            reduce using rule 143
	"("            shift, and enter state 91

	ParameterList  goto state 96
	zero(ParameterList)goto state 97

State 78

	EventDefinition -> "event" ident . zero(EventParamList) zero(AnonList) ";"    (rule 30)

	"anonymous"    reduce using rule 133
	";"            reduce using rule 133
	"("            shift, and enter state 95

	EventParamList goto state 93
	zero(EventParamList)goto state 94

State 79

	UsingForDec -> "using" ident . "for" TypeName ";"    (rule 64)

	"for"          shift, and enter state 92


State 80

	FunctionDefinition -> function ident . ParameterList list(FuncMods) zero(ReturnParam) TermBlock    (rule 29)

	"("            shift, and enter state 91

	ParameterList  goto state 90

State 81

	ContractDefinition -> ConLibInt ident zero(InheritanceSpecList) "{" list(ContractPart) "}" .    (rule 14)

	"pragma"       reduce using rule 14
	"import"       reduce using rule 14
	contract       reduce using rule 14
	"library"      reduce using rule 14
	"interface"    reduce using rule 14
	%eof           reduce using rule 14


State 82

	zero(AssVar) -> AssVar .                            (rule 128)

	ident          reduce using rule 128


State 83

	StateVarDec -> TypeName zero(AssVar) . ident zero(MExpression) ";"    (rule 63)

	ident          shift, and enter state 89


State 84

	AssVar -> "public" .                                (rule 69)

	ident          reduce using rule 69


State 85

	AssVar -> "internal" .                              (rule 71)

	ident          reduce using rule 71


State 86

	AssVar -> "private" .                               (rule 70)

	ident          reduce using rule 70


State 87

	AssVar -> "constant" .                              (rule 72)

	ident          reduce using rule 72


State 88

	list1(ContractPart) -> ContractPart list1(ContractPart) .    (rule 153)

	"}"            reduce using rule 153


State 89

	StateVarDec -> TypeName zero(AssVar) ident . zero(MExpression) ";"    (rule 63)

	"="            shift, and enter state 154
	";"            reduce using rule 141

	MExpression    goto state 152
	zero(MExpression)goto state 153

State 90

	FunctionDefinition -> function ident ParameterList . list(FuncMods) zero(ReturnParam) TermBlock    (rule 29)

	"external"     shift, and enter state 143
	"public"       shift, and enter state 144
	"internal"     shift, and enter state 145
	"private"      shift, and enter state 146
	"constant"     shift, and enter state 147
	"view"         shift, and enter state 148
	"pure"         shift, and enter state 149
	"payable"      shift, and enter state 150
	"returns"      reduce using rule 115
	"{"            reduce using rule 115
	";"            reduce using rule 115
	ident          shift, and enter state 151

	ModifierInvocationgoto state 137
	FuncMods       goto state 138
	StateMutabilitygoto state 139
	FuncVar        goto state 140
	list(FuncMods) goto state 141
	list1(FuncMods)goto state 142

State 91

	ParameterList -> "(" . zero(Parameters) ")"         (rule 43)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33
	")"            reduce using rule 145

	Parameters     goto state 133
	Parameter      goto state 134
	TypeName       goto state 135
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44
	zero(Parameters)goto state 136

State 92

	UsingForDec -> "using" ident "for" . TypeName ";"    (rule 64)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33

	TypeName       goto state 132
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44

State 93

	zero(EventParamList) -> EventParamList .            (rule 132)

	"anonymous"    reduce using rule 132
	";"            reduce using rule 132


State 94

	EventDefinition -> "event" ident zero(EventParamList) . zero(AnonList) ";"    (rule 30)

	"anonymous"    shift, and enter state 131
	";"            reduce using rule 127

	AnonList       goto state 129
	zero(AnonList) goto state 130

State 95

	EventParamList -> "(" . zero(EventParams) ")"       (rule 38)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33
	")"            reduce using rule 135

	EventParams    goto state 125
	EParameters    goto state 126
	TypeName       goto state 127
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44
	zero(EventParams)goto state 128

State 96

	zero(ParameterList) -> ParameterList .              (rule 142)

	"{"            reduce using rule 142
	";"            reduce using rule 142


State 97

	ModifierDefinition -> "modifier" ident zero(ParameterList) . TermBlock    (rule 31)

	"{"            shift, and enter state 123
	";"            shift, and enter state 124

	TermBlock      goto state 122

State 98

	EnumDefinition -> "enum" ident "{" . EnumValList "}"    (rule 34)

	ident          shift, and enter state 121

	EnumValue      goto state 119
	EnumValList    goto state 120

State 99

	NumberLiteral -> "decimalnum" numberunit .          (rule 100)

	"decimalnum"   reduce using rule 100
	"true"         reduce using rule 100
	"false"        reduce using rule 100
	"*"            reduce using rule 100
	"/"            reduce using rule 100
	"**"           reduce using rule 100
	"%"            reduce using rule 100
	"+"            reduce using rule 100
	"-"            reduce using rule 100
	";"            reduce using rule 100
	","            reduce using rule 100
	ident          reduce using rule 100
	stringLiteral  reduce using rule 100
	")"            reduce using rule 100


State 100

	list1(CSExpList) -> CSExpList .                     (rule 150)
	list1(CSExpList) -> CSExpList . list1(CSExpList)    (rule 151)

	","            shift, and enter state 109
	")"            reduce using rule 150

	CSExpList      goto state 100
	list1(CSExpList)goto state 118

State 101

	InhExpList -> "(" Expression list(CSExpList) . ")"    (rule 21)

	")"            shift, and enter state 117


State 102

	list(CSExpList) -> list1(CSExpList) .               (rule 106)

	")"            reduce using rule 106


State 103

	Expression -> Expression "*" . Expression           (rule 79)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 116
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 104

	Expression -> Expression "/" . Expression           (rule 80)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 115
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 105

	Expression -> Expression "**" . Expression          (rule 78)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 114
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 106

	Expression -> Expression "%" . Expression           (rule 81)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 113
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 107

	Expression -> Expression "+" . Expression           (rule 82)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 112
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 108

	Expression -> Expression "-" . Expression           (rule 83)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 111
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 109

	CSExpList -> "," . Expression                       (rule 22)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 110
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 110

	CSExpList -> "," Expression .                       (rule 22)
	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	","            reduce using rule 22
	")"            reduce using rule 22


State 111

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)
	Expression -> Expression "-" Expression .           (rule 83)

	"decimalnum"   reduce using rule 83
	"true"         reduce using rule 83
	"false"        reduce using rule 83
	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            reduce using rule 83
	"-"            reduce using rule 83
	";"            reduce using rule 83
	","            reduce using rule 83
	ident          reduce using rule 83
	stringLiteral  reduce using rule 83
	")"            reduce using rule 83


State 112

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression "+" Expression .           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 82
	"true"         reduce using rule 82
	"false"        reduce using rule 82
	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            reduce using rule 82
	"-"            reduce using rule 82
	";"            reduce using rule 82
	","            reduce using rule 82
	ident          reduce using rule 82
	stringLiteral  reduce using rule 82
	")"            reduce using rule 82


State 113

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression "%" Expression .           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 81
	"true"         reduce using rule 81
	"false"        reduce using rule 81
	"*"            reduce using rule 81
	"/"            reduce using rule 81
	"**"           shift, and enter state 105
	"%"            reduce using rule 81
	"+"            reduce using rule 81
	"-"            reduce using rule 81
	";"            reduce using rule 81
	","            reduce using rule 81
	ident          reduce using rule 81
	stringLiteral  reduce using rule 81
	")"            reduce using rule 81


State 114

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression "**" Expression .          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 78
	"true"         reduce using rule 78
	"false"        reduce using rule 78
	"*"            reduce using rule 78
	"/"            reduce using rule 78
	"**"           reduce using rule 78
	"%"            reduce using rule 78
	"+"            reduce using rule 78
	"-"            reduce using rule 78
	";"            reduce using rule 78
	","            reduce using rule 78
	ident          reduce using rule 78
	stringLiteral  reduce using rule 78
	")"            reduce using rule 78


State 115

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression "/" Expression .           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 80
	"true"         reduce using rule 80
	"false"        reduce using rule 80
	"*"            reduce using rule 80
	"/"            reduce using rule 80
	"**"           shift, and enter state 105
	"%"            reduce using rule 80
	"+"            reduce using rule 80
	"-"            reduce using rule 80
	";"            reduce using rule 80
	","            reduce using rule 80
	ident          reduce using rule 80
	stringLiteral  reduce using rule 80
	")"            reduce using rule 80


State 116

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression "*" Expression .           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 79
	"true"         reduce using rule 79
	"false"        reduce using rule 79
	"*"            reduce using rule 79
	"/"            reduce using rule 79
	"**"           shift, and enter state 105
	"%"            reduce using rule 79
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	";"            reduce using rule 79
	","            reduce using rule 79
	ident          reduce using rule 79
	stringLiteral  reduce using rule 79
	")"            reduce using rule 79


State 117

	InhExpList -> "(" Expression list(CSExpList) ")" .    (rule 21)

	"{"            reduce using rule 21
	","            reduce using rule 21


State 118

	list1(CSExpList) -> CSExpList list1(CSExpList) .    (rule 151)

	")"            reduce using rule 151


State 119

	EnumValList -> EnumValue . list(MultiEnumValue)     (rule 36)

	"}"            reduce using rule 119
	","            shift, and enter state 193

	MultiEnumValue goto state 190
	list(MultiEnumValue)goto state 191
	list1(MultiEnumValue)goto state 192

State 120

	EnumDefinition -> "enum" ident "{" EnumValList . "}"    (rule 34)

	"}"            shift, and enter state 189


State 121

	EnumValue -> ident .                                (rule 35)

	"}"            reduce using rule 35
	","            reduce using rule 35


State 122

	ModifierDefinition -> "modifier" ident zero(ParameterList) TermBlock .    (rule 31)

	"string"       reduce using rule 31
	function       reduce using rule 31
	"address"      reduce using rule 31
	"bool"         reduce using rule 31
	"var"          reduce using rule 31
	"using"        reduce using rule 31
	"event"        reduce using rule 31
	"modifier"     reduce using rule 31
	"enum"         reduce using rule 31
	"}"            reduce using rule 31
	ident          reduce using rule 31


State 123

	TermBlock -> "{" . list(Statement) "}"              (rule 52)

	"decimalnum"   shift, and enter state 71
	"var"          shift, and enter state 187
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	"if"           shift, and enter state 188
	"}"            reduce using rule 125
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 179
	Statement      goto state 180
	SimpleStatementgoto state 181
	VariableDefinitiongoto state 182
	ExpressionStatementgoto state 183
	IfStatement    goto state 184
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70
	list(Statement)goto state 185
	list1(Statement)goto state 186

State 124

	TermBlock -> ";" .                                  (rule 51)

	"string"       reduce using rule 51
	function       reduce using rule 51
	"address"      reduce using rule 51
	"bool"         reduce using rule 51
	"var"          reduce using rule 51
	"using"        reduce using rule 51
	"event"        reduce using rule 51
	"modifier"     reduce using rule 51
	"enum"         reduce using rule 51
	"}"            reduce using rule 51
	ident          reduce using rule 51


State 125

	zero(EventParams) -> EventParams .                  (rule 134)

	")"            reduce using rule 134


State 126

	EventParams -> EParameters . list(EParamList)       (rule 39)

	","            shift, and enter state 178
	")"            reduce using rule 111

	EParamList     goto state 175
	list(EParamList)goto state 176
	list1(EParamList)goto state 177

State 127

	EParameters -> TypeName . ident                     (rule 41)

	ident          shift, and enter state 174


State 128

	EventParamList -> "(" zero(EventParams) . ")"       (rule 38)

	")"            shift, and enter state 173


State 129

	zero(AnonList) -> AnonList .                        (rule 126)

	";"            reduce using rule 126


State 130

	EventDefinition -> "event" ident zero(EventParamList) zero(AnonList) . ";"    (rule 30)

	";"            shift, and enter state 172


State 131

	AnonList -> "anonymous" .                           (rule 42)

	";"            reduce using rule 42


State 132

	UsingForDec -> "using" ident "for" TypeName . ";"    (rule 64)

	";"            shift, and enter state 171


State 133

	zero(Parameters) -> Parameters .                    (rule 144)

	")"            reduce using rule 144


State 134

	Parameters -> Parameter . list(ParamList)           (rule 44)

	","            shift, and enter state 170
	")"            reduce using rule 123

	ParamList      goto state 167
	list(ParamList)goto state 168
	list1(ParamList)goto state 169

State 135

	Parameter -> TypeName . zero(StorageLocation) ident    (rule 46)

	"memory"       shift, and enter state 165
	"storage"      shift, and enter state 166
	ident          reduce using rule 149

	StorageLocationgoto state 163
	zero(StorageLocation)goto state 164

State 136

	ParameterList -> "(" zero(Parameters) . ")"         (rule 43)

	")"            shift, and enter state 162


State 137

	FuncMods -> ModifierInvocation .                    (rule 47)

	"external"     reduce using rule 47
	"public"       reduce using rule 47
	"internal"     reduce using rule 47
	"private"      reduce using rule 47
	"constant"     reduce using rule 47
	"view"         reduce using rule 47
	"pure"         reduce using rule 47
	"payable"      reduce using rule 47
	"returns"      reduce using rule 47
	"{"            reduce using rule 47
	";"            reduce using rule 47
	ident          reduce using rule 47


State 138

	list1(FuncMods) -> FuncMods .                       (rule 158)
	list1(FuncMods) -> FuncMods . list1(FuncMods)       (rule 159)

	"external"     shift, and enter state 143
	"public"       shift, and enter state 144
	"internal"     shift, and enter state 145
	"private"      shift, and enter state 146
	"constant"     shift, and enter state 147
	"view"         shift, and enter state 148
	"pure"         shift, and enter state 149
	"payable"      shift, and enter state 150
	"returns"      reduce using rule 158
	"{"            reduce using rule 158
	";"            reduce using rule 158
	ident          shift, and enter state 151

	ModifierInvocationgoto state 137
	FuncMods       goto state 138
	StateMutabilitygoto state 139
	FuncVar        goto state 140
	list1(FuncMods)goto state 161

State 139

	FuncMods -> StateMutability .                       (rule 48)

	"external"     reduce using rule 48
	"public"       reduce using rule 48
	"internal"     reduce using rule 48
	"private"      reduce using rule 48
	"constant"     reduce using rule 48
	"view"         reduce using rule 48
	"pure"         reduce using rule 48
	"payable"      reduce using rule 48
	"returns"      reduce using rule 48
	"{"            reduce using rule 48
	";"            reduce using rule 48
	ident          reduce using rule 48


State 140

	FuncMods -> FuncVar .                               (rule 49)

	"external"     reduce using rule 49
	"public"       reduce using rule 49
	"internal"     reduce using rule 49
	"private"      reduce using rule 49
	"constant"     reduce using rule 49
	"view"         reduce using rule 49
	"pure"         reduce using rule 49
	"payable"      reduce using rule 49
	"returns"      reduce using rule 49
	"{"            reduce using rule 49
	";"            reduce using rule 49
	ident          reduce using rule 49


State 141

	FunctionDefinition -> function ident ParameterList list(FuncMods) . zero(ReturnParam) TermBlock    (rule 29)

	"returns"      shift, and enter state 160
	"{"            reduce using rule 147
	";"            reduce using rule 147

	ReturnParam    goto state 158
	zero(ReturnParam)goto state 159

State 142

	list(FuncMods) -> list1(FuncMods) .                 (rule 114)

	"returns"      reduce using rule 114
	"{"            reduce using rule 114
	";"            reduce using rule 114


State 143

	FuncVar -> "external" .                             (rule 59)

	"external"     reduce using rule 59
	"public"       reduce using rule 59
	"internal"     reduce using rule 59
	"private"      reduce using rule 59
	"constant"     reduce using rule 59
	"view"         reduce using rule 59
	"pure"         reduce using rule 59
	"payable"      reduce using rule 59
	"returns"      reduce using rule 59
	"{"            reduce using rule 59
	";"            reduce using rule 59
	ident          reduce using rule 59


State 144

	FuncVar -> "public" .                               (rule 62)

	"external"     reduce using rule 62
	"public"       reduce using rule 62
	"internal"     reduce using rule 62
	"private"      reduce using rule 62
	"constant"     reduce using rule 62
	"view"         reduce using rule 62
	"pure"         reduce using rule 62
	"payable"      reduce using rule 62
	"returns"      reduce using rule 62
	"{"            reduce using rule 62
	";"            reduce using rule 62
	ident          reduce using rule 62


State 145

	FuncVar -> "internal" .                             (rule 60)

	"external"     reduce using rule 60
	"public"       reduce using rule 60
	"internal"     reduce using rule 60
	"private"      reduce using rule 60
	"constant"     reduce using rule 60
	"view"         reduce using rule 60
	"pure"         reduce using rule 60
	"payable"      reduce using rule 60
	"returns"      reduce using rule 60
	"{"            reduce using rule 60
	";"            reduce using rule 60
	ident          reduce using rule 60


State 146

	FuncVar -> "private" .                              (rule 61)

	"external"     reduce using rule 61
	"public"       reduce using rule 61
	"internal"     reduce using rule 61
	"private"      reduce using rule 61
	"constant"     reduce using rule 61
	"view"         reduce using rule 61
	"pure"         reduce using rule 61
	"payable"      reduce using rule 61
	"returns"      reduce using rule 61
	"{"            reduce using rule 61
	";"            reduce using rule 61
	ident          reduce using rule 61


State 147

	StateMutability -> "constant" .                     (rule 54)

	"external"     reduce using rule 54
	"public"       reduce using rule 54
	"internal"     reduce using rule 54
	"private"      reduce using rule 54
	"constant"     reduce using rule 54
	"view"         reduce using rule 54
	"pure"         reduce using rule 54
	"payable"      reduce using rule 54
	"returns"      reduce using rule 54
	"{"            reduce using rule 54
	";"            reduce using rule 54
	ident          reduce using rule 54


State 148

	StateMutability -> "view" .                         (rule 55)

	"external"     reduce using rule 55
	"public"       reduce using rule 55
	"internal"     reduce using rule 55
	"private"      reduce using rule 55
	"constant"     reduce using rule 55
	"view"         reduce using rule 55
	"pure"         reduce using rule 55
	"payable"      reduce using rule 55
	"returns"      reduce using rule 55
	"{"            reduce using rule 55
	";"            reduce using rule 55
	ident          reduce using rule 55


State 149

	StateMutability -> "pure" .                         (rule 53)

	"external"     reduce using rule 53
	"public"       reduce using rule 53
	"internal"     reduce using rule 53
	"private"      reduce using rule 53
	"constant"     reduce using rule 53
	"view"         reduce using rule 53
	"pure"         reduce using rule 53
	"payable"      reduce using rule 53
	"returns"      reduce using rule 53
	"{"            reduce using rule 53
	";"            reduce using rule 53
	ident          reduce using rule 53


State 150

	StateMutability -> "payable" .                      (rule 56)

	"external"     reduce using rule 56
	"public"       reduce using rule 56
	"internal"     reduce using rule 56
	"private"      reduce using rule 56
	"constant"     reduce using rule 56
	"view"         reduce using rule 56
	"pure"         reduce using rule 56
	"payable"      reduce using rule 56
	"returns"      reduce using rule 56
	"{"            reduce using rule 56
	";"            reduce using rule 56
	ident          reduce using rule 56


State 151

	ModifierInvocation -> ident . "(" list(ModExpList) ")"    (rule 32)

	"("            shift, and enter state 157


State 152

	zero(MExpression) -> MExpression .                  (rule 140)

	";"            reduce using rule 140


State 153

	StateVarDec -> TypeName zero(AssVar) ident zero(MExpression) . ";"    (rule 63)

	";"            shift, and enter state 156


State 154

	MExpression -> "=" . Expression                     (rule 75)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 155
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 155

	MExpression -> "=" Expression .                     (rule 75)
	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	";"            reduce using rule 75


State 156

	StateVarDec -> TypeName zero(AssVar) ident zero(MExpression) ";" .    (rule 63)

	"string"       reduce using rule 63
	function       reduce using rule 63
	"address"      reduce using rule 63
	"bool"         reduce using rule 63
	"var"          reduce using rule 63
	"using"        reduce using rule 63
	"event"        reduce using rule 63
	"modifier"     reduce using rule 63
	"enum"         reduce using rule 63
	"}"            reduce using rule 63
	ident          reduce using rule 63


State 157

	ModifierInvocation -> ident "(" . list(ModExpList) ")"    (rule 32)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75
	")"            reduce using rule 117

	ModExpList     goto state 209
	ExpressionList goto state 210
	Expression     goto state 211
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70
	list(ModExpList)goto state 212
	list1(ModExpList)goto state 213

State 158

	zero(ReturnParam) -> ReturnParam .                  (rule 146)

	"{"            reduce using rule 146
	";"            reduce using rule 146


State 159

	FunctionDefinition -> function ident ParameterList list(FuncMods) zero(ReturnParam) . TermBlock    (rule 29)

	"{"            shift, and enter state 123
	";"            shift, and enter state 124

	TermBlock      goto state 208

State 160

	ReturnParam -> "returns" . ParameterList            (rule 50)

	"("            shift, and enter state 91

	ParameterList  goto state 207

State 161

	list1(FuncMods) -> FuncMods list1(FuncMods) .       (rule 159)

	"returns"      reduce using rule 159
	"{"            reduce using rule 159
	";"            reduce using rule 159


State 162

	ParameterList -> "(" zero(Parameters) ")" .         (rule 43)

	"external"     reduce using rule 43
	"public"       reduce using rule 43
	"internal"     reduce using rule 43
	"private"      reduce using rule 43
	"constant"     reduce using rule 43
	"view"         reduce using rule 43
	"pure"         reduce using rule 43
	"payable"      reduce using rule 43
	"returns"      reduce using rule 43
	"{"            reduce using rule 43
	";"            reduce using rule 43
	ident          reduce using rule 43


State 163

	zero(StorageLocation) -> StorageLocation .          (rule 148)

	ident          reduce using rule 148


State 164

	Parameter -> TypeName zero(StorageLocation) . ident    (rule 46)

	ident          shift, and enter state 206


State 165

	StorageLocation -> "memory" .                       (rule 57)

	ident          reduce using rule 57


State 166

	StorageLocation -> "storage" .                      (rule 58)

	ident          reduce using rule 58


State 167

	list1(ParamList) -> ParamList .                     (rule 166)
	list1(ParamList) -> ParamList . list1(ParamList)    (rule 167)

	","            shift, and enter state 170
	")"            reduce using rule 166

	ParamList      goto state 167
	list1(ParamList)goto state 205

State 168

	Parameters -> Parameter list(ParamList) .           (rule 44)

	")"            reduce using rule 44


State 169

	list(ParamList) -> list1(ParamList) .               (rule 122)

	")"            reduce using rule 122


State 170

	ParamList -> "," . Parameter                        (rule 45)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33

	Parameter      goto state 204
	TypeName       goto state 135
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44

State 171

	UsingForDec -> "using" ident "for" TypeName ";" .    (rule 64)

	"string"       reduce using rule 64
	function       reduce using rule 64
	"address"      reduce using rule 64
	"bool"         reduce using rule 64
	"var"          reduce using rule 64
	"using"        reduce using rule 64
	"event"        reduce using rule 64
	"modifier"     reduce using rule 64
	"enum"         reduce using rule 64
	"}"            reduce using rule 64
	ident          reduce using rule 64


State 172

	EventDefinition -> "event" ident zero(EventParamList) zero(AnonList) ";" .    (rule 30)

	"string"       reduce using rule 30
	function       reduce using rule 30
	"address"      reduce using rule 30
	"bool"         reduce using rule 30
	"var"          reduce using rule 30
	"using"        reduce using rule 30
	"event"        reduce using rule 30
	"modifier"     reduce using rule 30
	"enum"         reduce using rule 30
	"}"            reduce using rule 30
	ident          reduce using rule 30


State 173

	EventParamList -> "(" zero(EventParams) ")" .       (rule 38)

	"anonymous"    reduce using rule 38
	";"            reduce using rule 38


State 174

	EParameters -> TypeName ident .                     (rule 41)

	","            reduce using rule 41
	")"            reduce using rule 41


State 175

	list1(EParamList) -> EParamList .                   (rule 154)
	list1(EParamList) -> EParamList . list1(EParamList)    (rule 155)

	","            shift, and enter state 178
	")"            reduce using rule 154

	EParamList     goto state 175
	list1(EParamList)goto state 203

State 176

	EventParams -> EParameters list(EParamList) .       (rule 39)

	")"            reduce using rule 39


State 177

	list(EParamList) -> list1(EParamList) .             (rule 110)

	")"            reduce using rule 110


State 178

	EParamList -> "," . EParameters                     (rule 40)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33

	EParameters    goto state 202
	TypeName       goto state 127
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44

State 179

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)
	ExpressionStatement -> Expression .                 (rule 91)

	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	";"            reduce using rule 91


State 180

	list1(Statement) -> Statement .                     (rule 168)
	list1(Statement) -> Statement . list1(Statement)    (rule 169)

	"decimalnum"   shift, and enter state 71
	"var"          shift, and enter state 187
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	"if"           shift, and enter state 188
	"}"            reduce using rule 168
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 179
	Statement      goto state 180
	SimpleStatementgoto state 181
	VariableDefinitiongoto state 182
	ExpressionStatementgoto state 183
	IfStatement    goto state 184
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70
	list1(Statement)goto state 201

State 181

	Statement -> SimpleStatement . ";"                  (rule 86)

	";"            shift, and enter state 200


State 182

	SimpleStatement -> VariableDefinition .             (rule 87)

	";"            reduce using rule 87


State 183

	SimpleStatement -> ExpressionStatement .            (rule 88)

	";"            reduce using rule 88


State 184

	Statement -> IfStatement .                          (rule 85)

	"decimalnum"   reduce using rule 85
	"var"          reduce using rule 85
	"true"         reduce using rule 85
	"false"        reduce using rule 85
	"if"           reduce using rule 85
	"else"         reduce using rule 85
	"}"            reduce using rule 85
	ident          reduce using rule 85
	stringLiteral  reduce using rule 85


State 185

	TermBlock -> "{" list(Statement) . "}"              (rule 52)

	"}"            shift, and enter state 199


State 186

	list(Statement) -> list1(Statement) .               (rule 124)

	"}"            reduce using rule 124


State 187

	VariableDefinition -> "var" . VariableDeclaration    (rule 89)

	"string"       shift, and enter state 47
	"address"      shift, and enter state 49
	"bool"         shift, and enter state 50
	"var"          shift, and enter state 51
	ident          shift, and enter state 33

	TypeName       goto state 197
	VariableDeclarationgoto state 198
	UserDefinedTypeNamegoto state 43
	ElementaryTypeNamegoto state 44

State 188

	IfStatement -> "if" . "(" Expression ")" Statement zero(ElseState)    (rule 92)

	"("            shift, and enter state 196


State 189

	EnumDefinition -> "enum" ident "{" EnumValList "}" .    (rule 34)

	"string"       reduce using rule 34
	function       reduce using rule 34
	"address"      reduce using rule 34
	"bool"         reduce using rule 34
	"var"          reduce using rule 34
	"using"        reduce using rule 34
	"event"        reduce using rule 34
	"modifier"     reduce using rule 34
	"enum"         reduce using rule 34
	"}"            reduce using rule 34
	ident          reduce using rule 34


State 190

	list1(MultiEnumValue) -> MultiEnumValue .           (rule 162)
	list1(MultiEnumValue) -> MultiEnumValue . list1(MultiEnumValue)    (rule 163)

	"}"            reduce using rule 162
	","            shift, and enter state 193

	MultiEnumValue goto state 190
	list1(MultiEnumValue)goto state 195

State 191

	EnumValList -> EnumValue list(MultiEnumValue) .     (rule 36)

	"}"            reduce using rule 36


State 192

	list(MultiEnumValue) -> list1(MultiEnumValue) .     (rule 118)

	"}"            reduce using rule 118


State 193

	MultiEnumValue -> "," . EnumValue                   (rule 37)

	ident          shift, and enter state 121

	EnumValue      goto state 194

State 194

	MultiEnumValue -> "," EnumValue .                   (rule 37)

	"}"            reduce using rule 37
	","            reduce using rule 37


State 195

	list1(MultiEnumValue) -> MultiEnumValue list1(MultiEnumValue) .    (rule 163)

	"}"            reduce using rule 163


State 196

	IfStatement -> "if" "(" . Expression ")" Statement zero(ElseState)    (rule 92)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 221
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 197

	VariableDeclaration -> TypeName . zero(StorageLocation) ident    (rule 90)

	"memory"       shift, and enter state 165
	"storage"      shift, and enter state 166
	ident          reduce using rule 149

	StorageLocationgoto state 163
	zero(StorageLocation)goto state 220

State 198

	VariableDefinition -> "var" VariableDeclaration .    (rule 89)

	";"            reduce using rule 89


State 199

	TermBlock -> "{" list(Statement) "}" .              (rule 52)

	"string"       reduce using rule 52
	function       reduce using rule 52
	"address"      reduce using rule 52
	"bool"         reduce using rule 52
	"var"          reduce using rule 52
	"using"        reduce using rule 52
	"event"        reduce using rule 52
	"modifier"     reduce using rule 52
	"enum"         reduce using rule 52
	"}"            reduce using rule 52
	ident          reduce using rule 52


State 200

	Statement -> SimpleStatement ";" .                  (rule 86)

	"decimalnum"   reduce using rule 86
	"var"          reduce using rule 86
	"true"         reduce using rule 86
	"false"        reduce using rule 86
	"if"           reduce using rule 86
	"else"         reduce using rule 86
	"}"            reduce using rule 86
	ident          reduce using rule 86
	stringLiteral  reduce using rule 86


State 201

	list1(Statement) -> Statement list1(Statement) .    (rule 169)

	"}"            reduce using rule 169


State 202

	EParamList -> "," EParameters .                     (rule 40)

	","            reduce using rule 40
	")"            reduce using rule 40


State 203

	list1(EParamList) -> EParamList list1(EParamList) .    (rule 155)

	")"            reduce using rule 155


State 204

	ParamList -> "," Parameter .                        (rule 45)

	","            reduce using rule 45
	")"            reduce using rule 45


State 205

	list1(ParamList) -> ParamList list1(ParamList) .    (rule 167)

	")"            reduce using rule 167


State 206

	Parameter -> TypeName zero(StorageLocation) ident .    (rule 46)

	","            reduce using rule 46
	")"            reduce using rule 46


State 207

	ReturnParam -> "returns" ParameterList .            (rule 50)

	"{"            reduce using rule 50
	";"            reduce using rule 50


State 208

	FunctionDefinition -> function ident ParameterList list(FuncMods) zero(ReturnParam) TermBlock .    (rule 29)

	"string"       reduce using rule 29
	function       reduce using rule 29
	"address"      reduce using rule 29
	"bool"         reduce using rule 29
	"var"          reduce using rule 29
	"using"        reduce using rule 29
	"event"        reduce using rule 29
	"modifier"     reduce using rule 29
	"enum"         reduce using rule 29
	"}"            reduce using rule 29
	ident          reduce using rule 29


State 209

	list1(ModExpList) -> ModExpList .                   (rule 160)
	list1(ModExpList) -> ModExpList . list1(ModExpList)    (rule 161)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75
	")"            reduce using rule 160

	ModExpList     goto state 209
	ExpressionList goto state 210
	Expression     goto state 211
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70
	list1(ModExpList)goto state 219

State 210

	ModExpList -> ExpressionList .                      (rule 33)

	"decimalnum"   reduce using rule 33
	"true"         reduce using rule 33
	"false"        reduce using rule 33
	ident          reduce using rule 33
	stringLiteral  reduce using rule 33
	")"            reduce using rule 33


State 211

	ExpressionList -> Expression . list(ExprList)       (rule 76)
	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 113
	"true"         reduce using rule 113
	"false"        reduce using rule 113
	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	","            shift, and enter state 218
	ident          reduce using rule 113
	stringLiteral  reduce using rule 113
	")"            reduce using rule 113

	ExprList       goto state 215
	list(ExprList) goto state 216
	list1(ExprList)goto state 217

State 212

	ModifierInvocation -> ident "(" list(ModExpList) . ")"    (rule 32)

	")"            shift, and enter state 214


State 213

	list(ModExpList) -> list1(ModExpList) .             (rule 116)

	")"            reduce using rule 116


State 214

	ModifierInvocation -> ident "(" list(ModExpList) ")" .    (rule 32)

	"external"     reduce using rule 32
	"public"       reduce using rule 32
	"internal"     reduce using rule 32
	"private"      reduce using rule 32
	"constant"     reduce using rule 32
	"view"         reduce using rule 32
	"pure"         reduce using rule 32
	"payable"      reduce using rule 32
	"returns"      reduce using rule 32
	"{"            reduce using rule 32
	";"            reduce using rule 32
	ident          reduce using rule 32


State 215

	list1(ExprList) -> ExprList .                       (rule 156)
	list1(ExprList) -> ExprList . list1(ExprList)       (rule 157)

	"decimalnum"   reduce using rule 156
	"true"         reduce using rule 156
	"false"        reduce using rule 156
	","            shift, and enter state 218
	ident          reduce using rule 156
	stringLiteral  reduce using rule 156
	")"            reduce using rule 156

	ExprList       goto state 215
	list1(ExprList)goto state 225

State 216

	ExpressionList -> Expression list(ExprList) .       (rule 76)

	"decimalnum"   reduce using rule 76
	"true"         reduce using rule 76
	"false"        reduce using rule 76
	ident          reduce using rule 76
	stringLiteral  reduce using rule 76
	")"            reduce using rule 76


State 217

	list(ExprList) -> list1(ExprList) .                 (rule 112)

	"decimalnum"   reduce using rule 112
	"true"         reduce using rule 112
	"false"        reduce using rule 112
	ident          reduce using rule 112
	stringLiteral  reduce using rule 112
	")"            reduce using rule 112


State 218

	ExprList -> "," . Expression                        (rule 77)

	"decimalnum"   shift, and enter state 71
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 224
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 219

	list1(ModExpList) -> ModExpList list1(ModExpList) .    (rule 161)

	")"            reduce using rule 161


State 220

	VariableDeclaration -> TypeName zero(StorageLocation) . ident    (rule 90)

	ident          shift, and enter state 223


State 221

	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)
	IfStatement -> "if" "(" Expression . ")" Statement zero(ElseState)    (rule 92)

	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	")"            shift, and enter state 222


State 222

	IfStatement -> "if" "(" Expression ")" . Statement zero(ElseState)    (rule 92)

	"decimalnum"   shift, and enter state 71
	"var"          shift, and enter state 187
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	"if"           shift, and enter state 188
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 179
	Statement      goto state 226
	SimpleStatementgoto state 181
	VariableDefinitiongoto state 182
	ExpressionStatementgoto state 183
	IfStatement    goto state 184
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 223

	VariableDeclaration -> TypeName zero(StorageLocation) ident .    (rule 90)

	";"            reduce using rule 90


State 224

	ExprList -> "," Expression .                        (rule 77)
	Expression -> Expression . "**" Expression          (rule 78)
	Expression -> Expression . "*" Expression           (rule 79)
	Expression -> Expression . "/" Expression           (rule 80)
	Expression -> Expression . "%" Expression           (rule 81)
	Expression -> Expression . "+" Expression           (rule 82)
	Expression -> Expression . "-" Expression           (rule 83)

	"decimalnum"   reduce using rule 77
	"true"         reduce using rule 77
	"false"        reduce using rule 77
	"*"            shift, and enter state 103
	"/"            shift, and enter state 104
	"**"           shift, and enter state 105
	"%"            shift, and enter state 106
	"+"            shift, and enter state 107
	"-"            shift, and enter state 108
	","            reduce using rule 77
	ident          reduce using rule 77
	stringLiteral  reduce using rule 77
	")"            reduce using rule 77


State 225

	list1(ExprList) -> ExprList list1(ExprList) .       (rule 157)

	"decimalnum"   reduce using rule 157
	"true"         reduce using rule 157
	"false"        reduce using rule 157
	ident          reduce using rule 157
	stringLiteral  reduce using rule 157
	")"            reduce using rule 157


State 226

	IfStatement -> "if" "(" Expression ")" Statement . zero(ElseState)    (rule 92)

	"decimalnum"   reduce using rule 131
	"var"          reduce using rule 131
	"true"         reduce using rule 131
	"false"        reduce using rule 131
	"if"           reduce using rule 131
	"else"         shift, and enter state 229
			(reduce using rule 131)

	"}"            reduce using rule 131
	ident          reduce using rule 131
	stringLiteral  reduce using rule 131

	ElseState      goto state 227
	zero(ElseState)goto state 228

State 227

	zero(ElseState) -> ElseState .                      (rule 130)

	"decimalnum"   reduce using rule 130
	"var"          reduce using rule 130
	"true"         reduce using rule 130
	"false"        reduce using rule 130
	"if"           reduce using rule 130
	"else"         reduce using rule 130
	"}"            reduce using rule 130
	ident          reduce using rule 130
	stringLiteral  reduce using rule 130


State 228

	IfStatement -> "if" "(" Expression ")" Statement zero(ElseState) .    (rule 92)

	"decimalnum"   reduce using rule 92
	"var"          reduce using rule 92
	"true"         reduce using rule 92
	"false"        reduce using rule 92
	"if"           reduce using rule 92
	"else"         reduce using rule 92
	"}"            reduce using rule 92
	ident          reduce using rule 92
	stringLiteral  reduce using rule 92


State 229

	ElseState -> "else" . Statement                     (rule 93)

	"decimalnum"   shift, and enter state 71
	"var"          shift, and enter state 187
	"true"         shift, and enter state 72
	"false"        shift, and enter state 73
	"if"           shift, and enter state 188
	ident          shift, and enter state 74
	stringLiteral  shift, and enter state 75

	Expression     goto state 179
	Statement      goto state 230
	SimpleStatementgoto state 181
	VariableDefinitiongoto state 182
	ExpressionStatementgoto state 183
	IfStatement    goto state 184
	PrimaryExpressiongoto state 68
	BooleanLiteral goto state 69
	NumberLiteral  goto state 70

State 230

	ElseState -> "else" Statement .                     (rule 93)

	"decimalnum"   reduce using rule 93
	"var"          reduce using rule 93
	"true"         reduce using rule 93
	"false"        reduce using rule 93
	"if"           reduce using rule 93
	"else"         reduce using rule 93
	"}"            reduce using rule 93
	ident          reduce using rule 93
	stringLiteral  reduce using rule 93


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 170
Number of terminals: 68
Number of non-terminals: 94
Number of states: 231
