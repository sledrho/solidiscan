-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from parser.y
-----------------------------------------------------------------------------


rule 11 is unused
rule 12 is unused
rule 13 is unused

terminal "reservedid" is unused
terminal "decimalnum" is unused
terminal "exponent" is unused
terminal "int" is unused
terminal "boolean" is unused
terminal "true" is unused
terminal "!" is unused
terminal "&&" is unused
terminal "||" is unused
terminal "!=" is unused
terminal "<" is unused
terminal ">" is unused
terminal "<=" is unused
terminal ">=" is unused
terminal "==" is unused
terminal "[" is unused
terminal "]" is unused
terminal "." is unused
terminal "=" is unused
terminal "*" is unused
terminal "/" is unused
terminal "**" is unused
terminal "%" is unused
terminal op is unused
terminal "-" is unused
terminal "(" is unused
terminal ")" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_solidiscan -> SourceUnit                    (0)
	SourceUnit ->                                      (1)
	SourceUnit -> SourceUnit SourceUnitSol             (2)
	SourceUnitSol -> PragmaDirective                   (3)
	SourceUnitSol -> ImportDirective                   (4)
	SourceUnitSol -> ContractDefinition                (5)
	PragmaDirective -> "pragma" ident ";"              (6)
	ImportDirective -> "import" stringLiteral ";"      (7)
	ContractDefinition -> contract ident "{" ContractPart "}"   (8)
	ContractPart -> StateVariableDeclaration           (9)
	StateVariableDeclaration -> "public" ident ";"     (10)
	TypeName -> ElementaryTypeName                     (11)
	ElementaryTypeName -> ident                        (12)
	Type -> ident                                      (13)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"reservedid"   { TReservedOp _ }
	"decimalnum"   { TDec _ $$ }
	"exponent"     { TExp _ $$ }
	"int"          { TInt _ $$ }
	"pragma"       { TPragma _ }
	"import"       { TImport _ }
	"public"       { TPublic _ }
	contract       { TContract _ }
	"boolean"      { TBooleanLit _ }
	"true"         { TTrue _ }
	"!"            { TNegate _ }
	"&&"           { TAnd _ }
	"||"           { TOr _ }
	"!="           { TInEqual _ }
	"<"            { TLThan _ }
	">"            { TGThan _ }
	"<="           { TLTEq _ }
	">="           { TGTEq _ }
	"=="           { TEquality _ }
	"{"            { TLCurl _ }
	"}"            { TRCurl _ }
	"["            { TLBrack _ }
	"]"            { TRBrack _ }
	"."            { TPeriod _ }
	"="            { TEquals _ }
	"*"            { TMult _ }
	"/"            { TDiv _ }
	"**"           { TExpSym _ }
	"%"            { TModul _ }
	op             { TOp _ $$ }
	"-"            { TSub _ }
	";"            { TSemiCol _ }
	ident          { TIdent _ $$ }
	stringLiteral  { TStringLiteral _ $$ }
	"("            { TLeftParen _ }
	")"            { TRightParen _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_solidiscan rule  0
	SourceUnit      rules 1, 2
	SourceUnitSol   rules 3, 4, 5
	PragmaDirective rule  6
	ImportDirective rule  7
	ContractDefinition rule  8
	ContractPart    rule  9
	StateVariableDeclaration rule  10
	TypeName        rule  11
	ElementaryTypeName rule  12
	Type            rule  13

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"pragma"       reduce using rule 1
	"import"       reduce using rule 1
	contract       reduce using rule 1
	%eof           reduce using rule 1

	SourceUnit     goto state 2

State 1




State 2

	%start_solidiscan -> SourceUnit .                   (rule 0)
	SourceUnit -> SourceUnit . SourceUnitSol            (rule 2)

	"pragma"       shift, and enter state 7
	"import"       shift, and enter state 8
	contract       shift, and enter state 9
	%eof           accept

	SourceUnitSol  goto state 3
	PragmaDirectivegoto state 4
	ImportDirectivegoto state 5
	ContractDefinitiongoto state 6

State 3

	SourceUnit -> SourceUnit SourceUnitSol .            (rule 2)

	"pragma"       reduce using rule 2
	"import"       reduce using rule 2
	contract       reduce using rule 2
	%eof           reduce using rule 2


State 4

	SourceUnitSol -> PragmaDirective .                  (rule 3)

	"pragma"       reduce using rule 3
	"import"       reduce using rule 3
	contract       reduce using rule 3
	%eof           reduce using rule 3


State 5

	SourceUnitSol -> ImportDirective .                  (rule 4)

	"pragma"       reduce using rule 4
	"import"       reduce using rule 4
	contract       reduce using rule 4
	%eof           reduce using rule 4


State 6

	SourceUnitSol -> ContractDefinition .               (rule 5)

	"pragma"       reduce using rule 5
	"import"       reduce using rule 5
	contract       reduce using rule 5
	%eof           reduce using rule 5


State 7

	PragmaDirective -> "pragma" . ident ";"             (rule 6)

	ident          shift, and enter state 12


State 8

	ImportDirective -> "import" . stringLiteral ";"     (rule 7)

	stringLiteral  shift, and enter state 11


State 9

	ContractDefinition -> contract . ident "{" ContractPart "}"    (rule 8)

	ident          shift, and enter state 10


State 10

	ContractDefinition -> contract ident . "{" ContractPart "}"    (rule 8)

	"{"            shift, and enter state 15


State 11

	ImportDirective -> "import" stringLiteral . ";"     (rule 7)

	";"            shift, and enter state 14


State 12

	PragmaDirective -> "pragma" ident . ";"             (rule 6)

	";"            shift, and enter state 13


State 13

	PragmaDirective -> "pragma" ident ";" .             (rule 6)

	"pragma"       reduce using rule 6
	"import"       reduce using rule 6
	contract       reduce using rule 6
	%eof           reduce using rule 6


State 14

	ImportDirective -> "import" stringLiteral ";" .     (rule 7)

	"pragma"       reduce using rule 7
	"import"       reduce using rule 7
	contract       reduce using rule 7
	%eof           reduce using rule 7


State 15

	ContractDefinition -> contract ident "{" . ContractPart "}"    (rule 8)

	"public"       shift, and enter state 18

	ContractPart   goto state 16
	StateVariableDeclarationgoto state 17

State 16

	ContractDefinition -> contract ident "{" ContractPart . "}"    (rule 8)

	"}"            shift, and enter state 20


State 17

	ContractPart -> StateVariableDeclaration .          (rule 9)

	"}"            reduce using rule 9


State 18

	StateVariableDeclaration -> "public" . ident ";"    (rule 10)

	ident          shift, and enter state 19


State 19

	StateVariableDeclaration -> "public" ident . ";"    (rule 10)

	";"            shift, and enter state 21


State 20

	ContractDefinition -> contract ident "{" ContractPart "}" .    (rule 8)

	"pragma"       reduce using rule 8
	"import"       reduce using rule 8
	contract       reduce using rule 8
	%eof           reduce using rule 8


State 21

	StateVariableDeclaration -> "public" ident ";" .    (rule 10)

	"}"            reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 14
Number of terminals: 36
Number of non-terminals: 11
Number of states: 22
