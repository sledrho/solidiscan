-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from parser.y
-----------------------------------------------------------------------------

state 83 contains 1 shift/reduce conflicts.
state 105 contains 1 shift/reduce conflicts.
state 224 contains 1 shift/reduce conflicts.
state 265 contains 2 shift/reduce conflicts.
state 283 contains 2 shift/reduce conflicts.
state 341 contains 1 shift/reduce conflicts.
state 385 contains 1 shift/reduce conflicts.
state 428 contains 1 shift/reduce conflicts.
state 475 contains 1 shift/reduce conflicts.

rule 133 is unused
rule 134 is unused
rule 135 is unused
rule 137 is unused
rule 189 is unused
rule 190 is unused
rule 237 is unused
rule 238 is unused
rule 337 is unused
rule 338 is unused

terminal "reservedid" is unused
terminal digit is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_solidiscan -> SourceUnit                    (0)
	SourceUnit ->                                      (1)
	SourceUnit -> SourceUnit SourceUnitSol             (2)
	SourceUnitSol -> PragmaDirective                   (3)
	SourceUnitSol -> ImportDirective                   (4)
	SourceUnitSol -> ContractDefinition                (5)
	PragmaDirective -> "pragma" ident "^" version ";"   (6)
	PragmaDirective -> "pragma" ident version ";"      (7)
	ImportDirective -> "import" stringLiteral zero__ImportAs__ ";"   (8)
	ImportDirective -> "import" ImportAster zero__ImportAs__ "from" stringLiteral ";"   (9)
	ImportAs -> "as" ident                             (10)
	ImportAster -> "*"                                 (11)
	ImportAster -> ident                               (12)
	ContractDefinition -> ConLibInt ident zero__InheritanceSpecList__ "{" list__ContractContents__ "}"   (13)
	ConLibInt -> contract                              (14)
	ConLibInt -> "library"                             (15)
	ConLibInt -> "interface"                           (16)
	InheritanceSpecList -> "is" InheritanceSpecifier list__OMInheritanceSpec__   (17)
	OMInheritanceSpec -> "," InheritanceSpecifier      (18)
	InheritanceSpecifier -> UserDefinedTypeName zero__InhExpList__   (19)
	InhExpList -> "(" Expression list__CSExpList__ ")"   (20)
	CSExpList -> "," Expression                        (21)
	ContractContents -> StateVarDeclaration            (22)
	ContractContents -> UsingForDec                    (23)
	ContractContents -> StructDefinition               (24)
	ContractContents -> ModifierDefinition             (25)
	ContractContents -> FunctionDefinition             (26)
	ContractContents -> EventDefinition                (27)
	ContractContents -> EnumDefinition                 (28)
	FunctionDefinition -> function ident ParameterList list__FuncMods__ zero__ReturnParam__ TermBlock   (29)
	FunctionDefinition -> function "(" ")" list__FuncMods__ zero__ReturnParam__ TermBlock   (30)
	ParameterList -> "(" zero__Parameters__ ")"        (31)
	Parameters -> Parameter list__ParamList__          (32)
	ParamList -> "," Parameter                         (33)
	Parameter -> TypeName zero__StorageLocation__ zero__ParamIdent__   (34)
	ParamIdent -> ident                                (35)
	ParamIdent -> "from"                               (36)
	FuncMods -> ModifierInvocation                     (37)
	FuncMods -> StateMutability                        (38)
	FuncMods -> FuncVar                                (39)
	ReturnParam -> "returns" ParameterList             (40)
	TermBlock -> ";"                                   (41)
	TermBlock -> Block                                 (42)
	EventDefinition -> "event" ident zero__EventParamList__ zero__AnonList__ ";"   (43)
	EventParamList -> "(" zero__EventParams__ ")"      (44)
	EventParams -> EParameters list__EParamList__      (45)
	EParamList -> "," EParameters                      (46)
	EParameters -> TypeName zero__Indexed__ ident      (47)
	EParameters -> TypeName zero__Indexed__ "from"     (48)
	Indexed -> "indexed"                               (49)
	StructDefinition -> "struct" ident "{" zero__StructVarDecList__ "}"   (50)
	StructVarDecList -> StructValue list__StructValue__   (51)
	StructValue -> VariableDeclaration ";"             (52)
	ModifierDefinition -> "modifier" ident zero__ParameterList__ Block   (53)
	ModifierInvocation -> ident zero__ZOModExpList__   (54)
	ZOModExpList -> "(" zero__ModExpList__ ")"         (55)
	ModExpList -> ExpressionList                       (56)
	EnumDefinition -> "enum" ident "{" EnumValList "}"   (57)
	EnumValue -> ident                                 (58)
	EnumValList -> EnumValue list__MultiEnumValue__    (59)
	MultiEnumValue -> "," EnumValue                    (60)
	AnonList -> "anonymous"                            (61)
	StateMutability -> "pure"                          (62)
	StateMutability -> "constant"                      (63)
	StateMutability -> "view"                          (64)
	StateMutability -> "payable"                       (65)
	StorageLocation -> "memory"                        (66)
	StorageLocation -> "storage"                       (67)
	FuncVar -> "external"                              (68)
	FuncVar -> "internal"                              (69)
	FuncVar -> "private"                               (70)
	FuncVar -> "public"                                (71)
	StateVarDeclaration -> TypeName list__AssVar__ ident zero__MExpression__ ";"   (72)
	UsingForDec -> "using" ident "for" TypeName ";"    (73)
	TypeName -> ElementaryTypeName                     (74)
	TypeName -> UserDefinedTypeName                    (75)
	TypeName -> Mapping                                (76)
	TypeName -> ArrayTypeName                          (77)
	TypeName -> FunctionTypeName                       (78)
	AssVar -> "public"                                 (79)
	AssVar -> "private"                                (80)
	AssVar -> "internal"                               (81)
	AssVar -> "constant"                               (82)
	MExpression -> "=" Expression                      (83)
	ExpressionList -> Expression list__ExprList__      (84)
	ExprList -> "," Expression                         (85)
	Expression -> Expression "++"                      (86)
	Expression -> Expression "--"                      (87)
	Expression -> "(" Expression ")" zero__ParenthesisExpressionFollowup__   (88)
	Expression -> "!" Expression                       (89)
	Expression -> Expression "**" Expression           (90)
	Expression -> Expression "*" Expression            (91)
	Expression -> Expression "/" Expression            (92)
	Expression -> Expression "%" Expression            (93)
	Expression -> Expression "+" Expression            (94)
	Expression -> Expression "-" Expression            (95)
	Expression -> Expression "<<" Expression           (96)
	Expression -> Expression ">>" Expression           (97)
	Expression -> Expression "&" Expression            (98)
	Expression -> Expression "^" Expression            (99)
	Expression -> Expression "|" Expression            (100)
	Expression -> Expression "<" Expression            (101)
	Expression -> Expression ">" Expression            (102)
	Expression -> Expression "<=" Expression           (103)
	Expression -> Expression ">=" Expression           (104)
	Expression -> Expression "==" Expression           (105)
	Expression -> Expression "!=" Expression           (106)
	Expression -> Expression "&&" Expression           (107)
	Expression -> Expression "||" Expression           (108)
	Expression -> Expression "=" Expression            (109)
	Expression -> Expression "|=" Expression           (110)
	Expression -> Expression "^=" Expression           (111)
	Expression -> Expression "&=" Expression           (112)
	Expression -> Expression "<<=" Expression          (113)
	Expression -> Expression ">>=" Expression          (114)
	Expression -> Expression "+=" Expression           (115)
	Expression -> Expression "-=" Expression           (116)
	Expression -> Expression "*=" Expression           (117)
	Expression -> Expression "/=" Expression           (118)
	Expression -> Expression "%=" Expression           (119)
	Expression -> TermExpression                       (120)
	ParenthesisExpressionFollowup -> "[" Expression "]"   (121)
	ParenthesisExpressionFollowup -> "." TermExpression   (122)
	ParenthesisExpressionFollowup -> "(" Expression ")"   (123)
	Factor -> BooleanLiteral                           (124)
	Factor -> NumberLiteral                            (125)
	Factor -> stringLiteral                            (126)
	Factor -> ident                                    (127)
	Factor -> ElementaryTypeNameExpression             (128)
	Factor -> "new" Factor                             (129)
	TermExpression -> Factor zero__OptionalCallVar__ zero__NestedCall__   (130)
	OptionalCallVar -> OptionalFunctionCall            (131)
	NestedCall -> "." TermExpression                   (132)
	OptionalMemberArrayAccess -> "." nestedids         (133)
	OptionalMemberArrayAccess -> "." ident             (134)
	OptionalMemberArrayAccess -> "[" zero__Expression__ "]"   (135)
	OptionalFunctionCall -> "(" FunctionCallArgs ")"   (136)
	OptionalVariableDeclaration -> zero__StorageLocation__ ident   (137)
	FunctionCallArgs -> "{" zero__NameValueList__ "}"   (138)
	FunctionCallArgs -> zero__ExpressionList__         (139)
	NameValueList -> NameVal list__NameValueList_Lst__   (140)
	NameValueList_Lst -> "," NameVal                   (141)
	NameVal -> ident ":" Expression                    (142)
	Statement -> IfStatement                           (143)
	Statement -> WhileStatement                        (144)
	Statement -> ForStatement                          (145)
	Statement -> Block                                 (146)
	Statement -> InlineAssemblyStatement               (147)
	Statement -> DoWhileStatement ";"                  (148)
	Statement -> PlaceholderStatement ";"              (149)
	Statement -> Continue ";"                          (150)
	Statement -> Break ";"                             (151)
	Statement -> Return ";"                            (152)
	Statement -> Throw ";"                             (153)
	Statement -> VariableDefinition                    (154)
	Statement -> Expression ";"                        (155)
	IfStatement -> "if" "(" Expression ")" Statement zero__ElseState__   (156)
	ElseState -> "else" Statement                      (157)
	WhileStatement -> "while" "(" Expression ")" Statement   (158)
	ForStatement -> "for" "(" ForParams ")" Statement   (159)
	ForParams -> zero__SimpleStatement__ ";" zero__Expression__ ";" zero__ExpressionList__   (160)
	Block -> "{" list__Statement__ "}"                 (161)
	InlineAssemblyStatement -> "assembly" zero__stringLiteral__ InlineAssemblyBlock   (162)
	InlineAssemblyBlock -> "{" list__AssemblyItem__ "}"   (163)
	AssemblyItem -> ident                              (164)
	AssemblyItem -> InlineAssemblyBlock                (165)
	AssemblyItem -> AssemblyLocalBinding               (166)
	AssemblyItem -> NumberLiteral                      (167)
	AssemblyItem -> stringLiteral                      (168)
	AssemblyLocalBinding -> "let" ident ":=" FunctionalAssemblyExpression   (169)
	FunctionalAssemblyExpression -> ident "(" zero__AssemblyItem__ list__MAssemblyItem__ ")"   (170)
	MAssemblyItem -> "," AssemblyItem                  (171)
	DoWhileStatement -> "do" Statement "while" "(" Expression ")"   (172)
	PlaceholderStatement -> "_"                        (173)
	Continue -> "continue"                             (174)
	Break -> "break"                                   (175)
	Return -> "return" zero__Expression__              (176)
	Throw -> "throw"                                   (177)
	SimpleStatement -> VariableDefinition              (178)
	VariableDefinition -> "var" IdentifierList         (179)
	VariableDeclaration -> TypeName zero__StorageLocation__ ident zero__VarMExp__   (180)
	VarMExp -> "=" Expression                          (181)
	IdentifierList -> "(" list__IdentList__ zero__IdentVar__ ")" zero__VarMExp__   (182)
	IdentList -> zero__IdentVar__ ","                  (183)
	IdentVar -> ident                                  (184)
	BooleanLiteral -> "true"                           (185)
	BooleanLiteral -> "false"                          (186)
	NumberLiteral -> decimalnum zero__numberunit__     (187)
	NumberLiteral -> "exponent" zero__numberunit__     (188)
	TupleEx -> zero__Expression__ list__MaybeTupleEx__   (189)
	MaybeTupleEx -> "," zero__Expression__             (190)
	ElementaryTypeNameExpression -> ElementaryTypeName   (191)
	UserDefinedTypeName -> nestedids                   (192)
	UserDefinedTypeName -> ident                       (193)
	ElementaryTypeName -> "address"                    (194)
	ElementaryTypeName -> "bool"                       (195)
	ElementaryTypeName -> "var"                        (196)
	ElementaryTypeName -> "string"                     (197)
	ElementaryTypeName -> uint                         (198)
	ElementaryTypeName -> int                          (199)
	ElementaryTypeName -> bytes                        (200)
	ElementaryTypeName -> fixed                        (201)
	ElementaryTypeName -> ufixed                       (202)
	Mapping -> "mapping" "(" ElementaryTypeName "=>" TypeName ")"   (203)
	ArrayTypeName -> TypeName "[" zero__Expression__ "]"   (204)
	FunctionTypeName -> function "(" zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__   (205)
	FTNParams -> "internal"                            (206)
	FTNParams -> "external"                            (207)
	FTNParams -> StateMutability                       (208)
	FTNReturn -> "returns" "(" list__FParameters__ ")"   (209)
	FParameters -> FParam list__FParamList__           (210)
	FParamList -> "," FParam                           (211)
	FParam -> TypeName zero__StorageLocation__         (212)
	list__AssVar__ -> list1__AssVar__                  (213)
	list__AssVar__ ->                                  (214)
	list__AssemblyItem__ -> list1__AssemblyItem__      (215)
	list__AssemblyItem__ ->                            (216)
	list__CSExpList__ -> list1__CSExpList__            (217)
	list__CSExpList__ ->                               (218)
	list__ContractContents__ -> list1__ContractContents__   (219)
	list__ContractContents__ ->                        (220)
	list__EParamList__ -> list1__EParamList__          (221)
	list__EParamList__ ->                              (222)
	list__ExprList__ -> list1__ExprList__              (223)
	list__ExprList__ ->                                (224)
	list__FParamList__ -> list1__FParamList__          (225)
	list__FParamList__ ->                              (226)
	list__FParameters__ -> list1__FParameters__        (227)
	list__FParameters__ ->                             (228)
	list__FTNParams__ -> list1__FTNParams__            (229)
	list__FTNParams__ ->                               (230)
	list__FuncMods__ -> list1__FuncMods__              (231)
	list__FuncMods__ ->                                (232)
	list__IdentList__ -> list1__IdentList__            (233)
	list__IdentList__ ->                               (234)
	list__MAssemblyItem__ -> list1__MAssemblyItem__    (235)
	list__MAssemblyItem__ ->                           (236)
	list__MaybeTupleEx__ -> list1__MaybeTupleEx__      (237)
	list__MaybeTupleEx__ ->                            (238)
	list__MultiEnumValue__ -> list1__MultiEnumValue__   (239)
	list__MultiEnumValue__ ->                          (240)
	list__NameValueList_Lst__ -> list1__NameValueList_Lst__   (241)
	list__NameValueList_Lst__ ->                       (242)
	list__OMInheritanceSpec__ -> list1__OMInheritanceSpec__   (243)
	list__OMInheritanceSpec__ ->                       (244)
	list__ParamList__ -> list1__ParamList__            (245)
	list__ParamList__ ->                               (246)
	list__Statement__ -> list1__Statement__            (247)
	list__Statement__ ->                               (248)
	list__StructValue__ -> list1__StructValue__        (249)
	list__StructValue__ ->                             (250)
	zero__AnonList__ -> AnonList                       (251)
	zero__AnonList__ ->                                (252)
	zero__AssemblyItem__ -> AssemblyItem               (253)
	zero__AssemblyItem__ ->                            (254)
	zero__ElseState__ -> ElseState                     (255)
	zero__ElseState__ ->                               (256)
	zero__EventParamList__ -> EventParamList           (257)
	zero__EventParamList__ ->                          (258)
	zero__EventParams__ -> EventParams                 (259)
	zero__EventParams__ ->                             (260)
	zero__Expression__ -> Expression                   (261)
	zero__Expression__ ->                              (262)
	zero__ExpressionList__ -> ExpressionList           (263)
	zero__ExpressionList__ ->                          (264)
	zero__FParameters__ -> FParameters                 (265)
	zero__FParameters__ ->                             (266)
	zero__FTNReturn__ -> FTNReturn                     (267)
	zero__FTNReturn__ ->                               (268)
	zero__IdentVar__ -> IdentVar                       (269)
	zero__IdentVar__ ->                                (270)
	zero__ImportAs__ -> ImportAs                       (271)
	zero__ImportAs__ ->                                (272)
	zero__Indexed__ -> Indexed                         (273)
	zero__Indexed__ ->                                 (274)
	zero__InhExpList__ -> InhExpList                   (275)
	zero__InhExpList__ ->                              (276)
	zero__InheritanceSpecList__ -> InheritanceSpecList   (277)
	zero__InheritanceSpecList__ ->                     (278)
	zero__MExpression__ -> MExpression                 (279)
	zero__MExpression__ ->                             (280)
	zero__ModExpList__ -> ModExpList                   (281)
	zero__ModExpList__ ->                              (282)
	zero__NameValueList__ -> NameValueList             (283)
	zero__NameValueList__ ->                           (284)
	zero__NestedCall__ -> NestedCall                   (285)
	zero__NestedCall__ ->                              (286)
	zero__OptionalCallVar__ -> OptionalCallVar         (287)
	zero__OptionalCallVar__ ->                         (288)
	zero__ParamIdent__ -> ParamIdent                   (289)
	zero__ParamIdent__ ->                              (290)
	zero__ParameterList__ -> ParameterList             (291)
	zero__ParameterList__ ->                           (292)
	zero__Parameters__ -> Parameters                   (293)
	zero__Parameters__ ->                              (294)
	zero__ParenthesisExpressionFollowup__ -> ParenthesisExpressionFollowup   (295)
	zero__ParenthesisExpressionFollowup__ ->           (296)
	zero__ReturnParam__ -> ReturnParam                 (297)
	zero__ReturnParam__ ->                             (298)
	zero__SimpleStatement__ -> SimpleStatement         (299)
	zero__SimpleStatement__ ->                         (300)
	zero__StorageLocation__ -> StorageLocation         (301)
	zero__StorageLocation__ ->                         (302)
	zero__StructVarDecList__ -> StructVarDecList       (303)
	zero__StructVarDecList__ ->                        (304)
	zero__VarMExp__ -> VarMExp                         (305)
	zero__VarMExp__ ->                                 (306)
	zero__ZOModExpList__ -> ZOModExpList               (307)
	zero__ZOModExpList__ ->                            (308)
	zero__numberunit__ -> numberunit                   (309)
	zero__numberunit__ ->                              (310)
	zero__stringLiteral__ -> stringLiteral             (311)
	zero__stringLiteral__ ->                           (312)
	list1__AssVar__ -> AssVar                          (313)
	list1__AssVar__ -> AssVar list1__AssVar__          (314)
	list1__AssemblyItem__ -> AssemblyItem              (315)
	list1__AssemblyItem__ -> AssemblyItem list1__AssemblyItem__   (316)
	list1__CSExpList__ -> CSExpList                    (317)
	list1__CSExpList__ -> CSExpList list1__CSExpList__   (318)
	list1__ContractContents__ -> ContractContents      (319)
	list1__ContractContents__ -> ContractContents list1__ContractContents__   (320)
	list1__EParamList__ -> EParamList                  (321)
	list1__EParamList__ -> EParamList list1__EParamList__   (322)
	list1__ExprList__ -> ExprList                      (323)
	list1__ExprList__ -> ExprList list1__ExprList__    (324)
	list1__FParamList__ -> FParamList                  (325)
	list1__FParamList__ -> FParamList list1__FParamList__   (326)
	list1__FParameters__ -> FParameters                (327)
	list1__FParameters__ -> FParameters list1__FParameters__   (328)
	list1__FTNParams__ -> FTNParams                    (329)
	list1__FTNParams__ -> FTNParams list1__FTNParams__   (330)
	list1__FuncMods__ -> FuncMods                      (331)
	list1__FuncMods__ -> FuncMods list1__FuncMods__    (332)
	list1__IdentList__ -> IdentList                    (333)
	list1__IdentList__ -> IdentList list1__IdentList__   (334)
	list1__MAssemblyItem__ -> MAssemblyItem            (335)
	list1__MAssemblyItem__ -> MAssemblyItem list1__MAssemblyItem__   (336)
	list1__MaybeTupleEx__ -> MaybeTupleEx              (337)
	list1__MaybeTupleEx__ -> MaybeTupleEx list1__MaybeTupleEx__   (338)
	list1__MultiEnumValue__ -> MultiEnumValue          (339)
	list1__MultiEnumValue__ -> MultiEnumValue list1__MultiEnumValue__   (340)
	list1__NameValueList_Lst__ -> NameValueList_Lst    (341)
	list1__NameValueList_Lst__ -> NameValueList_Lst list1__NameValueList_Lst__   (342)
	list1__OMInheritanceSpec__ -> OMInheritanceSpec    (343)
	list1__OMInheritanceSpec__ -> OMInheritanceSpec list1__OMInheritanceSpec__   (344)
	list1__ParamList__ -> ParamList                    (345)
	list1__ParamList__ -> ParamList list1__ParamList__   (346)
	list1__Statement__ -> Statement                    (347)
	list1__Statement__ -> Statement list1__Statement__   (348)
	list1__StructValue__ -> StructValue                (349)
	list1__StructValue__ -> StructValue list1__StructValue__   (350)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"reservedid"   { TReservedOp _ }
	version        { TVers _ $$ }
	decimalnum     { TDec _ $$ }
	"exponent"     { TExp _ $$ }
	digit          { TInt _ $$ }
	int            { TIntLit _ $$ }
	uint           { TUInt _ $$ }
	bytes          { TBytes _ $$ }
	fixed          { TFixed _ $$ }
	ufixed         { TUFixed _ $$ }
	numberunit     { TNumUnit _ $$ }
	"pragma"       { TPragma _ }
	"import"       { TImport _ }
	"external"     { TExternal _ $$ }
	"public"       { TPublic _ $$ }
	"internal"     { TIntern _ $$ }
	"private"      { TPriv _ $$ }
	"constant"     { TConst _ $$ }
	"string"       { TStringAs _ $$ }
	contract       { TContract _ }
	"library"      { TLibrary _ }
	"interface"    { TInterface _ }
	function       { TFuncDef _ }
	"struct"       { TStruct _ }
	"address"      { TAddr _ $$ }
	"bool"         { TBooleanLit _ $$ }
	"do"           { TDo _ $$ }
	"_"            { TPlaceHold _ $$ }
	"continue"     { TCont _ $$ }
	"break"        { TBreak _ $$ }
	"return"       { TRetState _ $$ }
	"throw"        { TThrow _ $$ }
	"var"          { TVar _ $$ }
	"mapping"      { TMap _ $$ }
	"using"        { TUsing _ $$ }
	"for"          { TFor _ $$ }
	"true"         { TTrue _ $$ }
	"false"        { TFalse _ $$ }
	"as"           { TAs _ }
	"is"           { TIs _ }
	"indexed"      { TIndex _ }
	"view"         { TView _ $$ }
	"pure"         { TPure _ $$ }
	"payable"      { TPayable _ $$ }
	"returns"      { TReturns _ }
	"if"           { TIf _ }
	"while"        { TWhile _ }
	"assembly"     { TAssem _ }
	"let"          { TLet _ }
	"else"         { TElse _ }
	"event"        { TEvent _ }
	"anonymous"    { TAnon _ }
	"modifier"     { TModi _ }
	"memory"       { TMem _  $$ }
	"storage"      { TStorage _ $$ }
	"enum"         { TEnum _ }
	"new"          { TNew _ }
	"++"           { TIncr _ }
	"--"           { TDecr _ }
	"^"            { THat _ }
	"!"            { TNegate _ }
	"&&"           { TAnd _ }
	"&"            { TBitAnd _ }
	"||"           { TOr _ }
	"|"            { TBOr _ }
	"!="           { TInEqual _ }
	"<"            { TLThan _ }
	">"            { TGThan _ }
	">>"           { TRShift _ }
	"<<"           { TLShift _ }
	"<="           { TLTEq _ }
	">="           { TGTEq _ }
	"=="           { TEquality _ }
	"=>"           { TRef _ }
	"{"            { TLCurl _ }
	"}"            { TRCurl _ }
	"["            { TLBrack _ }
	"]"            { TRBrack _ }
	"."            { TPeriod _ $$ }
	"="            { TEquals _ }
	"*"            { TMult _ $$ }
	"/"            { TDiv _ }
	"**"           { TExpSym _ }
	"%"            { TModul _ }
	"+"            { TOp _ $$ }
	"-"            { TSub _ }
	";"            { TSemiCol _ }
	":"            { TCol _ }
	","            { TComma _ }
	":="           { TAssign _ }
	"|="           { TLVOr _ }
	"^="           { TLVXor _ }
	"&="           { TLVAnd _ }
	"<<="          { TLVLeftShift _ }
	">>="          { TLVRightShift _ }
	"+="           { TLVIncr _ }
	"-="           { TLVDecr _ }
	"*="           { TLVMult _ }
	"/="           { TLVDiv _ }
	"%="           { TLVMod _ }
	"from"         { TFrom _ $$ }
	ident          { TIdent _ $$ }
	nestedids      { TNestedIds _ $$ }
	stringLiteral  { TStringLiteral _ $$ }
	"("            { TLeftParen _ }
	")"            { TRightParen _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_solidiscan rule  0
	SourceUnit      rules 1, 2
	SourceUnitSol   rules 3, 4, 5
	PragmaDirective rules 6, 7
	ImportDirective rules 8, 9
	ImportAs        rule  10
	ImportAster     rules 11, 12
	ContractDefinition rule  13
	ConLibInt       rules 14, 15, 16
	InheritanceSpecList rule  17
	OMInheritanceSpec rule  18
	InheritanceSpecifier rule  19
	InhExpList      rule  20
	CSExpList       rule  21
	ContractContents rules 22, 23, 24, 25, 26, 27, 28
	FunctionDefinition rules 29, 30
	ParameterList   rule  31
	Parameters      rule  32
	ParamList       rule  33
	Parameter       rule  34
	ParamIdent      rules 35, 36
	FuncMods        rules 37, 38, 39
	ReturnParam     rule  40
	TermBlock       rules 41, 42
	EventDefinition rule  43
	EventParamList  rule  44
	EventParams     rule  45
	EParamList      rule  46
	EParameters     rules 47, 48
	Indexed         rule  49
	StructDefinition rule  50
	StructVarDecList rule  51
	StructValue     rule  52
	ModifierDefinition rule  53
	ModifierInvocation rule  54
	ZOModExpList    rule  55
	ModExpList      rule  56
	EnumDefinition  rule  57
	EnumValue       rule  58
	EnumValList     rule  59
	MultiEnumValue  rule  60
	AnonList        rule  61
	StateMutability rules 62, 63, 64, 65
	StorageLocation rules 66, 67
	FuncVar         rules 68, 69, 70, 71
	StateVarDeclaration rule  72
	UsingForDec     rule  73
	TypeName        rules 74, 75, 76, 77, 78
	AssVar          rules 79, 80, 81, 82
	MExpression     rule  83
	ExpressionList  rule  84
	ExprList        rule  85
	Expression      rules 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	ParenthesisExpressionFollowup rules 121, 122, 123
	Factor          rules 124, 125, 126, 127, 128, 129
	TermExpression  rule  130
	OptionalCallVar rule  131
	NestedCall      rule  132
	OptionalMemberArrayAccess rules 133, 134, 135
	OptionalFunctionCall rule  136
	OptionalVariableDeclaration rule  137
	FunctionCallArgs rules 138, 139
	NameValueList   rule  140
	NameValueList_Lst rule  141
	NameVal         rule  142
	Statement       rules 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155
	IfStatement     rule  156
	ElseState       rule  157
	WhileStatement  rule  158
	ForStatement    rule  159
	ForParams       rule  160
	Block           rule  161
	InlineAssemblyStatement rule  162
	InlineAssemblyBlock rule  163
	AssemblyItem    rules 164, 165, 166, 167, 168
	AssemblyLocalBinding rule  169
	FunctionalAssemblyExpression rule  170
	MAssemblyItem   rule  171
	DoWhileStatement rule  172
	PlaceholderStatement rule  173
	Continue        rule  174
	Break           rule  175
	Return          rule  176
	Throw           rule  177
	SimpleStatement rule  178
	VariableDefinition rule  179
	VariableDeclaration rule  180
	VarMExp         rule  181
	IdentifierList  rule  182
	IdentList       rule  183
	IdentVar        rule  184
	BooleanLiteral  rules 185, 186
	NumberLiteral   rules 187, 188
	TupleEx         rule  189
	MaybeTupleEx    rule  190
	ElementaryTypeNameExpression rule  191
	UserDefinedTypeName rules 192, 193
	ElementaryTypeName rules 194, 195, 196, 197, 198, 199, 200, 201, 202
	Mapping         rule  203
	ArrayTypeName   rule  204
	FunctionTypeName rule  205
	FTNParams       rules 206, 207, 208
	FTNReturn       rule  209
	FParameters     rule  210
	FParamList      rule  211
	FParam          rule  212
	list__AssVar__  rules 213, 214
	list__AssemblyItem__ rules 215, 216
	list__CSExpList__ rules 217, 218
	list__ContractContents__ rules 219, 220
	list__EParamList__ rules 221, 222
	list__ExprList__ rules 223, 224
	list__FParamList__ rules 225, 226
	list__FParameters__ rules 227, 228
	list__FTNParams__ rules 229, 230
	list__FuncMods__ rules 231, 232
	list__IdentList__ rules 233, 234
	list__MAssemblyItem__ rules 235, 236
	list__MaybeTupleEx__ rules 237, 238
	list__MultiEnumValue__ rules 239, 240
	list__NameValueList_Lst__ rules 241, 242
	list__OMInheritanceSpec__ rules 243, 244
	list__ParamList__ rules 245, 246
	list__Statement__ rules 247, 248
	list__StructValue__ rules 249, 250
	zero__AnonList__ rules 251, 252
	zero__AssemblyItem__ rules 253, 254
	zero__ElseState__ rules 255, 256
	zero__EventParamList__ rules 257, 258
	zero__EventParams__ rules 259, 260
	zero__Expression__ rules 261, 262
	zero__ExpressionList__ rules 263, 264
	zero__FParameters__ rules 265, 266
	zero__FTNReturn__ rules 267, 268
	zero__IdentVar__ rules 269, 270
	zero__ImportAs__ rules 271, 272
	zero__Indexed__ rules 273, 274
	zero__InhExpList__ rules 275, 276
	zero__InheritanceSpecList__ rules 277, 278
	zero__MExpression__ rules 279, 280
	zero__ModExpList__ rules 281, 282
	zero__NameValueList__ rules 283, 284
	zero__NestedCall__ rules 285, 286
	zero__OptionalCallVar__ rules 287, 288
	zero__ParamIdent__ rules 289, 290
	zero__ParameterList__ rules 291, 292
	zero__Parameters__ rules 293, 294
	zero__ParenthesisExpressionFollowup__ rules 295, 296
	zero__ReturnParam__ rules 297, 298
	zero__SimpleStatement__ rules 299, 300
	zero__StorageLocation__ rules 301, 302
	zero__StructVarDecList__ rules 303, 304
	zero__VarMExp__ rules 305, 306
	zero__ZOModExpList__ rules 307, 308
	zero__numberunit__ rules 309, 310
	zero__stringLiteral__ rules 311, 312
	list1__AssVar__ rules 313, 314
	list1__AssemblyItem__ rules 315, 316
	list1__CSExpList__ rules 317, 318
	list1__ContractContents__ rules 319, 320
	list1__EParamList__ rules 321, 322
	list1__ExprList__ rules 323, 324
	list1__FParamList__ rules 325, 326
	list1__FParameters__ rules 327, 328
	list1__FTNParams__ rules 329, 330
	list1__FuncMods__ rules 331, 332
	list1__IdentList__ rules 333, 334
	list1__MAssemblyItem__ rules 335, 336
	list1__MaybeTupleEx__ rules 337, 338
	list1__MultiEnumValue__ rules 339, 340
	list1__NameValueList_Lst__ rules 341, 342
	list1__OMInheritanceSpec__ rules 343, 344
	list1__ParamList__ rules 345, 346
	list1__Statement__ rules 347, 348
	list1__StructValue__ rules 349, 350

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"pragma"       reduce using rule 1
	"import"       reduce using rule 1
	contract       reduce using rule 1
	"library"      reduce using rule 1
	"interface"    reduce using rule 1
	%eof           reduce using rule 1

	SourceUnit     goto state 2

State 1




State 2

	%start_solidiscan -> SourceUnit .                   (rule 0)
	SourceUnit -> SourceUnit . SourceUnitSol            (rule 2)

	"pragma"       shift, and enter state 8
	"import"       shift, and enter state 9
	contract       shift, and enter state 10
	"library"      shift, and enter state 11
	"interface"    shift, and enter state 12
	%eof           accept

	SourceUnitSol  goto state 3
	PragmaDirectivegoto state 4
	ImportDirectivegoto state 5
	ContractDefinitiongoto state 6
	ConLibInt      goto state 7

State 3

	SourceUnit -> SourceUnit SourceUnitSol .            (rule 2)

	"pragma"       reduce using rule 2
	"import"       reduce using rule 2
	contract       reduce using rule 2
	"library"      reduce using rule 2
	"interface"    reduce using rule 2
	%eof           reduce using rule 2


State 4

	SourceUnitSol -> PragmaDirective .                  (rule 3)

	"pragma"       reduce using rule 3
	"import"       reduce using rule 3
	contract       reduce using rule 3
	"library"      reduce using rule 3
	"interface"    reduce using rule 3
	%eof           reduce using rule 3


State 5

	SourceUnitSol -> ImportDirective .                  (rule 4)

	"pragma"       reduce using rule 4
	"import"       reduce using rule 4
	contract       reduce using rule 4
	"library"      reduce using rule 4
	"interface"    reduce using rule 4
	%eof           reduce using rule 4


State 6

	SourceUnitSol -> ContractDefinition .               (rule 5)

	"pragma"       reduce using rule 5
	"import"       reduce using rule 5
	contract       reduce using rule 5
	"library"      reduce using rule 5
	"interface"    reduce using rule 5
	%eof           reduce using rule 5


State 7

	ContractDefinition -> ConLibInt . ident zero__InheritanceSpecList__ "{" list__ContractContents__ "}"    (rule 13)

	ident          shift, and enter state 18


State 8

	PragmaDirective -> "pragma" . ident "^" version ";"    (rule 6)
	PragmaDirective -> "pragma" . ident version ";"     (rule 7)

	ident          shift, and enter state 17


State 9

	ImportDirective -> "import" . stringLiteral zero__ImportAs__ ";"    (rule 8)
	ImportDirective -> "import" . ImportAster zero__ImportAs__ "from" stringLiteral ";"    (rule 9)

	"*"            shift, and enter state 14
	ident          shift, and enter state 15
	stringLiteral  shift, and enter state 16

	ImportAster    goto state 13

State 10

	ConLibInt -> contract .                             (rule 14)

	ident          reduce using rule 14


State 11

	ConLibInt -> "library" .                            (rule 15)

	ident          reduce using rule 15


State 12

	ConLibInt -> "interface" .                          (rule 16)

	ident          reduce using rule 16


State 13

	ImportDirective -> "import" ImportAster . zero__ImportAs__ "from" stringLiteral ";"    (rule 9)

	"as"           shift, and enter state 26
	"from"         reduce using rule 272

	ImportAs       goto state 24
	zero__ImportAs__goto state 27

State 14

	ImportAster -> "*" .                                (rule 11)

	"as"           reduce using rule 11
	"from"         reduce using rule 11


State 15

	ImportAster -> ident .                              (rule 12)

	"as"           reduce using rule 12
	"from"         reduce using rule 12


State 16

	ImportDirective -> "import" stringLiteral . zero__ImportAs__ ";"    (rule 8)

	"as"           shift, and enter state 26
	";"            reduce using rule 272

	ImportAs       goto state 24
	zero__ImportAs__goto state 25

State 17

	PragmaDirective -> "pragma" ident . "^" version ";"    (rule 6)
	PragmaDirective -> "pragma" ident . version ";"     (rule 7)

	version        shift, and enter state 22
	"^"            shift, and enter state 23


State 18

	ContractDefinition -> ConLibInt ident . zero__InheritanceSpecList__ "{" list__ContractContents__ "}"    (rule 13)

	"is"           shift, and enter state 21
	"{"            reduce using rule 278

	InheritanceSpecListgoto state 19
	zero__InheritanceSpecList__goto state 20

State 19

	zero__InheritanceSpecList__ -> InheritanceSpecList .    (rule 277)

	"{"            reduce using rule 277


State 20

	ContractDefinition -> ConLibInt ident zero__InheritanceSpecList__ . "{" list__ContractContents__ "}"    (rule 13)

	"{"            shift, and enter state 37


State 21

	InheritanceSpecList -> "is" . InheritanceSpecifier list__OMInheritanceSpec__    (rule 17)

	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	InheritanceSpecifiergoto state 33
	UserDefinedTypeNamegoto state 34

State 22

	PragmaDirective -> "pragma" ident version . ";"     (rule 7)

	";"            shift, and enter state 32


State 23

	PragmaDirective -> "pragma" ident "^" . version ";"    (rule 6)

	version        shift, and enter state 31


State 24

	zero__ImportAs__ -> ImportAs .                      (rule 271)

	";"            reduce using rule 271
	"from"         reduce using rule 271


State 25

	ImportDirective -> "import" stringLiteral zero__ImportAs__ . ";"    (rule 8)

	";"            shift, and enter state 30


State 26

	ImportAs -> "as" . ident                            (rule 10)

	ident          shift, and enter state 29


State 27

	ImportDirective -> "import" ImportAster zero__ImportAs__ . "from" stringLiteral ";"    (rule 9)

	"from"         shift, and enter state 28


State 28

	ImportDirective -> "import" ImportAster zero__ImportAs__ "from" . stringLiteral ";"    (rule 9)

	stringLiteral  shift, and enter state 78


State 29

	ImportAs -> "as" ident .                            (rule 10)

	";"            reduce using rule 10
	"from"         reduce using rule 10


State 30

	ImportDirective -> "import" stringLiteral zero__ImportAs__ ";" .    (rule 8)

	"pragma"       reduce using rule 8
	"import"       reduce using rule 8
	contract       reduce using rule 8
	"library"      reduce using rule 8
	"interface"    reduce using rule 8
	%eof           reduce using rule 8


State 31

	PragmaDirective -> "pragma" ident "^" version . ";"    (rule 6)

	";"            shift, and enter state 77


State 32

	PragmaDirective -> "pragma" ident version ";" .     (rule 7)

	"pragma"       reduce using rule 7
	"import"       reduce using rule 7
	contract       reduce using rule 7
	"library"      reduce using rule 7
	"interface"    reduce using rule 7
	%eof           reduce using rule 7


State 33

	InheritanceSpecList -> "is" InheritanceSpecifier . list__OMInheritanceSpec__    (rule 17)

	"{"            reduce using rule 244
	","            shift, and enter state 76

	OMInheritanceSpecgoto state 73
	list__OMInheritanceSpec__goto state 74
	list1__OMInheritanceSpec__goto state 75

State 34

	InheritanceSpecifier -> UserDefinedTypeName . zero__InhExpList__    (rule 19)

	"{"            reduce using rule 276
	","            reduce using rule 276
	"("            shift, and enter state 72

	InhExpList     goto state 70
	zero__InhExpList__goto state 71

State 35

	UserDefinedTypeName -> ident .                      (rule 193)

	int            reduce using rule 193
	uint           reduce using rule 193
	bytes          reduce using rule 193
	fixed          reduce using rule 193
	ufixed         reduce using rule 193
	"public"       reduce using rule 193
	"internal"     reduce using rule 193
	"private"      reduce using rule 193
	"constant"     reduce using rule 193
	"string"       reduce using rule 193
	function       reduce using rule 193
	"address"      reduce using rule 193
	"bool"         reduce using rule 193
	"var"          reduce using rule 193
	"mapping"      reduce using rule 193
	"indexed"      reduce using rule 193
	"memory"       reduce using rule 193
	"storage"      reduce using rule 193
	"{"            reduce using rule 193
	"["            reduce using rule 193
	";"            reduce using rule 193
	","            reduce using rule 193
	"from"         reduce using rule 193
	ident          reduce using rule 193
	nestedids      reduce using rule 193
	"("            reduce using rule 193
	")"            reduce using rule 193


State 36

	UserDefinedTypeName -> nestedids .                  (rule 192)

	int            reduce using rule 192
	uint           reduce using rule 192
	bytes          reduce using rule 192
	fixed          reduce using rule 192
	ufixed         reduce using rule 192
	"public"       reduce using rule 192
	"internal"     reduce using rule 192
	"private"      reduce using rule 192
	"constant"     reduce using rule 192
	"string"       reduce using rule 192
	function       reduce using rule 192
	"address"      reduce using rule 192
	"bool"         reduce using rule 192
	"var"          reduce using rule 192
	"mapping"      reduce using rule 192
	"indexed"      reduce using rule 192
	"memory"       reduce using rule 192
	"storage"      reduce using rule 192
	"{"            reduce using rule 192
	"["            reduce using rule 192
	";"            reduce using rule 192
	","            reduce using rule 192
	"from"         reduce using rule 192
	ident          reduce using rule 192
	nestedids      reduce using rule 192
	"("            reduce using rule 192
	")"            reduce using rule 192


State 37

	ContractDefinition -> ConLibInt ident zero__InheritanceSpecList__ "{" . list__ContractContents__ "}"    (rule 13)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 60
	"struct"       shift, and enter state 61
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	"using"        shift, and enter state 66
	"event"        shift, and enter state 67
	"modifier"     shift, and enter state 68
	"enum"         shift, and enter state 69
	"}"            reduce using rule 220
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	ContractContentsgoto state 38
	FunctionDefinitiongoto state 39
	EventDefinitiongoto state 40
	StructDefinitiongoto state 41
	ModifierDefinitiongoto state 42
	EnumDefinition goto state 43
	StateVarDeclarationgoto state 44
	UsingForDec    goto state 45
	TypeName       goto state 46
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	list__ContractContents__goto state 52
	list1__ContractContents__goto state 53

State 38

	list1__ContractContents__ -> ContractContents .     (rule 319)
	list1__ContractContents__ -> ContractContents . list1__ContractContents__    (rule 320)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 60
	"struct"       shift, and enter state 61
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	"using"        shift, and enter state 66
	"event"        shift, and enter state 67
	"modifier"     shift, and enter state 68
	"enum"         shift, and enter state 69
	"}"            reduce using rule 319
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	ContractContentsgoto state 38
	FunctionDefinitiongoto state 39
	EventDefinitiongoto state 40
	StructDefinitiongoto state 41
	ModifierDefinitiongoto state 42
	EnumDefinition goto state 43
	StateVarDeclarationgoto state 44
	UsingForDec    goto state 45
	TypeName       goto state 46
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	list1__ContractContents__goto state 115

State 39

	ContractContents -> FunctionDefinition .            (rule 26)

	int            reduce using rule 26
	uint           reduce using rule 26
	bytes          reduce using rule 26
	fixed          reduce using rule 26
	ufixed         reduce using rule 26
	"string"       reduce using rule 26
	function       reduce using rule 26
	"struct"       reduce using rule 26
	"address"      reduce using rule 26
	"bool"         reduce using rule 26
	"var"          reduce using rule 26
	"mapping"      reduce using rule 26
	"using"        reduce using rule 26
	"event"        reduce using rule 26
	"modifier"     reduce using rule 26
	"enum"         reduce using rule 26
	"}"            reduce using rule 26
	ident          reduce using rule 26
	nestedids      reduce using rule 26


State 40

	ContractContents -> EventDefinition .               (rule 27)

	int            reduce using rule 27
	uint           reduce using rule 27
	bytes          reduce using rule 27
	fixed          reduce using rule 27
	ufixed         reduce using rule 27
	"string"       reduce using rule 27
	function       reduce using rule 27
	"struct"       reduce using rule 27
	"address"      reduce using rule 27
	"bool"         reduce using rule 27
	"var"          reduce using rule 27
	"mapping"      reduce using rule 27
	"using"        reduce using rule 27
	"event"        reduce using rule 27
	"modifier"     reduce using rule 27
	"enum"         reduce using rule 27
	"}"            reduce using rule 27
	ident          reduce using rule 27
	nestedids      reduce using rule 27


State 41

	ContractContents -> StructDefinition .              (rule 24)

	int            reduce using rule 24
	uint           reduce using rule 24
	bytes          reduce using rule 24
	fixed          reduce using rule 24
	ufixed         reduce using rule 24
	"string"       reduce using rule 24
	function       reduce using rule 24
	"struct"       reduce using rule 24
	"address"      reduce using rule 24
	"bool"         reduce using rule 24
	"var"          reduce using rule 24
	"mapping"      reduce using rule 24
	"using"        reduce using rule 24
	"event"        reduce using rule 24
	"modifier"     reduce using rule 24
	"enum"         reduce using rule 24
	"}"            reduce using rule 24
	ident          reduce using rule 24
	nestedids      reduce using rule 24


State 42

	ContractContents -> ModifierDefinition .            (rule 25)

	int            reduce using rule 25
	uint           reduce using rule 25
	bytes          reduce using rule 25
	fixed          reduce using rule 25
	ufixed         reduce using rule 25
	"string"       reduce using rule 25
	function       reduce using rule 25
	"struct"       reduce using rule 25
	"address"      reduce using rule 25
	"bool"         reduce using rule 25
	"var"          reduce using rule 25
	"mapping"      reduce using rule 25
	"using"        reduce using rule 25
	"event"        reduce using rule 25
	"modifier"     reduce using rule 25
	"enum"         reduce using rule 25
	"}"            reduce using rule 25
	ident          reduce using rule 25
	nestedids      reduce using rule 25


State 43

	ContractContents -> EnumDefinition .                (rule 28)

	int            reduce using rule 28
	uint           reduce using rule 28
	bytes          reduce using rule 28
	fixed          reduce using rule 28
	ufixed         reduce using rule 28
	"string"       reduce using rule 28
	function       reduce using rule 28
	"struct"       reduce using rule 28
	"address"      reduce using rule 28
	"bool"         reduce using rule 28
	"var"          reduce using rule 28
	"mapping"      reduce using rule 28
	"using"        reduce using rule 28
	"event"        reduce using rule 28
	"modifier"     reduce using rule 28
	"enum"         reduce using rule 28
	"}"            reduce using rule 28
	ident          reduce using rule 28
	nestedids      reduce using rule 28


State 44

	ContractContents -> StateVarDeclaration .           (rule 22)

	int            reduce using rule 22
	uint           reduce using rule 22
	bytes          reduce using rule 22
	fixed          reduce using rule 22
	ufixed         reduce using rule 22
	"string"       reduce using rule 22
	function       reduce using rule 22
	"struct"       reduce using rule 22
	"address"      reduce using rule 22
	"bool"         reduce using rule 22
	"var"          reduce using rule 22
	"mapping"      reduce using rule 22
	"using"        reduce using rule 22
	"event"        reduce using rule 22
	"modifier"     reduce using rule 22
	"enum"         reduce using rule 22
	"}"            reduce using rule 22
	ident          reduce using rule 22
	nestedids      reduce using rule 22


State 45

	ContractContents -> UsingForDec .                   (rule 23)

	int            reduce using rule 23
	uint           reduce using rule 23
	bytes          reduce using rule 23
	fixed          reduce using rule 23
	ufixed         reduce using rule 23
	"string"       reduce using rule 23
	function       reduce using rule 23
	"struct"       reduce using rule 23
	"address"      reduce using rule 23
	"bool"         reduce using rule 23
	"var"          reduce using rule 23
	"mapping"      reduce using rule 23
	"using"        reduce using rule 23
	"event"        reduce using rule 23
	"modifier"     reduce using rule 23
	"enum"         reduce using rule 23
	"}"            reduce using rule 23
	ident          reduce using rule 23
	nestedids      reduce using rule 23


State 46

	StateVarDeclaration -> TypeName . list__AssVar__ ident zero__MExpression__ ";"    (rule 72)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"public"       shift, and enter state 110
	"internal"     shift, and enter state 111
	"private"      shift, and enter state 112
	"constant"     shift, and enter state 113
	"["            shift, and enter state 114
	ident          reduce using rule 214

	AssVar         goto state 107
	list__AssVar__ goto state 108
	list1__AssVar__goto state 109

State 47

	TypeName -> UserDefinedTypeName .                   (rule 75)

	int            reduce using rule 75
	uint           reduce using rule 75
	bytes          reduce using rule 75
	fixed          reduce using rule 75
	ufixed         reduce using rule 75
	"public"       reduce using rule 75
	"internal"     reduce using rule 75
	"private"      reduce using rule 75
	"constant"     reduce using rule 75
	"string"       reduce using rule 75
	function       reduce using rule 75
	"address"      reduce using rule 75
	"bool"         reduce using rule 75
	"var"          reduce using rule 75
	"mapping"      reduce using rule 75
	"indexed"      reduce using rule 75
	"memory"       reduce using rule 75
	"storage"      reduce using rule 75
	"["            reduce using rule 75
	";"            reduce using rule 75
	","            reduce using rule 75
	"from"         reduce using rule 75
	ident          reduce using rule 75
	nestedids      reduce using rule 75
	")"            reduce using rule 75


State 48

	TypeName -> ElementaryTypeName .                    (rule 74)

	int            reduce using rule 74
	uint           reduce using rule 74
	bytes          reduce using rule 74
	fixed          reduce using rule 74
	ufixed         reduce using rule 74
	"public"       reduce using rule 74
	"internal"     reduce using rule 74
	"private"      reduce using rule 74
	"constant"     reduce using rule 74
	"string"       reduce using rule 74
	function       reduce using rule 74
	"address"      reduce using rule 74
	"bool"         reduce using rule 74
	"var"          reduce using rule 74
	"mapping"      reduce using rule 74
	"indexed"      reduce using rule 74
	"memory"       reduce using rule 74
	"storage"      reduce using rule 74
	"["            reduce using rule 74
	";"            reduce using rule 74
	","            reduce using rule 74
	"from"         reduce using rule 74
	ident          reduce using rule 74
	nestedids      reduce using rule 74
	")"            reduce using rule 74


State 49

	TypeName -> Mapping .                               (rule 76)

	int            reduce using rule 76
	uint           reduce using rule 76
	bytes          reduce using rule 76
	fixed          reduce using rule 76
	ufixed         reduce using rule 76
	"public"       reduce using rule 76
	"internal"     reduce using rule 76
	"private"      reduce using rule 76
	"constant"     reduce using rule 76
	"string"       reduce using rule 76
	function       reduce using rule 76
	"address"      reduce using rule 76
	"bool"         reduce using rule 76
	"var"          reduce using rule 76
	"mapping"      reduce using rule 76
	"indexed"      reduce using rule 76
	"memory"       reduce using rule 76
	"storage"      reduce using rule 76
	"["            reduce using rule 76
	";"            reduce using rule 76
	","            reduce using rule 76
	"from"         reduce using rule 76
	ident          reduce using rule 76
	nestedids      reduce using rule 76
	")"            reduce using rule 76


State 50

	TypeName -> ArrayTypeName .                         (rule 77)

	int            reduce using rule 77
	uint           reduce using rule 77
	bytes          reduce using rule 77
	fixed          reduce using rule 77
	ufixed         reduce using rule 77
	"public"       reduce using rule 77
	"internal"     reduce using rule 77
	"private"      reduce using rule 77
	"constant"     reduce using rule 77
	"string"       reduce using rule 77
	function       reduce using rule 77
	"address"      reduce using rule 77
	"bool"         reduce using rule 77
	"var"          reduce using rule 77
	"mapping"      reduce using rule 77
	"indexed"      reduce using rule 77
	"memory"       reduce using rule 77
	"storage"      reduce using rule 77
	"["            reduce using rule 77
	";"            reduce using rule 77
	","            reduce using rule 77
	"from"         reduce using rule 77
	ident          reduce using rule 77
	nestedids      reduce using rule 77
	")"            reduce using rule 77


State 51

	TypeName -> FunctionTypeName .                      (rule 78)

	int            reduce using rule 78
	uint           reduce using rule 78
	bytes          reduce using rule 78
	fixed          reduce using rule 78
	ufixed         reduce using rule 78
	"public"       reduce using rule 78
	"internal"     reduce using rule 78
	"private"      reduce using rule 78
	"constant"     reduce using rule 78
	"string"       reduce using rule 78
	function       reduce using rule 78
	"address"      reduce using rule 78
	"bool"         reduce using rule 78
	"var"          reduce using rule 78
	"mapping"      reduce using rule 78
	"indexed"      reduce using rule 78
	"memory"       reduce using rule 78
	"storage"      reduce using rule 78
	"["            reduce using rule 78
	";"            reduce using rule 78
	","            reduce using rule 78
	"from"         reduce using rule 78
	ident          reduce using rule 78
	nestedids      reduce using rule 78
	")"            reduce using rule 78


State 52

	ContractDefinition -> ConLibInt ident zero__InheritanceSpecList__ "{" list__ContractContents__ . "}"    (rule 13)

	"}"            shift, and enter state 106


State 53

	list__ContractContents__ -> list1__ContractContents__ .    (rule 219)

	"}"            reduce using rule 219


State 54

	ElementaryTypeName -> int .                         (rule 199)

	decimalnum     reduce using rule 199
	"exponent"     reduce using rule 199
	int            reduce using rule 199
	uint           reduce using rule 199
	bytes          reduce using rule 199
	fixed          reduce using rule 199
	ufixed         reduce using rule 199
	"public"       reduce using rule 199
	"internal"     reduce using rule 199
	"private"      reduce using rule 199
	"constant"     reduce using rule 199
	"string"       reduce using rule 199
	function       reduce using rule 199
	"address"      reduce using rule 199
	"bool"         reduce using rule 199
	"do"           reduce using rule 199
	"_"            reduce using rule 199
	"continue"     reduce using rule 199
	"break"        reduce using rule 199
	"return"       reduce using rule 199
	"throw"        reduce using rule 199
	"var"          reduce using rule 199
	"mapping"      reduce using rule 199
	"for"          reduce using rule 199
	"true"         reduce using rule 199
	"false"        reduce using rule 199
	"indexed"      reduce using rule 199
	"if"           reduce using rule 199
	"while"        reduce using rule 199
	"assembly"     reduce using rule 199
	"else"         reduce using rule 199
	"memory"       reduce using rule 199
	"storage"      reduce using rule 199
	"new"          reduce using rule 199
	"++"           reduce using rule 199
	"--"           reduce using rule 199
	"^"            reduce using rule 199
	"!"            reduce using rule 199
	"&&"           reduce using rule 199
	"&"            reduce using rule 199
	"||"           reduce using rule 199
	"|"            reduce using rule 199
	"!="           reduce using rule 199
	"<"            reduce using rule 199
	">"            reduce using rule 199
	">>"           reduce using rule 199
	"<<"           reduce using rule 199
	"<="           reduce using rule 199
	">="           reduce using rule 199
	"=="           reduce using rule 199
	"=>"           reduce using rule 199
	"{"            reduce using rule 199
	"}"            reduce using rule 199
	"["            reduce using rule 199
	"]"            reduce using rule 199
	"."            reduce using rule 199
	"="            reduce using rule 199
	"*"            reduce using rule 199
	"/"            reduce using rule 199
	"**"           reduce using rule 199
	"%"            reduce using rule 199
	"+"            reduce using rule 199
	"-"            reduce using rule 199
	";"            reduce using rule 199
	","            reduce using rule 199
	"|="           reduce using rule 199
	"^="           reduce using rule 199
	"&="           reduce using rule 199
	"<<="          reduce using rule 199
	">>="          reduce using rule 199
	"+="           reduce using rule 199
	"-="           reduce using rule 199
	"*="           reduce using rule 199
	"/="           reduce using rule 199
	"%="           reduce using rule 199
	"from"         reduce using rule 199
	ident          reduce using rule 199
	nestedids      reduce using rule 199
	stringLiteral  reduce using rule 199
	"("            reduce using rule 199
	")"            reduce using rule 199


State 55

	ElementaryTypeName -> uint .                        (rule 198)

	decimalnum     reduce using rule 198
	"exponent"     reduce using rule 198
	int            reduce using rule 198
	uint           reduce using rule 198
	bytes          reduce using rule 198
	fixed          reduce using rule 198
	ufixed         reduce using rule 198
	"public"       reduce using rule 198
	"internal"     reduce using rule 198
	"private"      reduce using rule 198
	"constant"     reduce using rule 198
	"string"       reduce using rule 198
	function       reduce using rule 198
	"address"      reduce using rule 198
	"bool"         reduce using rule 198
	"do"           reduce using rule 198
	"_"            reduce using rule 198
	"continue"     reduce using rule 198
	"break"        reduce using rule 198
	"return"       reduce using rule 198
	"throw"        reduce using rule 198
	"var"          reduce using rule 198
	"mapping"      reduce using rule 198
	"for"          reduce using rule 198
	"true"         reduce using rule 198
	"false"        reduce using rule 198
	"indexed"      reduce using rule 198
	"if"           reduce using rule 198
	"while"        reduce using rule 198
	"assembly"     reduce using rule 198
	"else"         reduce using rule 198
	"memory"       reduce using rule 198
	"storage"      reduce using rule 198
	"new"          reduce using rule 198
	"++"           reduce using rule 198
	"--"           reduce using rule 198
	"^"            reduce using rule 198
	"!"            reduce using rule 198
	"&&"           reduce using rule 198
	"&"            reduce using rule 198
	"||"           reduce using rule 198
	"|"            reduce using rule 198
	"!="           reduce using rule 198
	"<"            reduce using rule 198
	">"            reduce using rule 198
	">>"           reduce using rule 198
	"<<"           reduce using rule 198
	"<="           reduce using rule 198
	">="           reduce using rule 198
	"=="           reduce using rule 198
	"=>"           reduce using rule 198
	"{"            reduce using rule 198
	"}"            reduce using rule 198
	"["            reduce using rule 198
	"]"            reduce using rule 198
	"."            reduce using rule 198
	"="            reduce using rule 198
	"*"            reduce using rule 198
	"/"            reduce using rule 198
	"**"           reduce using rule 198
	"%"            reduce using rule 198
	"+"            reduce using rule 198
	"-"            reduce using rule 198
	";"            reduce using rule 198
	","            reduce using rule 198
	"|="           reduce using rule 198
	"^="           reduce using rule 198
	"&="           reduce using rule 198
	"<<="          reduce using rule 198
	">>="          reduce using rule 198
	"+="           reduce using rule 198
	"-="           reduce using rule 198
	"*="           reduce using rule 198
	"/="           reduce using rule 198
	"%="           reduce using rule 198
	"from"         reduce using rule 198
	ident          reduce using rule 198
	nestedids      reduce using rule 198
	stringLiteral  reduce using rule 198
	"("            reduce using rule 198
	")"            reduce using rule 198


State 56

	ElementaryTypeName -> bytes .                       (rule 200)

	decimalnum     reduce using rule 200
	"exponent"     reduce using rule 200
	int            reduce using rule 200
	uint           reduce using rule 200
	bytes          reduce using rule 200
	fixed          reduce using rule 200
	ufixed         reduce using rule 200
	"public"       reduce using rule 200
	"internal"     reduce using rule 200
	"private"      reduce using rule 200
	"constant"     reduce using rule 200
	"string"       reduce using rule 200
	function       reduce using rule 200
	"address"      reduce using rule 200
	"bool"         reduce using rule 200
	"do"           reduce using rule 200
	"_"            reduce using rule 200
	"continue"     reduce using rule 200
	"break"        reduce using rule 200
	"return"       reduce using rule 200
	"throw"        reduce using rule 200
	"var"          reduce using rule 200
	"mapping"      reduce using rule 200
	"for"          reduce using rule 200
	"true"         reduce using rule 200
	"false"        reduce using rule 200
	"indexed"      reduce using rule 200
	"if"           reduce using rule 200
	"while"        reduce using rule 200
	"assembly"     reduce using rule 200
	"else"         reduce using rule 200
	"memory"       reduce using rule 200
	"storage"      reduce using rule 200
	"new"          reduce using rule 200
	"++"           reduce using rule 200
	"--"           reduce using rule 200
	"^"            reduce using rule 200
	"!"            reduce using rule 200
	"&&"           reduce using rule 200
	"&"            reduce using rule 200
	"||"           reduce using rule 200
	"|"            reduce using rule 200
	"!="           reduce using rule 200
	"<"            reduce using rule 200
	">"            reduce using rule 200
	">>"           reduce using rule 200
	"<<"           reduce using rule 200
	"<="           reduce using rule 200
	">="           reduce using rule 200
	"=="           reduce using rule 200
	"=>"           reduce using rule 200
	"{"            reduce using rule 200
	"}"            reduce using rule 200
	"["            reduce using rule 200
	"]"            reduce using rule 200
	"."            reduce using rule 200
	"="            reduce using rule 200
	"*"            reduce using rule 200
	"/"            reduce using rule 200
	"**"           reduce using rule 200
	"%"            reduce using rule 200
	"+"            reduce using rule 200
	"-"            reduce using rule 200
	";"            reduce using rule 200
	","            reduce using rule 200
	"|="           reduce using rule 200
	"^="           reduce using rule 200
	"&="           reduce using rule 200
	"<<="          reduce using rule 200
	">>="          reduce using rule 200
	"+="           reduce using rule 200
	"-="           reduce using rule 200
	"*="           reduce using rule 200
	"/="           reduce using rule 200
	"%="           reduce using rule 200
	"from"         reduce using rule 200
	ident          reduce using rule 200
	nestedids      reduce using rule 200
	stringLiteral  reduce using rule 200
	"("            reduce using rule 200
	")"            reduce using rule 200


State 57

	ElementaryTypeName -> fixed .                       (rule 201)

	decimalnum     reduce using rule 201
	"exponent"     reduce using rule 201
	int            reduce using rule 201
	uint           reduce using rule 201
	bytes          reduce using rule 201
	fixed          reduce using rule 201
	ufixed         reduce using rule 201
	"public"       reduce using rule 201
	"internal"     reduce using rule 201
	"private"      reduce using rule 201
	"constant"     reduce using rule 201
	"string"       reduce using rule 201
	function       reduce using rule 201
	"address"      reduce using rule 201
	"bool"         reduce using rule 201
	"do"           reduce using rule 201
	"_"            reduce using rule 201
	"continue"     reduce using rule 201
	"break"        reduce using rule 201
	"return"       reduce using rule 201
	"throw"        reduce using rule 201
	"var"          reduce using rule 201
	"mapping"      reduce using rule 201
	"for"          reduce using rule 201
	"true"         reduce using rule 201
	"false"        reduce using rule 201
	"indexed"      reduce using rule 201
	"if"           reduce using rule 201
	"while"        reduce using rule 201
	"assembly"     reduce using rule 201
	"else"         reduce using rule 201
	"memory"       reduce using rule 201
	"storage"      reduce using rule 201
	"new"          reduce using rule 201
	"++"           reduce using rule 201
	"--"           reduce using rule 201
	"^"            reduce using rule 201
	"!"            reduce using rule 201
	"&&"           reduce using rule 201
	"&"            reduce using rule 201
	"||"           reduce using rule 201
	"|"            reduce using rule 201
	"!="           reduce using rule 201
	"<"            reduce using rule 201
	">"            reduce using rule 201
	">>"           reduce using rule 201
	"<<"           reduce using rule 201
	"<="           reduce using rule 201
	">="           reduce using rule 201
	"=="           reduce using rule 201
	"=>"           reduce using rule 201
	"{"            reduce using rule 201
	"}"            reduce using rule 201
	"["            reduce using rule 201
	"]"            reduce using rule 201
	"."            reduce using rule 201
	"="            reduce using rule 201
	"*"            reduce using rule 201
	"/"            reduce using rule 201
	"**"           reduce using rule 201
	"%"            reduce using rule 201
	"+"            reduce using rule 201
	"-"            reduce using rule 201
	";"            reduce using rule 201
	","            reduce using rule 201
	"|="           reduce using rule 201
	"^="           reduce using rule 201
	"&="           reduce using rule 201
	"<<="          reduce using rule 201
	">>="          reduce using rule 201
	"+="           reduce using rule 201
	"-="           reduce using rule 201
	"*="           reduce using rule 201
	"/="           reduce using rule 201
	"%="           reduce using rule 201
	"from"         reduce using rule 201
	ident          reduce using rule 201
	nestedids      reduce using rule 201
	stringLiteral  reduce using rule 201
	"("            reduce using rule 201
	")"            reduce using rule 201


State 58

	ElementaryTypeName -> ufixed .                      (rule 202)

	decimalnum     reduce using rule 202
	"exponent"     reduce using rule 202
	int            reduce using rule 202
	uint           reduce using rule 202
	bytes          reduce using rule 202
	fixed          reduce using rule 202
	ufixed         reduce using rule 202
	"public"       reduce using rule 202
	"internal"     reduce using rule 202
	"private"      reduce using rule 202
	"constant"     reduce using rule 202
	"string"       reduce using rule 202
	function       reduce using rule 202
	"address"      reduce using rule 202
	"bool"         reduce using rule 202
	"do"           reduce using rule 202
	"_"            reduce using rule 202
	"continue"     reduce using rule 202
	"break"        reduce using rule 202
	"return"       reduce using rule 202
	"throw"        reduce using rule 202
	"var"          reduce using rule 202
	"mapping"      reduce using rule 202
	"for"          reduce using rule 202
	"true"         reduce using rule 202
	"false"        reduce using rule 202
	"indexed"      reduce using rule 202
	"if"           reduce using rule 202
	"while"        reduce using rule 202
	"assembly"     reduce using rule 202
	"else"         reduce using rule 202
	"memory"       reduce using rule 202
	"storage"      reduce using rule 202
	"new"          reduce using rule 202
	"++"           reduce using rule 202
	"--"           reduce using rule 202
	"^"            reduce using rule 202
	"!"            reduce using rule 202
	"&&"           reduce using rule 202
	"&"            reduce using rule 202
	"||"           reduce using rule 202
	"|"            reduce using rule 202
	"!="           reduce using rule 202
	"<"            reduce using rule 202
	">"            reduce using rule 202
	">>"           reduce using rule 202
	"<<"           reduce using rule 202
	"<="           reduce using rule 202
	">="           reduce using rule 202
	"=="           reduce using rule 202
	"=>"           reduce using rule 202
	"{"            reduce using rule 202
	"}"            reduce using rule 202
	"["            reduce using rule 202
	"]"            reduce using rule 202
	"."            reduce using rule 202
	"="            reduce using rule 202
	"*"            reduce using rule 202
	"/"            reduce using rule 202
	"**"           reduce using rule 202
	"%"            reduce using rule 202
	"+"            reduce using rule 202
	"-"            reduce using rule 202
	";"            reduce using rule 202
	","            reduce using rule 202
	"|="           reduce using rule 202
	"^="           reduce using rule 202
	"&="           reduce using rule 202
	"<<="          reduce using rule 202
	">>="          reduce using rule 202
	"+="           reduce using rule 202
	"-="           reduce using rule 202
	"*="           reduce using rule 202
	"/="           reduce using rule 202
	"%="           reduce using rule 202
	"from"         reduce using rule 202
	ident          reduce using rule 202
	nestedids      reduce using rule 202
	stringLiteral  reduce using rule 202
	"("            reduce using rule 202
	")"            reduce using rule 202


State 59

	ElementaryTypeName -> "string" .                    (rule 197)

	decimalnum     reduce using rule 197
	"exponent"     reduce using rule 197
	int            reduce using rule 197
	uint           reduce using rule 197
	bytes          reduce using rule 197
	fixed          reduce using rule 197
	ufixed         reduce using rule 197
	"public"       reduce using rule 197
	"internal"     reduce using rule 197
	"private"      reduce using rule 197
	"constant"     reduce using rule 197
	"string"       reduce using rule 197
	function       reduce using rule 197
	"address"      reduce using rule 197
	"bool"         reduce using rule 197
	"do"           reduce using rule 197
	"_"            reduce using rule 197
	"continue"     reduce using rule 197
	"break"        reduce using rule 197
	"return"       reduce using rule 197
	"throw"        reduce using rule 197
	"var"          reduce using rule 197
	"mapping"      reduce using rule 197
	"for"          reduce using rule 197
	"true"         reduce using rule 197
	"false"        reduce using rule 197
	"indexed"      reduce using rule 197
	"if"           reduce using rule 197
	"while"        reduce using rule 197
	"assembly"     reduce using rule 197
	"else"         reduce using rule 197
	"memory"       reduce using rule 197
	"storage"      reduce using rule 197
	"new"          reduce using rule 197
	"++"           reduce using rule 197
	"--"           reduce using rule 197
	"^"            reduce using rule 197
	"!"            reduce using rule 197
	"&&"           reduce using rule 197
	"&"            reduce using rule 197
	"||"           reduce using rule 197
	"|"            reduce using rule 197
	"!="           reduce using rule 197
	"<"            reduce using rule 197
	">"            reduce using rule 197
	">>"           reduce using rule 197
	"<<"           reduce using rule 197
	"<="           reduce using rule 197
	">="           reduce using rule 197
	"=="           reduce using rule 197
	"=>"           reduce using rule 197
	"{"            reduce using rule 197
	"}"            reduce using rule 197
	"["            reduce using rule 197
	"]"            reduce using rule 197
	"."            reduce using rule 197
	"="            reduce using rule 197
	"*"            reduce using rule 197
	"/"            reduce using rule 197
	"**"           reduce using rule 197
	"%"            reduce using rule 197
	"+"            reduce using rule 197
	"-"            reduce using rule 197
	";"            reduce using rule 197
	","            reduce using rule 197
	"|="           reduce using rule 197
	"^="           reduce using rule 197
	"&="           reduce using rule 197
	"<<="          reduce using rule 197
	">>="          reduce using rule 197
	"+="           reduce using rule 197
	"-="           reduce using rule 197
	"*="           reduce using rule 197
	"/="           reduce using rule 197
	"%="           reduce using rule 197
	"from"         reduce using rule 197
	ident          reduce using rule 197
	nestedids      reduce using rule 197
	stringLiteral  reduce using rule 197
	"("            reduce using rule 197
	")"            reduce using rule 197


State 60

	FunctionDefinition -> function . ident ParameterList list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 29)
	FunctionDefinition -> function . "(" ")" list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 30)
	FunctionTypeName -> function . "(" zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__    (rule 205)

	ident          shift, and enter state 104
	"("            shift, and enter state 105


State 61

	StructDefinition -> "struct" . ident "{" zero__StructVarDecList__ "}"    (rule 50)

	ident          shift, and enter state 103


State 62

	ElementaryTypeName -> "address" .                   (rule 194)

	decimalnum     reduce using rule 194
	"exponent"     reduce using rule 194
	int            reduce using rule 194
	uint           reduce using rule 194
	bytes          reduce using rule 194
	fixed          reduce using rule 194
	ufixed         reduce using rule 194
	"public"       reduce using rule 194
	"internal"     reduce using rule 194
	"private"      reduce using rule 194
	"constant"     reduce using rule 194
	"string"       reduce using rule 194
	function       reduce using rule 194
	"address"      reduce using rule 194
	"bool"         reduce using rule 194
	"do"           reduce using rule 194
	"_"            reduce using rule 194
	"continue"     reduce using rule 194
	"break"        reduce using rule 194
	"return"       reduce using rule 194
	"throw"        reduce using rule 194
	"var"          reduce using rule 194
	"mapping"      reduce using rule 194
	"for"          reduce using rule 194
	"true"         reduce using rule 194
	"false"        reduce using rule 194
	"indexed"      reduce using rule 194
	"if"           reduce using rule 194
	"while"        reduce using rule 194
	"assembly"     reduce using rule 194
	"else"         reduce using rule 194
	"memory"       reduce using rule 194
	"storage"      reduce using rule 194
	"new"          reduce using rule 194
	"++"           reduce using rule 194
	"--"           reduce using rule 194
	"^"            reduce using rule 194
	"!"            reduce using rule 194
	"&&"           reduce using rule 194
	"&"            reduce using rule 194
	"||"           reduce using rule 194
	"|"            reduce using rule 194
	"!="           reduce using rule 194
	"<"            reduce using rule 194
	">"            reduce using rule 194
	">>"           reduce using rule 194
	"<<"           reduce using rule 194
	"<="           reduce using rule 194
	">="           reduce using rule 194
	"=="           reduce using rule 194
	"=>"           reduce using rule 194
	"{"            reduce using rule 194
	"}"            reduce using rule 194
	"["            reduce using rule 194
	"]"            reduce using rule 194
	"."            reduce using rule 194
	"="            reduce using rule 194
	"*"            reduce using rule 194
	"/"            reduce using rule 194
	"**"           reduce using rule 194
	"%"            reduce using rule 194
	"+"            reduce using rule 194
	"-"            reduce using rule 194
	";"            reduce using rule 194
	","            reduce using rule 194
	"|="           reduce using rule 194
	"^="           reduce using rule 194
	"&="           reduce using rule 194
	"<<="          reduce using rule 194
	">>="          reduce using rule 194
	"+="           reduce using rule 194
	"-="           reduce using rule 194
	"*="           reduce using rule 194
	"/="           reduce using rule 194
	"%="           reduce using rule 194
	"from"         reduce using rule 194
	ident          reduce using rule 194
	nestedids      reduce using rule 194
	stringLiteral  reduce using rule 194
	"("            reduce using rule 194
	")"            reduce using rule 194


State 63

	ElementaryTypeName -> "bool" .                      (rule 195)

	decimalnum     reduce using rule 195
	"exponent"     reduce using rule 195
	int            reduce using rule 195
	uint           reduce using rule 195
	bytes          reduce using rule 195
	fixed          reduce using rule 195
	ufixed         reduce using rule 195
	"public"       reduce using rule 195
	"internal"     reduce using rule 195
	"private"      reduce using rule 195
	"constant"     reduce using rule 195
	"string"       reduce using rule 195
	function       reduce using rule 195
	"address"      reduce using rule 195
	"bool"         reduce using rule 195
	"do"           reduce using rule 195
	"_"            reduce using rule 195
	"continue"     reduce using rule 195
	"break"        reduce using rule 195
	"return"       reduce using rule 195
	"throw"        reduce using rule 195
	"var"          reduce using rule 195
	"mapping"      reduce using rule 195
	"for"          reduce using rule 195
	"true"         reduce using rule 195
	"false"        reduce using rule 195
	"indexed"      reduce using rule 195
	"if"           reduce using rule 195
	"while"        reduce using rule 195
	"assembly"     reduce using rule 195
	"else"         reduce using rule 195
	"memory"       reduce using rule 195
	"storage"      reduce using rule 195
	"new"          reduce using rule 195
	"++"           reduce using rule 195
	"--"           reduce using rule 195
	"^"            reduce using rule 195
	"!"            reduce using rule 195
	"&&"           reduce using rule 195
	"&"            reduce using rule 195
	"||"           reduce using rule 195
	"|"            reduce using rule 195
	"!="           reduce using rule 195
	"<"            reduce using rule 195
	">"            reduce using rule 195
	">>"           reduce using rule 195
	"<<"           reduce using rule 195
	"<="           reduce using rule 195
	">="           reduce using rule 195
	"=="           reduce using rule 195
	"=>"           reduce using rule 195
	"{"            reduce using rule 195
	"}"            reduce using rule 195
	"["            reduce using rule 195
	"]"            reduce using rule 195
	"."            reduce using rule 195
	"="            reduce using rule 195
	"*"            reduce using rule 195
	"/"            reduce using rule 195
	"**"           reduce using rule 195
	"%"            reduce using rule 195
	"+"            reduce using rule 195
	"-"            reduce using rule 195
	";"            reduce using rule 195
	","            reduce using rule 195
	"|="           reduce using rule 195
	"^="           reduce using rule 195
	"&="           reduce using rule 195
	"<<="          reduce using rule 195
	">>="          reduce using rule 195
	"+="           reduce using rule 195
	"-="           reduce using rule 195
	"*="           reduce using rule 195
	"/="           reduce using rule 195
	"%="           reduce using rule 195
	"from"         reduce using rule 195
	ident          reduce using rule 195
	nestedids      reduce using rule 195
	stringLiteral  reduce using rule 195
	"("            reduce using rule 195
	")"            reduce using rule 195


State 64

	ElementaryTypeName -> "var" .                       (rule 196)

	decimalnum     reduce using rule 196
	"exponent"     reduce using rule 196
	int            reduce using rule 196
	uint           reduce using rule 196
	bytes          reduce using rule 196
	fixed          reduce using rule 196
	ufixed         reduce using rule 196
	"public"       reduce using rule 196
	"internal"     reduce using rule 196
	"private"      reduce using rule 196
	"constant"     reduce using rule 196
	"string"       reduce using rule 196
	function       reduce using rule 196
	"address"      reduce using rule 196
	"bool"         reduce using rule 196
	"do"           reduce using rule 196
	"_"            reduce using rule 196
	"continue"     reduce using rule 196
	"break"        reduce using rule 196
	"return"       reduce using rule 196
	"throw"        reduce using rule 196
	"var"          reduce using rule 196
	"mapping"      reduce using rule 196
	"for"          reduce using rule 196
	"true"         reduce using rule 196
	"false"        reduce using rule 196
	"indexed"      reduce using rule 196
	"if"           reduce using rule 196
	"while"        reduce using rule 196
	"assembly"     reduce using rule 196
	"else"         reduce using rule 196
	"memory"       reduce using rule 196
	"storage"      reduce using rule 196
	"new"          reduce using rule 196
	"++"           reduce using rule 196
	"--"           reduce using rule 196
	"^"            reduce using rule 196
	"!"            reduce using rule 196
	"&&"           reduce using rule 196
	"&"            reduce using rule 196
	"||"           reduce using rule 196
	"|"            reduce using rule 196
	"!="           reduce using rule 196
	"<"            reduce using rule 196
	">"            reduce using rule 196
	">>"           reduce using rule 196
	"<<"           reduce using rule 196
	"<="           reduce using rule 196
	">="           reduce using rule 196
	"=="           reduce using rule 196
	"=>"           reduce using rule 196
	"{"            reduce using rule 196
	"}"            reduce using rule 196
	"["            reduce using rule 196
	"]"            reduce using rule 196
	"."            reduce using rule 196
	"="            reduce using rule 196
	"*"            reduce using rule 196
	"/"            reduce using rule 196
	"**"           reduce using rule 196
	"%"            reduce using rule 196
	"+"            reduce using rule 196
	"-"            reduce using rule 196
	";"            reduce using rule 196
	","            reduce using rule 196
	"|="           reduce using rule 196
	"^="           reduce using rule 196
	"&="           reduce using rule 196
	"<<="          reduce using rule 196
	">>="          reduce using rule 196
	"+="           reduce using rule 196
	"-="           reduce using rule 196
	"*="           reduce using rule 196
	"/="           reduce using rule 196
	"%="           reduce using rule 196
	"from"         reduce using rule 196
	ident          reduce using rule 196
	nestedids      reduce using rule 196
	stringLiteral  reduce using rule 196
	"("            reduce using rule 196
	")"            reduce using rule 196


State 65

	Mapping -> "mapping" . "(" ElementaryTypeName "=>" TypeName ")"    (rule 203)

	"("            shift, and enter state 102


State 66

	UsingForDec -> "using" . ident "for" TypeName ";"    (rule 73)

	ident          shift, and enter state 101


State 67

	EventDefinition -> "event" . ident zero__EventParamList__ zero__AnonList__ ";"    (rule 43)

	ident          shift, and enter state 100


State 68

	ModifierDefinition -> "modifier" . ident zero__ParameterList__ Block    (rule 53)

	ident          shift, and enter state 99


State 69

	EnumDefinition -> "enum" . ident "{" EnumValList "}"    (rule 57)

	ident          shift, and enter state 98


State 70

	zero__InhExpList__ -> InhExpList .                  (rule 275)

	"{"            reduce using rule 275
	","            reduce using rule 275


State 71

	InheritanceSpecifier -> UserDefinedTypeName zero__InhExpList__ .    (rule 19)

	"{"            reduce using rule 19
	","            reduce using rule 19


State 72

	InhExpList -> "(" . Expression list__CSExpList__ ")"    (rule 20)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 82
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 73

	list1__OMInheritanceSpec__ -> OMInheritanceSpec .    (rule 343)
	list1__OMInheritanceSpec__ -> OMInheritanceSpec . list1__OMInheritanceSpec__    (rule 344)

	"{"            reduce using rule 343
	","            shift, and enter state 76

	OMInheritanceSpecgoto state 73
	list1__OMInheritanceSpec__goto state 81

State 74

	InheritanceSpecList -> "is" InheritanceSpecifier list__OMInheritanceSpec__ .    (rule 17)

	"{"            reduce using rule 17


State 75

	list__OMInheritanceSpec__ -> list1__OMInheritanceSpec__ .    (rule 243)

	"{"            reduce using rule 243


State 76

	OMInheritanceSpec -> "," . InheritanceSpecifier     (rule 18)

	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	InheritanceSpecifiergoto state 80
	UserDefinedTypeNamegoto state 34

State 77

	PragmaDirective -> "pragma" ident "^" version ";" .    (rule 6)

	"pragma"       reduce using rule 6
	"import"       reduce using rule 6
	contract       reduce using rule 6
	"library"      reduce using rule 6
	"interface"    reduce using rule 6
	%eof           reduce using rule 6


State 78

	ImportDirective -> "import" ImportAster zero__ImportAs__ "from" stringLiteral . ";"    (rule 9)

	";"            shift, and enter state 79


State 79

	ImportDirective -> "import" ImportAster zero__ImportAs__ "from" stringLiteral ";" .    (rule 9)

	"pragma"       reduce using rule 9
	"import"       reduce using rule 9
	contract       reduce using rule 9
	"library"      reduce using rule 9
	"interface"    reduce using rule 9
	%eof           reduce using rule 9


State 80

	OMInheritanceSpec -> "," InheritanceSpecifier .     (rule 18)

	"{"            reduce using rule 18
	","            reduce using rule 18


State 81

	list1__OMInheritanceSpec__ -> OMInheritanceSpec list1__OMInheritanceSpec__ .    (rule 344)

	"{"            reduce using rule 344


State 82

	InhExpList -> "(" Expression . list__CSExpList__ ")"    (rule 20)
	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	","            shift, and enter state 172
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            reduce using rule 218

	CSExpList      goto state 147
	list__CSExpList__goto state 148
	list1__CSExpList__goto state 149

State 83

	TermExpression -> Factor . zero__OptionalCallVar__ zero__NestedCall__    (rule 130)

	decimalnum     reduce using rule 288
	"exponent"     reduce using rule 288
	int            reduce using rule 288
	uint           reduce using rule 288
	bytes          reduce using rule 288
	fixed          reduce using rule 288
	ufixed         reduce using rule 288
	"string"       reduce using rule 288
	"address"      reduce using rule 288
	"bool"         reduce using rule 288
	"do"           reduce using rule 288
	"_"            reduce using rule 288
	"continue"     reduce using rule 288
	"break"        reduce using rule 288
	"return"       reduce using rule 288
	"throw"        reduce using rule 288
	"var"          reduce using rule 288
	"for"          reduce using rule 288
	"true"         reduce using rule 288
	"false"        reduce using rule 288
	"if"           reduce using rule 288
	"while"        reduce using rule 288
	"assembly"     reduce using rule 288
	"else"         reduce using rule 288
	"new"          reduce using rule 288
	"++"           reduce using rule 288
	"--"           reduce using rule 288
	"^"            reduce using rule 288
	"!"            reduce using rule 288
	"&&"           reduce using rule 288
	"&"            reduce using rule 288
	"||"           reduce using rule 288
	"|"            reduce using rule 288
	"!="           reduce using rule 288
	"<"            reduce using rule 288
	">"            reduce using rule 288
	">>"           reduce using rule 288
	"<<"           reduce using rule 288
	"<="           reduce using rule 288
	">="           reduce using rule 288
	"=="           reduce using rule 288
	"{"            reduce using rule 288
	"}"            reduce using rule 288
	"]"            reduce using rule 288
	"."            reduce using rule 288
	"="            reduce using rule 288
	"*"            reduce using rule 288
	"/"            reduce using rule 288
	"**"           reduce using rule 288
	"%"            reduce using rule 288
	"+"            reduce using rule 288
	"-"            reduce using rule 288
	";"            reduce using rule 288
	","            reduce using rule 288
	"|="           reduce using rule 288
	"^="           reduce using rule 288
	"&="           reduce using rule 288
	"<<="          reduce using rule 288
	">>="          reduce using rule 288
	"+="           reduce using rule 288
	"-="           reduce using rule 288
	"*="           reduce using rule 288
	"/="           reduce using rule 288
	"%="           reduce using rule 288
	ident          reduce using rule 288
	stringLiteral  reduce using rule 288
	"("            shift, and enter state 146
			(reduce using rule 288)

	")"            reduce using rule 288

	OptionalCallVargoto state 143
	OptionalFunctionCallgoto state 144
	zero__OptionalCallVar__goto state 145

State 84

	Expression -> TermExpression .                      (rule 120)

	decimalnum     reduce using rule 120
	"exponent"     reduce using rule 120
	int            reduce using rule 120
	uint           reduce using rule 120
	bytes          reduce using rule 120
	fixed          reduce using rule 120
	ufixed         reduce using rule 120
	"string"       reduce using rule 120
	"address"      reduce using rule 120
	"bool"         reduce using rule 120
	"do"           reduce using rule 120
	"_"            reduce using rule 120
	"continue"     reduce using rule 120
	"break"        reduce using rule 120
	"return"       reduce using rule 120
	"throw"        reduce using rule 120
	"var"          reduce using rule 120
	"for"          reduce using rule 120
	"true"         reduce using rule 120
	"false"        reduce using rule 120
	"if"           reduce using rule 120
	"while"        reduce using rule 120
	"assembly"     reduce using rule 120
	"else"         reduce using rule 120
	"new"          reduce using rule 120
	"++"           reduce using rule 120
	"--"           reduce using rule 120
	"^"            reduce using rule 120
	"!"            reduce using rule 120
	"&&"           reduce using rule 120
	"&"            reduce using rule 120
	"||"           reduce using rule 120
	"|"            reduce using rule 120
	"!="           reduce using rule 120
	"<"            reduce using rule 120
	">"            reduce using rule 120
	">>"           reduce using rule 120
	"<<"           reduce using rule 120
	"<="           reduce using rule 120
	">="           reduce using rule 120
	"=="           reduce using rule 120
	"{"            reduce using rule 120
	"}"            reduce using rule 120
	"]"            reduce using rule 120
	"="            reduce using rule 120
	"*"            reduce using rule 120
	"/"            reduce using rule 120
	"**"           reduce using rule 120
	"%"            reduce using rule 120
	"+"            reduce using rule 120
	"-"            reduce using rule 120
	";"            reduce using rule 120
	","            reduce using rule 120
	"|="           reduce using rule 120
	"^="           reduce using rule 120
	"&="           reduce using rule 120
	"<<="          reduce using rule 120
	">>="          reduce using rule 120
	"+="           reduce using rule 120
	"-="           reduce using rule 120
	"*="           reduce using rule 120
	"/="           reduce using rule 120
	"%="           reduce using rule 120
	ident          reduce using rule 120
	stringLiteral  reduce using rule 120
	"("            reduce using rule 120
	")"            reduce using rule 120


State 85

	Factor -> BooleanLiteral .                          (rule 124)

	decimalnum     reduce using rule 124
	"exponent"     reduce using rule 124
	int            reduce using rule 124
	uint           reduce using rule 124
	bytes          reduce using rule 124
	fixed          reduce using rule 124
	ufixed         reduce using rule 124
	"string"       reduce using rule 124
	"address"      reduce using rule 124
	"bool"         reduce using rule 124
	"do"           reduce using rule 124
	"_"            reduce using rule 124
	"continue"     reduce using rule 124
	"break"        reduce using rule 124
	"return"       reduce using rule 124
	"throw"        reduce using rule 124
	"var"          reduce using rule 124
	"for"          reduce using rule 124
	"true"         reduce using rule 124
	"false"        reduce using rule 124
	"if"           reduce using rule 124
	"while"        reduce using rule 124
	"assembly"     reduce using rule 124
	"else"         reduce using rule 124
	"new"          reduce using rule 124
	"++"           reduce using rule 124
	"--"           reduce using rule 124
	"^"            reduce using rule 124
	"!"            reduce using rule 124
	"&&"           reduce using rule 124
	"&"            reduce using rule 124
	"||"           reduce using rule 124
	"|"            reduce using rule 124
	"!="           reduce using rule 124
	"<"            reduce using rule 124
	">"            reduce using rule 124
	">>"           reduce using rule 124
	"<<"           reduce using rule 124
	"<="           reduce using rule 124
	">="           reduce using rule 124
	"=="           reduce using rule 124
	"{"            reduce using rule 124
	"}"            reduce using rule 124
	"]"            reduce using rule 124
	"."            reduce using rule 124
	"="            reduce using rule 124
	"*"            reduce using rule 124
	"/"            reduce using rule 124
	"**"           reduce using rule 124
	"%"            reduce using rule 124
	"+"            reduce using rule 124
	"-"            reduce using rule 124
	";"            reduce using rule 124
	","            reduce using rule 124
	"|="           reduce using rule 124
	"^="           reduce using rule 124
	"&="           reduce using rule 124
	"<<="          reduce using rule 124
	">>="          reduce using rule 124
	"+="           reduce using rule 124
	"-="           reduce using rule 124
	"*="           reduce using rule 124
	"/="           reduce using rule 124
	"%="           reduce using rule 124
	ident          reduce using rule 124
	stringLiteral  reduce using rule 124
	"("            reduce using rule 124
	")"            reduce using rule 124


State 86

	Factor -> NumberLiteral .                           (rule 125)

	decimalnum     reduce using rule 125
	"exponent"     reduce using rule 125
	int            reduce using rule 125
	uint           reduce using rule 125
	bytes          reduce using rule 125
	fixed          reduce using rule 125
	ufixed         reduce using rule 125
	"string"       reduce using rule 125
	"address"      reduce using rule 125
	"bool"         reduce using rule 125
	"do"           reduce using rule 125
	"_"            reduce using rule 125
	"continue"     reduce using rule 125
	"break"        reduce using rule 125
	"return"       reduce using rule 125
	"throw"        reduce using rule 125
	"var"          reduce using rule 125
	"for"          reduce using rule 125
	"true"         reduce using rule 125
	"false"        reduce using rule 125
	"if"           reduce using rule 125
	"while"        reduce using rule 125
	"assembly"     reduce using rule 125
	"else"         reduce using rule 125
	"new"          reduce using rule 125
	"++"           reduce using rule 125
	"--"           reduce using rule 125
	"^"            reduce using rule 125
	"!"            reduce using rule 125
	"&&"           reduce using rule 125
	"&"            reduce using rule 125
	"||"           reduce using rule 125
	"|"            reduce using rule 125
	"!="           reduce using rule 125
	"<"            reduce using rule 125
	">"            reduce using rule 125
	">>"           reduce using rule 125
	"<<"           reduce using rule 125
	"<="           reduce using rule 125
	">="           reduce using rule 125
	"=="           reduce using rule 125
	"{"            reduce using rule 125
	"}"            reduce using rule 125
	"]"            reduce using rule 125
	"."            reduce using rule 125
	"="            reduce using rule 125
	"*"            reduce using rule 125
	"/"            reduce using rule 125
	"**"           reduce using rule 125
	"%"            reduce using rule 125
	"+"            reduce using rule 125
	"-"            reduce using rule 125
	";"            reduce using rule 125
	","            reduce using rule 125
	"|="           reduce using rule 125
	"^="           reduce using rule 125
	"&="           reduce using rule 125
	"<<="          reduce using rule 125
	">>="          reduce using rule 125
	"+="           reduce using rule 125
	"-="           reduce using rule 125
	"*="           reduce using rule 125
	"/="           reduce using rule 125
	"%="           reduce using rule 125
	ident          reduce using rule 125
	stringLiteral  reduce using rule 125
	"("            reduce using rule 125
	")"            reduce using rule 125


State 87

	Factor -> ElementaryTypeNameExpression .            (rule 128)

	decimalnum     reduce using rule 128
	"exponent"     reduce using rule 128
	int            reduce using rule 128
	uint           reduce using rule 128
	bytes          reduce using rule 128
	fixed          reduce using rule 128
	ufixed         reduce using rule 128
	"string"       reduce using rule 128
	"address"      reduce using rule 128
	"bool"         reduce using rule 128
	"do"           reduce using rule 128
	"_"            reduce using rule 128
	"continue"     reduce using rule 128
	"break"        reduce using rule 128
	"return"       reduce using rule 128
	"throw"        reduce using rule 128
	"var"          reduce using rule 128
	"for"          reduce using rule 128
	"true"         reduce using rule 128
	"false"        reduce using rule 128
	"if"           reduce using rule 128
	"while"        reduce using rule 128
	"assembly"     reduce using rule 128
	"else"         reduce using rule 128
	"new"          reduce using rule 128
	"++"           reduce using rule 128
	"--"           reduce using rule 128
	"^"            reduce using rule 128
	"!"            reduce using rule 128
	"&&"           reduce using rule 128
	"&"            reduce using rule 128
	"||"           reduce using rule 128
	"|"            reduce using rule 128
	"!="           reduce using rule 128
	"<"            reduce using rule 128
	">"            reduce using rule 128
	">>"           reduce using rule 128
	"<<"           reduce using rule 128
	"<="           reduce using rule 128
	">="           reduce using rule 128
	"=="           reduce using rule 128
	"{"            reduce using rule 128
	"}"            reduce using rule 128
	"]"            reduce using rule 128
	"."            reduce using rule 128
	"="            reduce using rule 128
	"*"            reduce using rule 128
	"/"            reduce using rule 128
	"**"           reduce using rule 128
	"%"            reduce using rule 128
	"+"            reduce using rule 128
	"-"            reduce using rule 128
	";"            reduce using rule 128
	","            reduce using rule 128
	"|="           reduce using rule 128
	"^="           reduce using rule 128
	"&="           reduce using rule 128
	"<<="          reduce using rule 128
	">>="          reduce using rule 128
	"+="           reduce using rule 128
	"-="           reduce using rule 128
	"*="           reduce using rule 128
	"/="           reduce using rule 128
	"%="           reduce using rule 128
	ident          reduce using rule 128
	stringLiteral  reduce using rule 128
	"("            reduce using rule 128
	")"            reduce using rule 128


State 88

	ElementaryTypeNameExpression -> ElementaryTypeName .    (rule 191)

	decimalnum     reduce using rule 191
	"exponent"     reduce using rule 191
	int            reduce using rule 191
	uint           reduce using rule 191
	bytes          reduce using rule 191
	fixed          reduce using rule 191
	ufixed         reduce using rule 191
	"string"       reduce using rule 191
	"address"      reduce using rule 191
	"bool"         reduce using rule 191
	"do"           reduce using rule 191
	"_"            reduce using rule 191
	"continue"     reduce using rule 191
	"break"        reduce using rule 191
	"return"       reduce using rule 191
	"throw"        reduce using rule 191
	"var"          reduce using rule 191
	"for"          reduce using rule 191
	"true"         reduce using rule 191
	"false"        reduce using rule 191
	"if"           reduce using rule 191
	"while"        reduce using rule 191
	"assembly"     reduce using rule 191
	"else"         reduce using rule 191
	"new"          reduce using rule 191
	"++"           reduce using rule 191
	"--"           reduce using rule 191
	"^"            reduce using rule 191
	"!"            reduce using rule 191
	"&&"           reduce using rule 191
	"&"            reduce using rule 191
	"||"           reduce using rule 191
	"|"            reduce using rule 191
	"!="           reduce using rule 191
	"<"            reduce using rule 191
	">"            reduce using rule 191
	">>"           reduce using rule 191
	"<<"           reduce using rule 191
	"<="           reduce using rule 191
	">="           reduce using rule 191
	"=="           reduce using rule 191
	"{"            reduce using rule 191
	"}"            reduce using rule 191
	"]"            reduce using rule 191
	"."            reduce using rule 191
	"="            reduce using rule 191
	"*"            reduce using rule 191
	"/"            reduce using rule 191
	"**"           reduce using rule 191
	"%"            reduce using rule 191
	"+"            reduce using rule 191
	"-"            reduce using rule 191
	";"            reduce using rule 191
	","            reduce using rule 191
	"|="           reduce using rule 191
	"^="           reduce using rule 191
	"&="           reduce using rule 191
	"<<="          reduce using rule 191
	">>="          reduce using rule 191
	"+="           reduce using rule 191
	"-="           reduce using rule 191
	"*="           reduce using rule 191
	"/="           reduce using rule 191
	"%="           reduce using rule 191
	ident          reduce using rule 191
	stringLiteral  reduce using rule 191
	"("            reduce using rule 191
	")"            reduce using rule 191


State 89

	NumberLiteral -> decimalnum . zero__numberunit__    (rule 187)

	decimalnum     reduce using rule 310
	"exponent"     reduce using rule 310
	int            reduce using rule 310
	uint           reduce using rule 310
	bytes          reduce using rule 310
	fixed          reduce using rule 310
	ufixed         reduce using rule 310
	numberunit     shift, and enter state 141
	"string"       reduce using rule 310
	"address"      reduce using rule 310
	"bool"         reduce using rule 310
	"do"           reduce using rule 310
	"_"            reduce using rule 310
	"continue"     reduce using rule 310
	"break"        reduce using rule 310
	"return"       reduce using rule 310
	"throw"        reduce using rule 310
	"var"          reduce using rule 310
	"for"          reduce using rule 310
	"true"         reduce using rule 310
	"false"        reduce using rule 310
	"if"           reduce using rule 310
	"while"        reduce using rule 310
	"assembly"     reduce using rule 310
	"let"          reduce using rule 310
	"else"         reduce using rule 310
	"new"          reduce using rule 310
	"++"           reduce using rule 310
	"--"           reduce using rule 310
	"^"            reduce using rule 310
	"!"            reduce using rule 310
	"&&"           reduce using rule 310
	"&"            reduce using rule 310
	"||"           reduce using rule 310
	"|"            reduce using rule 310
	"!="           reduce using rule 310
	"<"            reduce using rule 310
	">"            reduce using rule 310
	">>"           reduce using rule 310
	"<<"           reduce using rule 310
	"<="           reduce using rule 310
	">="           reduce using rule 310
	"=="           reduce using rule 310
	"{"            reduce using rule 310
	"}"            reduce using rule 310
	"]"            reduce using rule 310
	"."            reduce using rule 310
	"="            reduce using rule 310
	"*"            reduce using rule 310
	"/"            reduce using rule 310
	"**"           reduce using rule 310
	"%"            reduce using rule 310
	"+"            reduce using rule 310
	"-"            reduce using rule 310
	";"            reduce using rule 310
	","            reduce using rule 310
	"|="           reduce using rule 310
	"^="           reduce using rule 310
	"&="           reduce using rule 310
	"<<="          reduce using rule 310
	">>="          reduce using rule 310
	"+="           reduce using rule 310
	"-="           reduce using rule 310
	"*="           reduce using rule 310
	"/="           reduce using rule 310
	"%="           reduce using rule 310
	ident          reduce using rule 310
	stringLiteral  reduce using rule 310
	"("            reduce using rule 310
	")"            reduce using rule 310

	zero__numberunit__goto state 142

State 90

	NumberLiteral -> "exponent" . zero__numberunit__    (rule 188)

	decimalnum     reduce using rule 310
	"exponent"     reduce using rule 310
	int            reduce using rule 310
	uint           reduce using rule 310
	bytes          reduce using rule 310
	fixed          reduce using rule 310
	ufixed         reduce using rule 310
	numberunit     shift, and enter state 141
	"string"       reduce using rule 310
	"address"      reduce using rule 310
	"bool"         reduce using rule 310
	"do"           reduce using rule 310
	"_"            reduce using rule 310
	"continue"     reduce using rule 310
	"break"        reduce using rule 310
	"return"       reduce using rule 310
	"throw"        reduce using rule 310
	"var"          reduce using rule 310
	"for"          reduce using rule 310
	"true"         reduce using rule 310
	"false"        reduce using rule 310
	"if"           reduce using rule 310
	"while"        reduce using rule 310
	"assembly"     reduce using rule 310
	"let"          reduce using rule 310
	"else"         reduce using rule 310
	"new"          reduce using rule 310
	"++"           reduce using rule 310
	"--"           reduce using rule 310
	"^"            reduce using rule 310
	"!"            reduce using rule 310
	"&&"           reduce using rule 310
	"&"            reduce using rule 310
	"||"           reduce using rule 310
	"|"            reduce using rule 310
	"!="           reduce using rule 310
	"<"            reduce using rule 310
	">"            reduce using rule 310
	">>"           reduce using rule 310
	"<<"           reduce using rule 310
	"<="           reduce using rule 310
	">="           reduce using rule 310
	"=="           reduce using rule 310
	"{"            reduce using rule 310
	"}"            reduce using rule 310
	"]"            reduce using rule 310
	"."            reduce using rule 310
	"="            reduce using rule 310
	"*"            reduce using rule 310
	"/"            reduce using rule 310
	"**"           reduce using rule 310
	"%"            reduce using rule 310
	"+"            reduce using rule 310
	"-"            reduce using rule 310
	";"            reduce using rule 310
	","            reduce using rule 310
	"|="           reduce using rule 310
	"^="           reduce using rule 310
	"&="           reduce using rule 310
	"<<="          reduce using rule 310
	">>="          reduce using rule 310
	"+="           reduce using rule 310
	"-="           reduce using rule 310
	"*="           reduce using rule 310
	"/="           reduce using rule 310
	"%="           reduce using rule 310
	ident          reduce using rule 310
	stringLiteral  reduce using rule 310
	"("            reduce using rule 310
	")"            reduce using rule 310

	zero__numberunit__goto state 140

State 91

	BooleanLiteral -> "true" .                          (rule 185)

	decimalnum     reduce using rule 185
	"exponent"     reduce using rule 185
	int            reduce using rule 185
	uint           reduce using rule 185
	bytes          reduce using rule 185
	fixed          reduce using rule 185
	ufixed         reduce using rule 185
	"string"       reduce using rule 185
	"address"      reduce using rule 185
	"bool"         reduce using rule 185
	"do"           reduce using rule 185
	"_"            reduce using rule 185
	"continue"     reduce using rule 185
	"break"        reduce using rule 185
	"return"       reduce using rule 185
	"throw"        reduce using rule 185
	"var"          reduce using rule 185
	"for"          reduce using rule 185
	"true"         reduce using rule 185
	"false"        reduce using rule 185
	"if"           reduce using rule 185
	"while"        reduce using rule 185
	"assembly"     reduce using rule 185
	"else"         reduce using rule 185
	"new"          reduce using rule 185
	"++"           reduce using rule 185
	"--"           reduce using rule 185
	"^"            reduce using rule 185
	"!"            reduce using rule 185
	"&&"           reduce using rule 185
	"&"            reduce using rule 185
	"||"           reduce using rule 185
	"|"            reduce using rule 185
	"!="           reduce using rule 185
	"<"            reduce using rule 185
	">"            reduce using rule 185
	">>"           reduce using rule 185
	"<<"           reduce using rule 185
	"<="           reduce using rule 185
	">="           reduce using rule 185
	"=="           reduce using rule 185
	"{"            reduce using rule 185
	"}"            reduce using rule 185
	"]"            reduce using rule 185
	"."            reduce using rule 185
	"="            reduce using rule 185
	"*"            reduce using rule 185
	"/"            reduce using rule 185
	"**"           reduce using rule 185
	"%"            reduce using rule 185
	"+"            reduce using rule 185
	"-"            reduce using rule 185
	";"            reduce using rule 185
	","            reduce using rule 185
	"|="           reduce using rule 185
	"^="           reduce using rule 185
	"&="           reduce using rule 185
	"<<="          reduce using rule 185
	">>="          reduce using rule 185
	"+="           reduce using rule 185
	"-="           reduce using rule 185
	"*="           reduce using rule 185
	"/="           reduce using rule 185
	"%="           reduce using rule 185
	ident          reduce using rule 185
	stringLiteral  reduce using rule 185
	"("            reduce using rule 185
	")"            reduce using rule 185


State 92

	BooleanLiteral -> "false" .                         (rule 186)

	decimalnum     reduce using rule 186
	"exponent"     reduce using rule 186
	int            reduce using rule 186
	uint           reduce using rule 186
	bytes          reduce using rule 186
	fixed          reduce using rule 186
	ufixed         reduce using rule 186
	"string"       reduce using rule 186
	"address"      reduce using rule 186
	"bool"         reduce using rule 186
	"do"           reduce using rule 186
	"_"            reduce using rule 186
	"continue"     reduce using rule 186
	"break"        reduce using rule 186
	"return"       reduce using rule 186
	"throw"        reduce using rule 186
	"var"          reduce using rule 186
	"for"          reduce using rule 186
	"true"         reduce using rule 186
	"false"        reduce using rule 186
	"if"           reduce using rule 186
	"while"        reduce using rule 186
	"assembly"     reduce using rule 186
	"else"         reduce using rule 186
	"new"          reduce using rule 186
	"++"           reduce using rule 186
	"--"           reduce using rule 186
	"^"            reduce using rule 186
	"!"            reduce using rule 186
	"&&"           reduce using rule 186
	"&"            reduce using rule 186
	"||"           reduce using rule 186
	"|"            reduce using rule 186
	"!="           reduce using rule 186
	"<"            reduce using rule 186
	">"            reduce using rule 186
	">>"           reduce using rule 186
	"<<"           reduce using rule 186
	"<="           reduce using rule 186
	">="           reduce using rule 186
	"=="           reduce using rule 186
	"{"            reduce using rule 186
	"}"            reduce using rule 186
	"]"            reduce using rule 186
	"."            reduce using rule 186
	"="            reduce using rule 186
	"*"            reduce using rule 186
	"/"            reduce using rule 186
	"**"           reduce using rule 186
	"%"            reduce using rule 186
	"+"            reduce using rule 186
	"-"            reduce using rule 186
	";"            reduce using rule 186
	","            reduce using rule 186
	"|="           reduce using rule 186
	"^="           reduce using rule 186
	"&="           reduce using rule 186
	"<<="          reduce using rule 186
	">>="          reduce using rule 186
	"+="           reduce using rule 186
	"-="           reduce using rule 186
	"*="           reduce using rule 186
	"/="           reduce using rule 186
	"%="           reduce using rule 186
	ident          reduce using rule 186
	stringLiteral  reduce using rule 186
	"("            reduce using rule 186
	")"            reduce using rule 186


State 93

	Factor -> "new" . Factor                            (rule 129)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96

	Factor         goto state 139
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 94

	Expression -> "!" . Expression                      (rule 89)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 138
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 95

	Factor -> ident .                                   (rule 127)

	decimalnum     reduce using rule 127
	"exponent"     reduce using rule 127
	int            reduce using rule 127
	uint           reduce using rule 127
	bytes          reduce using rule 127
	fixed          reduce using rule 127
	ufixed         reduce using rule 127
	"string"       reduce using rule 127
	"address"      reduce using rule 127
	"bool"         reduce using rule 127
	"do"           reduce using rule 127
	"_"            reduce using rule 127
	"continue"     reduce using rule 127
	"break"        reduce using rule 127
	"return"       reduce using rule 127
	"throw"        reduce using rule 127
	"var"          reduce using rule 127
	"for"          reduce using rule 127
	"true"         reduce using rule 127
	"false"        reduce using rule 127
	"if"           reduce using rule 127
	"while"        reduce using rule 127
	"assembly"     reduce using rule 127
	"else"         reduce using rule 127
	"new"          reduce using rule 127
	"++"           reduce using rule 127
	"--"           reduce using rule 127
	"^"            reduce using rule 127
	"!"            reduce using rule 127
	"&&"           reduce using rule 127
	"&"            reduce using rule 127
	"||"           reduce using rule 127
	"|"            reduce using rule 127
	"!="           reduce using rule 127
	"<"            reduce using rule 127
	">"            reduce using rule 127
	">>"           reduce using rule 127
	"<<"           reduce using rule 127
	"<="           reduce using rule 127
	">="           reduce using rule 127
	"=="           reduce using rule 127
	"{"            reduce using rule 127
	"}"            reduce using rule 127
	"]"            reduce using rule 127
	"."            reduce using rule 127
	"="            reduce using rule 127
	"*"            reduce using rule 127
	"/"            reduce using rule 127
	"**"           reduce using rule 127
	"%"            reduce using rule 127
	"+"            reduce using rule 127
	"-"            reduce using rule 127
	";"            reduce using rule 127
	","            reduce using rule 127
	"|="           reduce using rule 127
	"^="           reduce using rule 127
	"&="           reduce using rule 127
	"<<="          reduce using rule 127
	">>="          reduce using rule 127
	"+="           reduce using rule 127
	"-="           reduce using rule 127
	"*="           reduce using rule 127
	"/="           reduce using rule 127
	"%="           reduce using rule 127
	ident          reduce using rule 127
	stringLiteral  reduce using rule 127
	"("            reduce using rule 127
	")"            reduce using rule 127


State 96

	Factor -> stringLiteral .                           (rule 126)

	decimalnum     reduce using rule 126
	"exponent"     reduce using rule 126
	int            reduce using rule 126
	uint           reduce using rule 126
	bytes          reduce using rule 126
	fixed          reduce using rule 126
	ufixed         reduce using rule 126
	"string"       reduce using rule 126
	"address"      reduce using rule 126
	"bool"         reduce using rule 126
	"do"           reduce using rule 126
	"_"            reduce using rule 126
	"continue"     reduce using rule 126
	"break"        reduce using rule 126
	"return"       reduce using rule 126
	"throw"        reduce using rule 126
	"var"          reduce using rule 126
	"for"          reduce using rule 126
	"true"         reduce using rule 126
	"false"        reduce using rule 126
	"if"           reduce using rule 126
	"while"        reduce using rule 126
	"assembly"     reduce using rule 126
	"else"         reduce using rule 126
	"new"          reduce using rule 126
	"++"           reduce using rule 126
	"--"           reduce using rule 126
	"^"            reduce using rule 126
	"!"            reduce using rule 126
	"&&"           reduce using rule 126
	"&"            reduce using rule 126
	"||"           reduce using rule 126
	"|"            reduce using rule 126
	"!="           reduce using rule 126
	"<"            reduce using rule 126
	">"            reduce using rule 126
	">>"           reduce using rule 126
	"<<"           reduce using rule 126
	"<="           reduce using rule 126
	">="           reduce using rule 126
	"=="           reduce using rule 126
	"{"            reduce using rule 126
	"}"            reduce using rule 126
	"]"            reduce using rule 126
	"."            reduce using rule 126
	"="            reduce using rule 126
	"*"            reduce using rule 126
	"/"            reduce using rule 126
	"**"           reduce using rule 126
	"%"            reduce using rule 126
	"+"            reduce using rule 126
	"-"            reduce using rule 126
	";"            reduce using rule 126
	","            reduce using rule 126
	"|="           reduce using rule 126
	"^="           reduce using rule 126
	"&="           reduce using rule 126
	"<<="          reduce using rule 126
	">>="          reduce using rule 126
	"+="           reduce using rule 126
	"-="           reduce using rule 126
	"*="           reduce using rule 126
	"/="           reduce using rule 126
	"%="           reduce using rule 126
	ident          reduce using rule 126
	stringLiteral  reduce using rule 126
	"("            reduce using rule 126
	")"            reduce using rule 126


State 97

	Expression -> "(" . Expression ")" zero__ParenthesisExpressionFollowup__    (rule 88)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 137
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 98

	EnumDefinition -> "enum" ident . "{" EnumValList "}"    (rule 57)

	"{"            shift, and enter state 136


State 99

	ModifierDefinition -> "modifier" ident . zero__ParameterList__ Block    (rule 53)

	"{"            reduce using rule 292
	"("            shift, and enter state 127

	ParameterList  goto state 134
	zero__ParameterList__goto state 135

State 100

	EventDefinition -> "event" ident . zero__EventParamList__ zero__AnonList__ ";"    (rule 43)

	"anonymous"    reduce using rule 258
	";"            reduce using rule 258
	"("            shift, and enter state 133

	EventParamList goto state 131
	zero__EventParamList__goto state 132

State 101

	UsingForDec -> "using" ident . "for" TypeName ";"    (rule 73)

	"for"          shift, and enter state 130


State 102

	Mapping -> "mapping" "(" . ElementaryTypeName "=>" TypeName ")"    (rule 203)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64

	ElementaryTypeNamegoto state 129

State 103

	StructDefinition -> "struct" ident . "{" zero__StructVarDecList__ "}"    (rule 50)

	"{"            shift, and enter state 128


State 104

	FunctionDefinition -> function ident . ParameterList list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 29)

	"("            shift, and enter state 127

	ParameterList  goto state 126

State 105

	FunctionDefinition -> function "(" . ")" list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 30)
	FunctionTypeName -> function "(" . zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__    (rule 205)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            shift, and enter state 125
			(reduce using rule 266)


	TypeName       goto state 120
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	FParameters    goto state 121
	FParam         goto state 122
	zero__FParameters__goto state 123

State 106

	ContractDefinition -> ConLibInt ident zero__InheritanceSpecList__ "{" list__ContractContents__ "}" .    (rule 13)

	"pragma"       reduce using rule 13
	"import"       reduce using rule 13
	contract       reduce using rule 13
	"library"      reduce using rule 13
	"interface"    reduce using rule 13
	%eof           reduce using rule 13


State 107

	list1__AssVar__ -> AssVar .                         (rule 313)
	list1__AssVar__ -> AssVar . list1__AssVar__         (rule 314)

	"public"       shift, and enter state 110
	"internal"     shift, and enter state 111
	"private"      shift, and enter state 112
	"constant"     shift, and enter state 113
	ident          reduce using rule 313

	AssVar         goto state 107
	list1__AssVar__goto state 119

State 108

	StateVarDeclaration -> TypeName list__AssVar__ . ident zero__MExpression__ ";"    (rule 72)

	ident          shift, and enter state 118


State 109

	list__AssVar__ -> list1__AssVar__ .                 (rule 213)

	ident          reduce using rule 213


State 110

	AssVar -> "public" .                                (rule 79)

	"public"       reduce using rule 79
	"internal"     reduce using rule 79
	"private"      reduce using rule 79
	"constant"     reduce using rule 79
	ident          reduce using rule 79


State 111

	AssVar -> "internal" .                              (rule 81)

	"public"       reduce using rule 81
	"internal"     reduce using rule 81
	"private"      reduce using rule 81
	"constant"     reduce using rule 81
	ident          reduce using rule 81


State 112

	AssVar -> "private" .                               (rule 80)

	"public"       reduce using rule 80
	"internal"     reduce using rule 80
	"private"      reduce using rule 80
	"constant"     reduce using rule 80
	ident          reduce using rule 80


State 113

	AssVar -> "constant" .                              (rule 82)

	"public"       reduce using rule 82
	"internal"     reduce using rule 82
	"private"      reduce using rule 82
	"constant"     reduce using rule 82
	ident          reduce using rule 82


State 114

	ArrayTypeName -> TypeName "[" . zero__Expression__ "]"    (rule 204)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"]"            reduce using rule 262
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 116
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__Expression__goto state 117

State 115

	list1__ContractContents__ -> ContractContents list1__ContractContents__ .    (rule 320)

	"}"            reduce using rule 320


State 116

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	zero__Expression__ -> Expression .                  (rule 261)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"]"            reduce using rule 261
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 261
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182


State 117

	ArrayTypeName -> TypeName "[" zero__Expression__ . "]"    (rule 204)

	"]"            shift, and enter state 277


State 118

	StateVarDeclaration -> TypeName list__AssVar__ ident . zero__MExpression__ ";"    (rule 72)

	"="            shift, and enter state 276
	";"            reduce using rule 280

	MExpression    goto state 274
	zero__MExpression__goto state 275

State 119

	list1__AssVar__ -> AssVar list1__AssVar__ .         (rule 314)

	ident          reduce using rule 314


State 120

	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)
	FParam -> TypeName . zero__StorageLocation__        (rule 212)

	int            reduce using rule 302
	uint           reduce using rule 302
	bytes          reduce using rule 302
	fixed          reduce using rule 302
	ufixed         reduce using rule 302
	"string"       reduce using rule 302
	function       reduce using rule 302
	"address"      reduce using rule 302
	"bool"         reduce using rule 302
	"var"          reduce using rule 302
	"mapping"      reduce using rule 302
	"memory"       shift, and enter state 272
	"storage"      shift, and enter state 273
	"["            shift, and enter state 114
	","            reduce using rule 302
	ident          reduce using rule 302
	nestedids      reduce using rule 302
	")"            reduce using rule 302

	StorageLocationgoto state 270
	zero__StorageLocation__goto state 271

State 121

	zero__FParameters__ -> FParameters .                (rule 265)

	")"            reduce using rule 265


State 122

	FParameters -> FParam . list__FParamList__          (rule 210)

	int            reduce using rule 226
	uint           reduce using rule 226
	bytes          reduce using rule 226
	fixed          reduce using rule 226
	ufixed         reduce using rule 226
	"string"       reduce using rule 226
	function       reduce using rule 226
	"address"      reduce using rule 226
	"bool"         reduce using rule 226
	"var"          reduce using rule 226
	"mapping"      reduce using rule 226
	","            shift, and enter state 269
	ident          reduce using rule 226
	nestedids      reduce using rule 226
	")"            reduce using rule 226

	FParamList     goto state 266
	list__FParamList__goto state 267
	list1__FParamList__goto state 268

State 123

	FunctionTypeName -> function "(" zero__FParameters__ . ")" list__FTNParams__ zero__FTNReturn__    (rule 205)

	")"            shift, and enter state 265


State 124

	FunctionTypeName -> function . "(" zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__    (rule 205)

	"("            shift, and enter state 264


State 125

	FunctionDefinition -> function "(" ")" . list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 30)

	"external"     shift, and enter state 254
	"public"       shift, and enter state 255
	"internal"     shift, and enter state 256
	"private"      shift, and enter state 257
	"constant"     shift, and enter state 258
	"view"         shift, and enter state 259
	"pure"         shift, and enter state 260
	"payable"      shift, and enter state 261
	"returns"      reduce using rule 232
	"{"            reduce using rule 232
	";"            reduce using rule 232
	ident          shift, and enter state 262

	FuncMods       goto state 248
	ModifierInvocationgoto state 249
	StateMutabilitygoto state 250
	FuncVar        goto state 251
	list__FuncMods__goto state 263
	list1__FuncMods__goto state 253

State 126

	FunctionDefinition -> function ident ParameterList . list__FuncMods__ zero__ReturnParam__ TermBlock    (rule 29)

	"external"     shift, and enter state 254
	"public"       shift, and enter state 255
	"internal"     shift, and enter state 256
	"private"      shift, and enter state 257
	"constant"     shift, and enter state 258
	"view"         shift, and enter state 259
	"pure"         shift, and enter state 260
	"payable"      shift, and enter state 261
	"returns"      reduce using rule 232
	"{"            reduce using rule 232
	";"            reduce using rule 232
	ident          shift, and enter state 262

	FuncMods       goto state 248
	ModifierInvocationgoto state 249
	StateMutabilitygoto state 250
	FuncVar        goto state 251
	list__FuncMods__goto state 252
	list1__FuncMods__goto state 253

State 127

	ParameterList -> "(" . zero__Parameters__ ")"       (rule 31)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            reduce using rule 294

	Parameters     goto state 244
	Parameter      goto state 245
	TypeName       goto state 246
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	zero__Parameters__goto state 247

State 128

	StructDefinition -> "struct" ident "{" . zero__StructVarDecList__ "}"    (rule 50)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	"}"            reduce using rule 304
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	StructVarDecListgoto state 239
	StructValue    goto state 240
	TypeName       goto state 241
	VariableDeclarationgoto state 242
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	zero__StructVarDecList__goto state 243

State 129

	Mapping -> "mapping" "(" ElementaryTypeName . "=>" TypeName ")"    (rule 203)

	"=>"           shift, and enter state 238


State 130

	UsingForDec -> "using" ident "for" . TypeName ";"    (rule 73)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	TypeName       goto state 237
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51

State 131

	zero__EventParamList__ -> EventParamList .          (rule 257)

	"anonymous"    reduce using rule 257
	";"            reduce using rule 257


State 132

	EventDefinition -> "event" ident zero__EventParamList__ . zero__AnonList__ ";"    (rule 43)

	"anonymous"    shift, and enter state 236
	";"            reduce using rule 252

	AnonList       goto state 234
	zero__AnonList__goto state 235

State 133

	EventParamList -> "(" . zero__EventParams__ ")"     (rule 44)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            reduce using rule 260

	EventParams    goto state 230
	EParameters    goto state 231
	TypeName       goto state 232
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	zero__EventParams__goto state 233

State 134

	zero__ParameterList__ -> ParameterList .            (rule 291)

	"{"            reduce using rule 291


State 135

	ModifierDefinition -> "modifier" ident zero__ParameterList__ . Block    (rule 53)

	"{"            shift, and enter state 229

	Block          goto state 228

State 136

	EnumDefinition -> "enum" ident "{" . EnumValList "}"    (rule 57)

	ident          shift, and enter state 227

	EnumValue      goto state 225
	EnumValList    goto state 226

State 137

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> "(" Expression . ")" zero__ParenthesisExpressionFollowup__    (rule 88)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            shift, and enter state 224


State 138

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> "!" Expression .                      (rule 89)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 89
	"exponent"     reduce using rule 89
	int            reduce using rule 89
	uint           reduce using rule 89
	bytes          reduce using rule 89
	fixed          reduce using rule 89
	ufixed         reduce using rule 89
	"string"       reduce using rule 89
	"address"      reduce using rule 89
	"bool"         reduce using rule 89
	"do"           reduce using rule 89
	"_"            reduce using rule 89
	"continue"     reduce using rule 89
	"break"        reduce using rule 89
	"return"       reduce using rule 89
	"throw"        reduce using rule 89
	"var"          reduce using rule 89
	"for"          reduce using rule 89
	"true"         reduce using rule 89
	"false"        reduce using rule 89
	"if"           reduce using rule 89
	"while"        reduce using rule 89
	"assembly"     reduce using rule 89
	"else"         reduce using rule 89
	"new"          reduce using rule 89
	"++"           reduce using rule 89
	"--"           reduce using rule 89
	"^"            reduce using rule 89
	"!"            reduce using rule 89
	"&&"           reduce using rule 89
	"&"            reduce using rule 89
	"||"           reduce using rule 89
	"|"            reduce using rule 89
	"!="           reduce using rule 89
	"<"            reduce using rule 89
	">"            reduce using rule 89
	">>"           reduce using rule 89
	"<<"           reduce using rule 89
	"<="           reduce using rule 89
	">="           reduce using rule 89
	"=="           reduce using rule 89
	"{"            reduce using rule 89
	"}"            reduce using rule 89
	"]"            reduce using rule 89
	"="            reduce using rule 89
	"*"            reduce using rule 89
	"/"            reduce using rule 89
	"**"           reduce using rule 89
	"%"            reduce using rule 89
	"+"            reduce using rule 89
	"-"            reduce using rule 89
	";"            reduce using rule 89
	","            reduce using rule 89
	"|="           reduce using rule 89
	"^="           reduce using rule 89
	"&="           reduce using rule 89
	"<<="          reduce using rule 89
	">>="          reduce using rule 89
	"+="           reduce using rule 89
	"-="           reduce using rule 89
	"*="           reduce using rule 89
	"/="           reduce using rule 89
	"%="           reduce using rule 89
	ident          reduce using rule 89
	stringLiteral  reduce using rule 89
	"("            reduce using rule 89
	")"            reduce using rule 89


State 139

	Factor -> "new" Factor .                            (rule 129)

	decimalnum     reduce using rule 129
	"exponent"     reduce using rule 129
	int            reduce using rule 129
	uint           reduce using rule 129
	bytes          reduce using rule 129
	fixed          reduce using rule 129
	ufixed         reduce using rule 129
	"string"       reduce using rule 129
	"address"      reduce using rule 129
	"bool"         reduce using rule 129
	"do"           reduce using rule 129
	"_"            reduce using rule 129
	"continue"     reduce using rule 129
	"break"        reduce using rule 129
	"return"       reduce using rule 129
	"throw"        reduce using rule 129
	"var"          reduce using rule 129
	"for"          reduce using rule 129
	"true"         reduce using rule 129
	"false"        reduce using rule 129
	"if"           reduce using rule 129
	"while"        reduce using rule 129
	"assembly"     reduce using rule 129
	"else"         reduce using rule 129
	"new"          reduce using rule 129
	"++"           reduce using rule 129
	"--"           reduce using rule 129
	"^"            reduce using rule 129
	"!"            reduce using rule 129
	"&&"           reduce using rule 129
	"&"            reduce using rule 129
	"||"           reduce using rule 129
	"|"            reduce using rule 129
	"!="           reduce using rule 129
	"<"            reduce using rule 129
	">"            reduce using rule 129
	">>"           reduce using rule 129
	"<<"           reduce using rule 129
	"<="           reduce using rule 129
	">="           reduce using rule 129
	"=="           reduce using rule 129
	"{"            reduce using rule 129
	"}"            reduce using rule 129
	"]"            reduce using rule 129
	"."            reduce using rule 129
	"="            reduce using rule 129
	"*"            reduce using rule 129
	"/"            reduce using rule 129
	"**"           reduce using rule 129
	"%"            reduce using rule 129
	"+"            reduce using rule 129
	"-"            reduce using rule 129
	";"            reduce using rule 129
	","            reduce using rule 129
	"|="           reduce using rule 129
	"^="           reduce using rule 129
	"&="           reduce using rule 129
	"<<="          reduce using rule 129
	">>="          reduce using rule 129
	"+="           reduce using rule 129
	"-="           reduce using rule 129
	"*="           reduce using rule 129
	"/="           reduce using rule 129
	"%="           reduce using rule 129
	ident          reduce using rule 129
	stringLiteral  reduce using rule 129
	"("            reduce using rule 129
	")"            reduce using rule 129


State 140

	NumberLiteral -> "exponent" zero__numberunit__ .    (rule 188)

	decimalnum     reduce using rule 188
	"exponent"     reduce using rule 188
	int            reduce using rule 188
	uint           reduce using rule 188
	bytes          reduce using rule 188
	fixed          reduce using rule 188
	ufixed         reduce using rule 188
	"string"       reduce using rule 188
	"address"      reduce using rule 188
	"bool"         reduce using rule 188
	"do"           reduce using rule 188
	"_"            reduce using rule 188
	"continue"     reduce using rule 188
	"break"        reduce using rule 188
	"return"       reduce using rule 188
	"throw"        reduce using rule 188
	"var"          reduce using rule 188
	"for"          reduce using rule 188
	"true"         reduce using rule 188
	"false"        reduce using rule 188
	"if"           reduce using rule 188
	"while"        reduce using rule 188
	"assembly"     reduce using rule 188
	"let"          reduce using rule 188
	"else"         reduce using rule 188
	"new"          reduce using rule 188
	"++"           reduce using rule 188
	"--"           reduce using rule 188
	"^"            reduce using rule 188
	"!"            reduce using rule 188
	"&&"           reduce using rule 188
	"&"            reduce using rule 188
	"||"           reduce using rule 188
	"|"            reduce using rule 188
	"!="           reduce using rule 188
	"<"            reduce using rule 188
	">"            reduce using rule 188
	">>"           reduce using rule 188
	"<<"           reduce using rule 188
	"<="           reduce using rule 188
	">="           reduce using rule 188
	"=="           reduce using rule 188
	"{"            reduce using rule 188
	"}"            reduce using rule 188
	"]"            reduce using rule 188
	"."            reduce using rule 188
	"="            reduce using rule 188
	"*"            reduce using rule 188
	"/"            reduce using rule 188
	"**"           reduce using rule 188
	"%"            reduce using rule 188
	"+"            reduce using rule 188
	"-"            reduce using rule 188
	";"            reduce using rule 188
	","            reduce using rule 188
	"|="           reduce using rule 188
	"^="           reduce using rule 188
	"&="           reduce using rule 188
	"<<="          reduce using rule 188
	">>="          reduce using rule 188
	"+="           reduce using rule 188
	"-="           reduce using rule 188
	"*="           reduce using rule 188
	"/="           reduce using rule 188
	"%="           reduce using rule 188
	ident          reduce using rule 188
	stringLiteral  reduce using rule 188
	"("            reduce using rule 188
	")"            reduce using rule 188


State 141

	zero__numberunit__ -> numberunit .                  (rule 309)

	decimalnum     reduce using rule 309
	"exponent"     reduce using rule 309
	int            reduce using rule 309
	uint           reduce using rule 309
	bytes          reduce using rule 309
	fixed          reduce using rule 309
	ufixed         reduce using rule 309
	"string"       reduce using rule 309
	"address"      reduce using rule 309
	"bool"         reduce using rule 309
	"do"           reduce using rule 309
	"_"            reduce using rule 309
	"continue"     reduce using rule 309
	"break"        reduce using rule 309
	"return"       reduce using rule 309
	"throw"        reduce using rule 309
	"var"          reduce using rule 309
	"for"          reduce using rule 309
	"true"         reduce using rule 309
	"false"        reduce using rule 309
	"if"           reduce using rule 309
	"while"        reduce using rule 309
	"assembly"     reduce using rule 309
	"let"          reduce using rule 309
	"else"         reduce using rule 309
	"new"          reduce using rule 309
	"++"           reduce using rule 309
	"--"           reduce using rule 309
	"^"            reduce using rule 309
	"!"            reduce using rule 309
	"&&"           reduce using rule 309
	"&"            reduce using rule 309
	"||"           reduce using rule 309
	"|"            reduce using rule 309
	"!="           reduce using rule 309
	"<"            reduce using rule 309
	">"            reduce using rule 309
	">>"           reduce using rule 309
	"<<"           reduce using rule 309
	"<="           reduce using rule 309
	">="           reduce using rule 309
	"=="           reduce using rule 309
	"{"            reduce using rule 309
	"}"            reduce using rule 309
	"]"            reduce using rule 309
	"."            reduce using rule 309
	"="            reduce using rule 309
	"*"            reduce using rule 309
	"/"            reduce using rule 309
	"**"           reduce using rule 309
	"%"            reduce using rule 309
	"+"            reduce using rule 309
	"-"            reduce using rule 309
	";"            reduce using rule 309
	","            reduce using rule 309
	"|="           reduce using rule 309
	"^="           reduce using rule 309
	"&="           reduce using rule 309
	"<<="          reduce using rule 309
	">>="          reduce using rule 309
	"+="           reduce using rule 309
	"-="           reduce using rule 309
	"*="           reduce using rule 309
	"/="           reduce using rule 309
	"%="           reduce using rule 309
	ident          reduce using rule 309
	stringLiteral  reduce using rule 309
	"("            reduce using rule 309
	")"            reduce using rule 309


State 142

	NumberLiteral -> decimalnum zero__numberunit__ .    (rule 187)

	decimalnum     reduce using rule 187
	"exponent"     reduce using rule 187
	int            reduce using rule 187
	uint           reduce using rule 187
	bytes          reduce using rule 187
	fixed          reduce using rule 187
	ufixed         reduce using rule 187
	"string"       reduce using rule 187
	"address"      reduce using rule 187
	"bool"         reduce using rule 187
	"do"           reduce using rule 187
	"_"            reduce using rule 187
	"continue"     reduce using rule 187
	"break"        reduce using rule 187
	"return"       reduce using rule 187
	"throw"        reduce using rule 187
	"var"          reduce using rule 187
	"for"          reduce using rule 187
	"true"         reduce using rule 187
	"false"        reduce using rule 187
	"if"           reduce using rule 187
	"while"        reduce using rule 187
	"assembly"     reduce using rule 187
	"let"          reduce using rule 187
	"else"         reduce using rule 187
	"new"          reduce using rule 187
	"++"           reduce using rule 187
	"--"           reduce using rule 187
	"^"            reduce using rule 187
	"!"            reduce using rule 187
	"&&"           reduce using rule 187
	"&"            reduce using rule 187
	"||"           reduce using rule 187
	"|"            reduce using rule 187
	"!="           reduce using rule 187
	"<"            reduce using rule 187
	">"            reduce using rule 187
	">>"           reduce using rule 187
	"<<"           reduce using rule 187
	"<="           reduce using rule 187
	">="           reduce using rule 187
	"=="           reduce using rule 187
	"{"            reduce using rule 187
	"}"            reduce using rule 187
	"]"            reduce using rule 187
	"."            reduce using rule 187
	"="            reduce using rule 187
	"*"            reduce using rule 187
	"/"            reduce using rule 187
	"**"           reduce using rule 187
	"%"            reduce using rule 187
	"+"            reduce using rule 187
	"-"            reduce using rule 187
	";"            reduce using rule 187
	","            reduce using rule 187
	"|="           reduce using rule 187
	"^="           reduce using rule 187
	"&="           reduce using rule 187
	"<<="          reduce using rule 187
	">>="          reduce using rule 187
	"+="           reduce using rule 187
	"-="           reduce using rule 187
	"*="           reduce using rule 187
	"/="           reduce using rule 187
	"%="           reduce using rule 187
	ident          reduce using rule 187
	stringLiteral  reduce using rule 187
	"("            reduce using rule 187
	")"            reduce using rule 187


State 143

	zero__OptionalCallVar__ -> OptionalCallVar .        (rule 287)

	decimalnum     reduce using rule 287
	"exponent"     reduce using rule 287
	int            reduce using rule 287
	uint           reduce using rule 287
	bytes          reduce using rule 287
	fixed          reduce using rule 287
	ufixed         reduce using rule 287
	"string"       reduce using rule 287
	"address"      reduce using rule 287
	"bool"         reduce using rule 287
	"do"           reduce using rule 287
	"_"            reduce using rule 287
	"continue"     reduce using rule 287
	"break"        reduce using rule 287
	"return"       reduce using rule 287
	"throw"        reduce using rule 287
	"var"          reduce using rule 287
	"for"          reduce using rule 287
	"true"         reduce using rule 287
	"false"        reduce using rule 287
	"if"           reduce using rule 287
	"while"        reduce using rule 287
	"assembly"     reduce using rule 287
	"else"         reduce using rule 287
	"new"          reduce using rule 287
	"++"           reduce using rule 287
	"--"           reduce using rule 287
	"^"            reduce using rule 287
	"!"            reduce using rule 287
	"&&"           reduce using rule 287
	"&"            reduce using rule 287
	"||"           reduce using rule 287
	"|"            reduce using rule 287
	"!="           reduce using rule 287
	"<"            reduce using rule 287
	">"            reduce using rule 287
	">>"           reduce using rule 287
	"<<"           reduce using rule 287
	"<="           reduce using rule 287
	">="           reduce using rule 287
	"=="           reduce using rule 287
	"{"            reduce using rule 287
	"}"            reduce using rule 287
	"]"            reduce using rule 287
	"."            reduce using rule 287
	"="            reduce using rule 287
	"*"            reduce using rule 287
	"/"            reduce using rule 287
	"**"           reduce using rule 287
	"%"            reduce using rule 287
	"+"            reduce using rule 287
	"-"            reduce using rule 287
	";"            reduce using rule 287
	","            reduce using rule 287
	"|="           reduce using rule 287
	"^="           reduce using rule 287
	"&="           reduce using rule 287
	"<<="          reduce using rule 287
	">>="          reduce using rule 287
	"+="           reduce using rule 287
	"-="           reduce using rule 287
	"*="           reduce using rule 287
	"/="           reduce using rule 287
	"%="           reduce using rule 287
	ident          reduce using rule 287
	stringLiteral  reduce using rule 287
	"("            reduce using rule 287
	")"            reduce using rule 287


State 144

	OptionalCallVar -> OptionalFunctionCall .           (rule 131)

	decimalnum     reduce using rule 131
	"exponent"     reduce using rule 131
	int            reduce using rule 131
	uint           reduce using rule 131
	bytes          reduce using rule 131
	fixed          reduce using rule 131
	ufixed         reduce using rule 131
	"string"       reduce using rule 131
	"address"      reduce using rule 131
	"bool"         reduce using rule 131
	"do"           reduce using rule 131
	"_"            reduce using rule 131
	"continue"     reduce using rule 131
	"break"        reduce using rule 131
	"return"       reduce using rule 131
	"throw"        reduce using rule 131
	"var"          reduce using rule 131
	"for"          reduce using rule 131
	"true"         reduce using rule 131
	"false"        reduce using rule 131
	"if"           reduce using rule 131
	"while"        reduce using rule 131
	"assembly"     reduce using rule 131
	"else"         reduce using rule 131
	"new"          reduce using rule 131
	"++"           reduce using rule 131
	"--"           reduce using rule 131
	"^"            reduce using rule 131
	"!"            reduce using rule 131
	"&&"           reduce using rule 131
	"&"            reduce using rule 131
	"||"           reduce using rule 131
	"|"            reduce using rule 131
	"!="           reduce using rule 131
	"<"            reduce using rule 131
	">"            reduce using rule 131
	">>"           reduce using rule 131
	"<<"           reduce using rule 131
	"<="           reduce using rule 131
	">="           reduce using rule 131
	"=="           reduce using rule 131
	"{"            reduce using rule 131
	"}"            reduce using rule 131
	"]"            reduce using rule 131
	"."            reduce using rule 131
	"="            reduce using rule 131
	"*"            reduce using rule 131
	"/"            reduce using rule 131
	"**"           reduce using rule 131
	"%"            reduce using rule 131
	"+"            reduce using rule 131
	"-"            reduce using rule 131
	";"            reduce using rule 131
	","            reduce using rule 131
	"|="           reduce using rule 131
	"^="           reduce using rule 131
	"&="           reduce using rule 131
	"<<="          reduce using rule 131
	">>="          reduce using rule 131
	"+="           reduce using rule 131
	"-="           reduce using rule 131
	"*="           reduce using rule 131
	"/="           reduce using rule 131
	"%="           reduce using rule 131
	ident          reduce using rule 131
	stringLiteral  reduce using rule 131
	"("            reduce using rule 131
	")"            reduce using rule 131


State 145

	TermExpression -> Factor zero__OptionalCallVar__ . zero__NestedCall__    (rule 130)

	decimalnum     reduce using rule 286
	"exponent"     reduce using rule 286
	int            reduce using rule 286
	uint           reduce using rule 286
	bytes          reduce using rule 286
	fixed          reduce using rule 286
	ufixed         reduce using rule 286
	"string"       reduce using rule 286
	"address"      reduce using rule 286
	"bool"         reduce using rule 286
	"do"           reduce using rule 286
	"_"            reduce using rule 286
	"continue"     reduce using rule 286
	"break"        reduce using rule 286
	"return"       reduce using rule 286
	"throw"        reduce using rule 286
	"var"          reduce using rule 286
	"for"          reduce using rule 286
	"true"         reduce using rule 286
	"false"        reduce using rule 286
	"if"           reduce using rule 286
	"while"        reduce using rule 286
	"assembly"     reduce using rule 286
	"else"         reduce using rule 286
	"new"          reduce using rule 286
	"++"           reduce using rule 286
	"--"           reduce using rule 286
	"^"            reduce using rule 286
	"!"            reduce using rule 286
	"&&"           reduce using rule 286
	"&"            reduce using rule 286
	"||"           reduce using rule 286
	"|"            reduce using rule 286
	"!="           reduce using rule 286
	"<"            reduce using rule 286
	">"            reduce using rule 286
	">>"           reduce using rule 286
	"<<"           reduce using rule 286
	"<="           reduce using rule 286
	">="           reduce using rule 286
	"=="           reduce using rule 286
	"{"            reduce using rule 286
	"}"            reduce using rule 286
	"]"            reduce using rule 286
	"."            shift, and enter state 223
	"="            reduce using rule 286
	"*"            reduce using rule 286
	"/"            reduce using rule 286
	"**"           reduce using rule 286
	"%"            reduce using rule 286
	"+"            reduce using rule 286
	"-"            reduce using rule 286
	";"            reduce using rule 286
	","            reduce using rule 286
	"|="           reduce using rule 286
	"^="           reduce using rule 286
	"&="           reduce using rule 286
	"<<="          reduce using rule 286
	">>="          reduce using rule 286
	"+="           reduce using rule 286
	"-="           reduce using rule 286
	"*="           reduce using rule 286
	"/="           reduce using rule 286
	"%="           reduce using rule 286
	ident          reduce using rule 286
	stringLiteral  reduce using rule 286
	"("            reduce using rule 286
	")"            reduce using rule 286

	NestedCall     goto state 221
	zero__NestedCall__goto state 222

State 146

	OptionalFunctionCall -> "(" . FunctionCallArgs ")"    (rule 136)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 220
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97
	")"            reduce using rule 264

	ExpressionList goto state 216
	Expression     goto state 217
	Factor         goto state 83
	TermExpression goto state 84
	FunctionCallArgsgoto state 218
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__ExpressionList__goto state 219

State 147

	list1__CSExpList__ -> CSExpList .                   (rule 317)
	list1__CSExpList__ -> CSExpList . list1__CSExpList__    (rule 318)

	","            shift, and enter state 172
	")"            reduce using rule 317

	CSExpList      goto state 147
	list1__CSExpList__goto state 215

State 148

	InhExpList -> "(" Expression list__CSExpList__ . ")"    (rule 20)

	")"            shift, and enter state 214


State 149

	list__CSExpList__ -> list1__CSExpList__ .           (rule 217)

	")"            reduce using rule 217


State 150

	Expression -> Expression "++" .                     (rule 86)

	decimalnum     reduce using rule 86
	"exponent"     reduce using rule 86
	int            reduce using rule 86
	uint           reduce using rule 86
	bytes          reduce using rule 86
	fixed          reduce using rule 86
	ufixed         reduce using rule 86
	"string"       reduce using rule 86
	"address"      reduce using rule 86
	"bool"         reduce using rule 86
	"do"           reduce using rule 86
	"_"            reduce using rule 86
	"continue"     reduce using rule 86
	"break"        reduce using rule 86
	"return"       reduce using rule 86
	"throw"        reduce using rule 86
	"var"          reduce using rule 86
	"for"          reduce using rule 86
	"true"         reduce using rule 86
	"false"        reduce using rule 86
	"if"           reduce using rule 86
	"while"        reduce using rule 86
	"assembly"     reduce using rule 86
	"else"         reduce using rule 86
	"new"          reduce using rule 86
	"++"           reduce using rule 86
	"--"           reduce using rule 86
	"^"            reduce using rule 86
	"!"            reduce using rule 86
	"&&"           reduce using rule 86
	"&"            reduce using rule 86
	"||"           reduce using rule 86
	"|"            reduce using rule 86
	"!="           reduce using rule 86
	"<"            reduce using rule 86
	">"            reduce using rule 86
	">>"           reduce using rule 86
	"<<"           reduce using rule 86
	"<="           reduce using rule 86
	">="           reduce using rule 86
	"=="           reduce using rule 86
	"{"            reduce using rule 86
	"}"            reduce using rule 86
	"]"            reduce using rule 86
	"="            reduce using rule 86
	"*"            reduce using rule 86
	"/"            reduce using rule 86
	"**"           reduce using rule 86
	"%"            reduce using rule 86
	"+"            reduce using rule 86
	"-"            reduce using rule 86
	";"            reduce using rule 86
	","            reduce using rule 86
	"|="           reduce using rule 86
	"^="           reduce using rule 86
	"&="           reduce using rule 86
	"<<="          reduce using rule 86
	">>="          reduce using rule 86
	"+="           reduce using rule 86
	"-="           reduce using rule 86
	"*="           reduce using rule 86
	"/="           reduce using rule 86
	"%="           reduce using rule 86
	ident          reduce using rule 86
	stringLiteral  reduce using rule 86
	"("            reduce using rule 86
	")"            reduce using rule 86


State 151

	Expression -> Expression "--" .                     (rule 87)

	decimalnum     reduce using rule 87
	"exponent"     reduce using rule 87
	int            reduce using rule 87
	uint           reduce using rule 87
	bytes          reduce using rule 87
	fixed          reduce using rule 87
	ufixed         reduce using rule 87
	"string"       reduce using rule 87
	"address"      reduce using rule 87
	"bool"         reduce using rule 87
	"do"           reduce using rule 87
	"_"            reduce using rule 87
	"continue"     reduce using rule 87
	"break"        reduce using rule 87
	"return"       reduce using rule 87
	"throw"        reduce using rule 87
	"var"          reduce using rule 87
	"for"          reduce using rule 87
	"true"         reduce using rule 87
	"false"        reduce using rule 87
	"if"           reduce using rule 87
	"while"        reduce using rule 87
	"assembly"     reduce using rule 87
	"else"         reduce using rule 87
	"new"          reduce using rule 87
	"++"           reduce using rule 87
	"--"           reduce using rule 87
	"^"            reduce using rule 87
	"!"            reduce using rule 87
	"&&"           reduce using rule 87
	"&"            reduce using rule 87
	"||"           reduce using rule 87
	"|"            reduce using rule 87
	"!="           reduce using rule 87
	"<"            reduce using rule 87
	">"            reduce using rule 87
	">>"           reduce using rule 87
	"<<"           reduce using rule 87
	"<="           reduce using rule 87
	">="           reduce using rule 87
	"=="           reduce using rule 87
	"{"            reduce using rule 87
	"}"            reduce using rule 87
	"]"            reduce using rule 87
	"="            reduce using rule 87
	"*"            reduce using rule 87
	"/"            reduce using rule 87
	"**"           reduce using rule 87
	"%"            reduce using rule 87
	"+"            reduce using rule 87
	"-"            reduce using rule 87
	";"            reduce using rule 87
	","            reduce using rule 87
	"|="           reduce using rule 87
	"^="           reduce using rule 87
	"&="           reduce using rule 87
	"<<="          reduce using rule 87
	">>="          reduce using rule 87
	"+="           reduce using rule 87
	"-="           reduce using rule 87
	"*="           reduce using rule 87
	"/="           reduce using rule 87
	"%="           reduce using rule 87
	ident          reduce using rule 87
	stringLiteral  reduce using rule 87
	"("            reduce using rule 87
	")"            reduce using rule 87


State 152

	Expression -> Expression "^" . Expression           (rule 99)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 213
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 153

	Expression -> Expression "&&" . Expression          (rule 107)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 212
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 154

	Expression -> Expression "&" . Expression           (rule 98)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 211
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 155

	Expression -> Expression "||" . Expression          (rule 108)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 210
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 156

	Expression -> Expression "|" . Expression           (rule 100)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 209
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 157

	Expression -> Expression "!=" . Expression          (rule 106)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 208
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 158

	Expression -> Expression "<" . Expression           (rule 101)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 207
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 159

	Expression -> Expression ">" . Expression           (rule 102)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 206
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 160

	Expression -> Expression ">>" . Expression          (rule 97)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 205
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 161

	Expression -> Expression "<<" . Expression          (rule 96)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 204
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 162

	Expression -> Expression "<=" . Expression          (rule 103)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 203
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 163

	Expression -> Expression ">=" . Expression          (rule 104)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 202
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 164

	Expression -> Expression "==" . Expression          (rule 105)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 201
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 165

	Expression -> Expression "=" . Expression           (rule 109)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 200
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 166

	Expression -> Expression "*" . Expression           (rule 91)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 199
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 167

	Expression -> Expression "/" . Expression           (rule 92)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 198
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 168

	Expression -> Expression "**" . Expression          (rule 90)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 197
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 169

	Expression -> Expression "%" . Expression           (rule 93)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 196
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 170

	Expression -> Expression "+" . Expression           (rule 94)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 195
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 171

	Expression -> Expression "-" . Expression           (rule 95)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 194
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 172

	CSExpList -> "," . Expression                       (rule 21)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 193
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 173

	Expression -> Expression "|=" . Expression          (rule 110)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 192
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 174

	Expression -> Expression "^=" . Expression          (rule 111)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 191
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 175

	Expression -> Expression "&=" . Expression          (rule 112)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 190
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 176

	Expression -> Expression "<<=" . Expression         (rule 113)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 189
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 177

	Expression -> Expression ">>=" . Expression         (rule 114)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 188
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 178

	Expression -> Expression "+=" . Expression          (rule 115)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 187
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 179

	Expression -> Expression "-=" . Expression          (rule 116)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 186
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 180

	Expression -> Expression "*=" . Expression          (rule 117)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 185
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 181

	Expression -> Expression "/=" . Expression          (rule 118)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 184
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 182

	Expression -> Expression "%=" . Expression          (rule 119)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 183
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 183

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	Expression -> Expression "%=" Expression .          (rule 119)

	decimalnum     reduce using rule 119
	"exponent"     reduce using rule 119
	int            reduce using rule 119
	uint           reduce using rule 119
	bytes          reduce using rule 119
	fixed          reduce using rule 119
	ufixed         reduce using rule 119
	"string"       reduce using rule 119
	"address"      reduce using rule 119
	"bool"         reduce using rule 119
	"do"           reduce using rule 119
	"_"            reduce using rule 119
	"continue"     reduce using rule 119
	"break"        reduce using rule 119
	"return"       reduce using rule 119
	"throw"        reduce using rule 119
	"var"          reduce using rule 119
	"for"          reduce using rule 119
	"true"         reduce using rule 119
	"false"        reduce using rule 119
	"if"           reduce using rule 119
	"while"        reduce using rule 119
	"assembly"     reduce using rule 119
	"else"         reduce using rule 119
	"new"          reduce using rule 119
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 119
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 119
	"}"            reduce using rule 119
	"]"            reduce using rule 119
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 119
	","            reduce using rule 119
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 119
	stringLiteral  reduce using rule 119
	"("            reduce using rule 119
	")"            reduce using rule 119


State 184

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression "/=" Expression .          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 118
	"exponent"     reduce using rule 118
	int            reduce using rule 118
	uint           reduce using rule 118
	bytes          reduce using rule 118
	fixed          reduce using rule 118
	ufixed         reduce using rule 118
	"string"       reduce using rule 118
	"address"      reduce using rule 118
	"bool"         reduce using rule 118
	"do"           reduce using rule 118
	"_"            reduce using rule 118
	"continue"     reduce using rule 118
	"break"        reduce using rule 118
	"return"       reduce using rule 118
	"throw"        reduce using rule 118
	"var"          reduce using rule 118
	"for"          reduce using rule 118
	"true"         reduce using rule 118
	"false"        reduce using rule 118
	"if"           reduce using rule 118
	"while"        reduce using rule 118
	"assembly"     reduce using rule 118
	"else"         reduce using rule 118
	"new"          reduce using rule 118
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 118
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 118
	"}"            reduce using rule 118
	"]"            reduce using rule 118
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 118
	","            reduce using rule 118
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 118
	stringLiteral  reduce using rule 118
	"("            reduce using rule 118
	")"            reduce using rule 118


State 185

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression "*=" Expression .          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 117
	"exponent"     reduce using rule 117
	int            reduce using rule 117
	uint           reduce using rule 117
	bytes          reduce using rule 117
	fixed          reduce using rule 117
	ufixed         reduce using rule 117
	"string"       reduce using rule 117
	"address"      reduce using rule 117
	"bool"         reduce using rule 117
	"do"           reduce using rule 117
	"_"            reduce using rule 117
	"continue"     reduce using rule 117
	"break"        reduce using rule 117
	"return"       reduce using rule 117
	"throw"        reduce using rule 117
	"var"          reduce using rule 117
	"for"          reduce using rule 117
	"true"         reduce using rule 117
	"false"        reduce using rule 117
	"if"           reduce using rule 117
	"while"        reduce using rule 117
	"assembly"     reduce using rule 117
	"else"         reduce using rule 117
	"new"          reduce using rule 117
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 117
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 117
	"}"            reduce using rule 117
	"]"            reduce using rule 117
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 117
	","            reduce using rule 117
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 117
	stringLiteral  reduce using rule 117
	"("            reduce using rule 117
	")"            reduce using rule 117


State 186

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression "-=" Expression .          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 116
	"exponent"     reduce using rule 116
	int            reduce using rule 116
	uint           reduce using rule 116
	bytes          reduce using rule 116
	fixed          reduce using rule 116
	ufixed         reduce using rule 116
	"string"       reduce using rule 116
	"address"      reduce using rule 116
	"bool"         reduce using rule 116
	"do"           reduce using rule 116
	"_"            reduce using rule 116
	"continue"     reduce using rule 116
	"break"        reduce using rule 116
	"return"       reduce using rule 116
	"throw"        reduce using rule 116
	"var"          reduce using rule 116
	"for"          reduce using rule 116
	"true"         reduce using rule 116
	"false"        reduce using rule 116
	"if"           reduce using rule 116
	"while"        reduce using rule 116
	"assembly"     reduce using rule 116
	"else"         reduce using rule 116
	"new"          reduce using rule 116
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 116
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 116
	"}"            reduce using rule 116
	"]"            reduce using rule 116
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 116
	","            reduce using rule 116
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 116
	stringLiteral  reduce using rule 116
	"("            reduce using rule 116
	")"            reduce using rule 116


State 187

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression "+=" Expression .          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 115
	"exponent"     reduce using rule 115
	int            reduce using rule 115
	uint           reduce using rule 115
	bytes          reduce using rule 115
	fixed          reduce using rule 115
	ufixed         reduce using rule 115
	"string"       reduce using rule 115
	"address"      reduce using rule 115
	"bool"         reduce using rule 115
	"do"           reduce using rule 115
	"_"            reduce using rule 115
	"continue"     reduce using rule 115
	"break"        reduce using rule 115
	"return"       reduce using rule 115
	"throw"        reduce using rule 115
	"var"          reduce using rule 115
	"for"          reduce using rule 115
	"true"         reduce using rule 115
	"false"        reduce using rule 115
	"if"           reduce using rule 115
	"while"        reduce using rule 115
	"assembly"     reduce using rule 115
	"else"         reduce using rule 115
	"new"          reduce using rule 115
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 115
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 115
	"}"            reduce using rule 115
	"]"            reduce using rule 115
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 115
	","            reduce using rule 115
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 115
	stringLiteral  reduce using rule 115
	"("            reduce using rule 115
	")"            reduce using rule 115


State 188

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression ">>=" Expression .         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 114
	"exponent"     reduce using rule 114
	int            reduce using rule 114
	uint           reduce using rule 114
	bytes          reduce using rule 114
	fixed          reduce using rule 114
	ufixed         reduce using rule 114
	"string"       reduce using rule 114
	"address"      reduce using rule 114
	"bool"         reduce using rule 114
	"do"           reduce using rule 114
	"_"            reduce using rule 114
	"continue"     reduce using rule 114
	"break"        reduce using rule 114
	"return"       reduce using rule 114
	"throw"        reduce using rule 114
	"var"          reduce using rule 114
	"for"          reduce using rule 114
	"true"         reduce using rule 114
	"false"        reduce using rule 114
	"if"           reduce using rule 114
	"while"        reduce using rule 114
	"assembly"     reduce using rule 114
	"else"         reduce using rule 114
	"new"          reduce using rule 114
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 114
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 114
	"}"            reduce using rule 114
	"]"            reduce using rule 114
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 114
	","            reduce using rule 114
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 114
	stringLiteral  reduce using rule 114
	"("            reduce using rule 114
	")"            reduce using rule 114


State 189

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression "<<=" Expression .         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 113
	"exponent"     reduce using rule 113
	int            reduce using rule 113
	uint           reduce using rule 113
	bytes          reduce using rule 113
	fixed          reduce using rule 113
	ufixed         reduce using rule 113
	"string"       reduce using rule 113
	"address"      reduce using rule 113
	"bool"         reduce using rule 113
	"do"           reduce using rule 113
	"_"            reduce using rule 113
	"continue"     reduce using rule 113
	"break"        reduce using rule 113
	"return"       reduce using rule 113
	"throw"        reduce using rule 113
	"var"          reduce using rule 113
	"for"          reduce using rule 113
	"true"         reduce using rule 113
	"false"        reduce using rule 113
	"if"           reduce using rule 113
	"while"        reduce using rule 113
	"assembly"     reduce using rule 113
	"else"         reduce using rule 113
	"new"          reduce using rule 113
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 113
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 113
	"}"            reduce using rule 113
	"]"            reduce using rule 113
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 113
	","            reduce using rule 113
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 113
	stringLiteral  reduce using rule 113
	"("            reduce using rule 113
	")"            reduce using rule 113


State 190

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression "&=" Expression .          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 112
	"exponent"     reduce using rule 112
	int            reduce using rule 112
	uint           reduce using rule 112
	bytes          reduce using rule 112
	fixed          reduce using rule 112
	ufixed         reduce using rule 112
	"string"       reduce using rule 112
	"address"      reduce using rule 112
	"bool"         reduce using rule 112
	"do"           reduce using rule 112
	"_"            reduce using rule 112
	"continue"     reduce using rule 112
	"break"        reduce using rule 112
	"return"       reduce using rule 112
	"throw"        reduce using rule 112
	"var"          reduce using rule 112
	"for"          reduce using rule 112
	"true"         reduce using rule 112
	"false"        reduce using rule 112
	"if"           reduce using rule 112
	"while"        reduce using rule 112
	"assembly"     reduce using rule 112
	"else"         reduce using rule 112
	"new"          reduce using rule 112
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 112
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 112
	"}"            reduce using rule 112
	"]"            reduce using rule 112
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 112
	","            reduce using rule 112
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 112
	stringLiteral  reduce using rule 112
	"("            reduce using rule 112
	")"            reduce using rule 112


State 191

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression "^=" Expression .          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 111
	"exponent"     reduce using rule 111
	int            reduce using rule 111
	uint           reduce using rule 111
	bytes          reduce using rule 111
	fixed          reduce using rule 111
	ufixed         reduce using rule 111
	"string"       reduce using rule 111
	"address"      reduce using rule 111
	"bool"         reduce using rule 111
	"do"           reduce using rule 111
	"_"            reduce using rule 111
	"continue"     reduce using rule 111
	"break"        reduce using rule 111
	"return"       reduce using rule 111
	"throw"        reduce using rule 111
	"var"          reduce using rule 111
	"for"          reduce using rule 111
	"true"         reduce using rule 111
	"false"        reduce using rule 111
	"if"           reduce using rule 111
	"while"        reduce using rule 111
	"assembly"     reduce using rule 111
	"else"         reduce using rule 111
	"new"          reduce using rule 111
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 111
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 111
	"}"            reduce using rule 111
	"]"            reduce using rule 111
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 111
	","            reduce using rule 111
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 111
	stringLiteral  reduce using rule 111
	"("            reduce using rule 111
	")"            reduce using rule 111


State 192

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression "|=" Expression .          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 110
	"exponent"     reduce using rule 110
	int            reduce using rule 110
	uint           reduce using rule 110
	bytes          reduce using rule 110
	fixed          reduce using rule 110
	ufixed         reduce using rule 110
	"string"       reduce using rule 110
	"address"      reduce using rule 110
	"bool"         reduce using rule 110
	"do"           reduce using rule 110
	"_"            reduce using rule 110
	"continue"     reduce using rule 110
	"break"        reduce using rule 110
	"return"       reduce using rule 110
	"throw"        reduce using rule 110
	"var"          reduce using rule 110
	"for"          reduce using rule 110
	"true"         reduce using rule 110
	"false"        reduce using rule 110
	"if"           reduce using rule 110
	"while"        reduce using rule 110
	"assembly"     reduce using rule 110
	"else"         reduce using rule 110
	"new"          reduce using rule 110
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 110
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 110
	"}"            reduce using rule 110
	"]"            reduce using rule 110
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 110
	","            reduce using rule 110
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 110
	stringLiteral  reduce using rule 110
	"("            reduce using rule 110
	")"            reduce using rule 110


State 193

	CSExpList -> "," Expression .                       (rule 21)
	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	","            reduce using rule 21
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            reduce using rule 21


State 194

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression "-" Expression .           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 95
	"exponent"     reduce using rule 95
	int            reduce using rule 95
	uint           reduce using rule 95
	bytes          reduce using rule 95
	fixed          reduce using rule 95
	ufixed         reduce using rule 95
	"string"       reduce using rule 95
	"address"      reduce using rule 95
	"bool"         reduce using rule 95
	"do"           reduce using rule 95
	"_"            reduce using rule 95
	"continue"     reduce using rule 95
	"break"        reduce using rule 95
	"return"       reduce using rule 95
	"throw"        reduce using rule 95
	"var"          reduce using rule 95
	"for"          reduce using rule 95
	"true"         reduce using rule 95
	"false"        reduce using rule 95
	"if"           reduce using rule 95
	"while"        reduce using rule 95
	"assembly"     reduce using rule 95
	"else"         reduce using rule 95
	"new"          reduce using rule 95
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 95
	"!"            reduce using rule 95
	"&&"           reduce using rule 95
	"&"            reduce using rule 95
	"||"           reduce using rule 95
	"|"            reduce using rule 95
	"!="           reduce using rule 95
	"<"            reduce using rule 95
	">"            reduce using rule 95
	">>"           reduce using rule 95
	"<<"           reduce using rule 95
	"<="           reduce using rule 95
	">="           reduce using rule 95
	"=="           reduce using rule 95
	"{"            reduce using rule 95
	"}"            reduce using rule 95
	"]"            reduce using rule 95
	"="            reduce using rule 95
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            reduce using rule 95
	"-"            reduce using rule 95
	";"            reduce using rule 95
	","            reduce using rule 95
	"|="           reduce using rule 95
	"^="           reduce using rule 95
	"&="           reduce using rule 95
	"<<="          reduce using rule 95
	">>="          reduce using rule 95
	"+="           reduce using rule 95
	"-="           reduce using rule 95
	"*="           reduce using rule 95
	"/="           reduce using rule 95
	"%="           reduce using rule 95
	ident          reduce using rule 95
	stringLiteral  reduce using rule 95
	"("            reduce using rule 95
	")"            reduce using rule 95


State 195

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression "+" Expression .           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 94
	"exponent"     reduce using rule 94
	int            reduce using rule 94
	uint           reduce using rule 94
	bytes          reduce using rule 94
	fixed          reduce using rule 94
	ufixed         reduce using rule 94
	"string"       reduce using rule 94
	"address"      reduce using rule 94
	"bool"         reduce using rule 94
	"do"           reduce using rule 94
	"_"            reduce using rule 94
	"continue"     reduce using rule 94
	"break"        reduce using rule 94
	"return"       reduce using rule 94
	"throw"        reduce using rule 94
	"var"          reduce using rule 94
	"for"          reduce using rule 94
	"true"         reduce using rule 94
	"false"        reduce using rule 94
	"if"           reduce using rule 94
	"while"        reduce using rule 94
	"assembly"     reduce using rule 94
	"else"         reduce using rule 94
	"new"          reduce using rule 94
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 94
	"!"            reduce using rule 94
	"&&"           reduce using rule 94
	"&"            reduce using rule 94
	"||"           reduce using rule 94
	"|"            reduce using rule 94
	"!="           reduce using rule 94
	"<"            reduce using rule 94
	">"            reduce using rule 94
	">>"           reduce using rule 94
	"<<"           reduce using rule 94
	"<="           reduce using rule 94
	">="           reduce using rule 94
	"=="           reduce using rule 94
	"{"            reduce using rule 94
	"}"            reduce using rule 94
	"]"            reduce using rule 94
	"="            reduce using rule 94
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            reduce using rule 94
	"-"            reduce using rule 94
	";"            reduce using rule 94
	","            reduce using rule 94
	"|="           reduce using rule 94
	"^="           reduce using rule 94
	"&="           reduce using rule 94
	"<<="          reduce using rule 94
	">>="          reduce using rule 94
	"+="           reduce using rule 94
	"-="           reduce using rule 94
	"*="           reduce using rule 94
	"/="           reduce using rule 94
	"%="           reduce using rule 94
	ident          reduce using rule 94
	stringLiteral  reduce using rule 94
	"("            reduce using rule 94
	")"            reduce using rule 94


State 196

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression "%" Expression .           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 93
	"exponent"     reduce using rule 93
	int            reduce using rule 93
	uint           reduce using rule 93
	bytes          reduce using rule 93
	fixed          reduce using rule 93
	ufixed         reduce using rule 93
	"string"       reduce using rule 93
	"address"      reduce using rule 93
	"bool"         reduce using rule 93
	"do"           reduce using rule 93
	"_"            reduce using rule 93
	"continue"     reduce using rule 93
	"break"        reduce using rule 93
	"return"       reduce using rule 93
	"throw"        reduce using rule 93
	"var"          reduce using rule 93
	"for"          reduce using rule 93
	"true"         reduce using rule 93
	"false"        reduce using rule 93
	"if"           reduce using rule 93
	"while"        reduce using rule 93
	"assembly"     reduce using rule 93
	"else"         reduce using rule 93
	"new"          reduce using rule 93
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 93
	"!"            reduce using rule 93
	"&&"           reduce using rule 93
	"&"            reduce using rule 93
	"||"           reduce using rule 93
	"|"            reduce using rule 93
	"!="           reduce using rule 93
	"<"            reduce using rule 93
	">"            reduce using rule 93
	">>"           reduce using rule 93
	"<<"           reduce using rule 93
	"<="           reduce using rule 93
	">="           reduce using rule 93
	"=="           reduce using rule 93
	"{"            reduce using rule 93
	"}"            reduce using rule 93
	"]"            reduce using rule 93
	"="            reduce using rule 93
	"*"            reduce using rule 93
	"/"            reduce using rule 93
	"**"           shift, and enter state 168
	"%"            reduce using rule 93
	"+"            reduce using rule 93
	"-"            reduce using rule 93
	";"            reduce using rule 93
	","            reduce using rule 93
	"|="           reduce using rule 93
	"^="           reduce using rule 93
	"&="           reduce using rule 93
	"<<="          reduce using rule 93
	">>="          reduce using rule 93
	"+="           reduce using rule 93
	"-="           reduce using rule 93
	"*="           reduce using rule 93
	"/="           reduce using rule 93
	"%="           reduce using rule 93
	ident          reduce using rule 93
	stringLiteral  reduce using rule 93
	"("            reduce using rule 93
	")"            reduce using rule 93


State 197

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression "**" Expression .          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 90
	"exponent"     reduce using rule 90
	int            reduce using rule 90
	uint           reduce using rule 90
	bytes          reduce using rule 90
	fixed          reduce using rule 90
	ufixed         reduce using rule 90
	"string"       reduce using rule 90
	"address"      reduce using rule 90
	"bool"         reduce using rule 90
	"do"           reduce using rule 90
	"_"            reduce using rule 90
	"continue"     reduce using rule 90
	"break"        reduce using rule 90
	"return"       reduce using rule 90
	"throw"        reduce using rule 90
	"var"          reduce using rule 90
	"for"          reduce using rule 90
	"true"         reduce using rule 90
	"false"        reduce using rule 90
	"if"           reduce using rule 90
	"while"        reduce using rule 90
	"assembly"     reduce using rule 90
	"else"         reduce using rule 90
	"new"          reduce using rule 90
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 90
	"!"            reduce using rule 90
	"&&"           reduce using rule 90
	"&"            reduce using rule 90
	"||"           reduce using rule 90
	"|"            reduce using rule 90
	"!="           reduce using rule 90
	"<"            reduce using rule 90
	">"            reduce using rule 90
	">>"           reduce using rule 90
	"<<"           reduce using rule 90
	"<="           reduce using rule 90
	">="           reduce using rule 90
	"=="           reduce using rule 90
	"{"            reduce using rule 90
	"}"            reduce using rule 90
	"]"            reduce using rule 90
	"="            reduce using rule 90
	"*"            reduce using rule 90
	"/"            reduce using rule 90
	"**"           shift, and enter state 168
	"%"            reduce using rule 90
	"+"            reduce using rule 90
	"-"            reduce using rule 90
	";"            reduce using rule 90
	","            reduce using rule 90
	"|="           reduce using rule 90
	"^="           reduce using rule 90
	"&="           reduce using rule 90
	"<<="          reduce using rule 90
	">>="          reduce using rule 90
	"+="           reduce using rule 90
	"-="           reduce using rule 90
	"*="           reduce using rule 90
	"/="           reduce using rule 90
	"%="           reduce using rule 90
	ident          reduce using rule 90
	stringLiteral  reduce using rule 90
	"("            reduce using rule 90
	")"            reduce using rule 90


State 198

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression "/" Expression .           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 92
	"exponent"     reduce using rule 92
	int            reduce using rule 92
	uint           reduce using rule 92
	bytes          reduce using rule 92
	fixed          reduce using rule 92
	ufixed         reduce using rule 92
	"string"       reduce using rule 92
	"address"      reduce using rule 92
	"bool"         reduce using rule 92
	"do"           reduce using rule 92
	"_"            reduce using rule 92
	"continue"     reduce using rule 92
	"break"        reduce using rule 92
	"return"       reduce using rule 92
	"throw"        reduce using rule 92
	"var"          reduce using rule 92
	"for"          reduce using rule 92
	"true"         reduce using rule 92
	"false"        reduce using rule 92
	"if"           reduce using rule 92
	"while"        reduce using rule 92
	"assembly"     reduce using rule 92
	"else"         reduce using rule 92
	"new"          reduce using rule 92
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 92
	"!"            reduce using rule 92
	"&&"           reduce using rule 92
	"&"            reduce using rule 92
	"||"           reduce using rule 92
	"|"            reduce using rule 92
	"!="           reduce using rule 92
	"<"            reduce using rule 92
	">"            reduce using rule 92
	">>"           reduce using rule 92
	"<<"           reduce using rule 92
	"<="           reduce using rule 92
	">="           reduce using rule 92
	"=="           reduce using rule 92
	"{"            reduce using rule 92
	"}"            reduce using rule 92
	"]"            reduce using rule 92
	"="            reduce using rule 92
	"*"            reduce using rule 92
	"/"            reduce using rule 92
	"**"           shift, and enter state 168
	"%"            reduce using rule 92
	"+"            reduce using rule 92
	"-"            reduce using rule 92
	";"            reduce using rule 92
	","            reduce using rule 92
	"|="           reduce using rule 92
	"^="           reduce using rule 92
	"&="           reduce using rule 92
	"<<="          reduce using rule 92
	">>="          reduce using rule 92
	"+="           reduce using rule 92
	"-="           reduce using rule 92
	"*="           reduce using rule 92
	"/="           reduce using rule 92
	"%="           reduce using rule 92
	ident          reduce using rule 92
	stringLiteral  reduce using rule 92
	"("            reduce using rule 92
	")"            reduce using rule 92


State 199

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression "*" Expression .           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 91
	"exponent"     reduce using rule 91
	int            reduce using rule 91
	uint           reduce using rule 91
	bytes          reduce using rule 91
	fixed          reduce using rule 91
	ufixed         reduce using rule 91
	"string"       reduce using rule 91
	"address"      reduce using rule 91
	"bool"         reduce using rule 91
	"do"           reduce using rule 91
	"_"            reduce using rule 91
	"continue"     reduce using rule 91
	"break"        reduce using rule 91
	"return"       reduce using rule 91
	"throw"        reduce using rule 91
	"var"          reduce using rule 91
	"for"          reduce using rule 91
	"true"         reduce using rule 91
	"false"        reduce using rule 91
	"if"           reduce using rule 91
	"while"        reduce using rule 91
	"assembly"     reduce using rule 91
	"else"         reduce using rule 91
	"new"          reduce using rule 91
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 91
	"!"            reduce using rule 91
	"&&"           reduce using rule 91
	"&"            reduce using rule 91
	"||"           reduce using rule 91
	"|"            reduce using rule 91
	"!="           reduce using rule 91
	"<"            reduce using rule 91
	">"            reduce using rule 91
	">>"           reduce using rule 91
	"<<"           reduce using rule 91
	"<="           reduce using rule 91
	">="           reduce using rule 91
	"=="           reduce using rule 91
	"{"            reduce using rule 91
	"}"            reduce using rule 91
	"]"            reduce using rule 91
	"="            reduce using rule 91
	"*"            reduce using rule 91
	"/"            reduce using rule 91
	"**"           shift, and enter state 168
	"%"            reduce using rule 91
	"+"            reduce using rule 91
	"-"            reduce using rule 91
	";"            reduce using rule 91
	","            reduce using rule 91
	"|="           reduce using rule 91
	"^="           reduce using rule 91
	"&="           reduce using rule 91
	"<<="          reduce using rule 91
	">>="          reduce using rule 91
	"+="           reduce using rule 91
	"-="           reduce using rule 91
	"*="           reduce using rule 91
	"/="           reduce using rule 91
	"%="           reduce using rule 91
	ident          reduce using rule 91
	stringLiteral  reduce using rule 91
	"("            reduce using rule 91
	")"            reduce using rule 91


State 200

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression "=" Expression .           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 109
	"exponent"     reduce using rule 109
	int            reduce using rule 109
	uint           reduce using rule 109
	bytes          reduce using rule 109
	fixed          reduce using rule 109
	ufixed         reduce using rule 109
	"string"       reduce using rule 109
	"address"      reduce using rule 109
	"bool"         reduce using rule 109
	"do"           reduce using rule 109
	"_"            reduce using rule 109
	"continue"     reduce using rule 109
	"break"        reduce using rule 109
	"return"       reduce using rule 109
	"throw"        reduce using rule 109
	"var"          reduce using rule 109
	"for"          reduce using rule 109
	"true"         reduce using rule 109
	"false"        reduce using rule 109
	"if"           reduce using rule 109
	"while"        reduce using rule 109
	"assembly"     reduce using rule 109
	"else"         reduce using rule 109
	"new"          reduce using rule 109
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 109
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 109
	"}"            reduce using rule 109
	"]"            reduce using rule 109
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 109
	","            reduce using rule 109
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 109
	stringLiteral  reduce using rule 109
	"("            reduce using rule 109
	")"            reduce using rule 109


State 201

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression "==" Expression .          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 105
	"exponent"     reduce using rule 105
	int            reduce using rule 105
	uint           reduce using rule 105
	bytes          reduce using rule 105
	fixed          reduce using rule 105
	ufixed         reduce using rule 105
	"string"       reduce using rule 105
	"address"      reduce using rule 105
	"bool"         reduce using rule 105
	"do"           reduce using rule 105
	"_"            reduce using rule 105
	"continue"     reduce using rule 105
	"break"        reduce using rule 105
	"return"       reduce using rule 105
	"throw"        reduce using rule 105
	"var"          reduce using rule 105
	"for"          reduce using rule 105
	"true"         reduce using rule 105
	"false"        reduce using rule 105
	"if"           reduce using rule 105
	"while"        reduce using rule 105
	"assembly"     reduce using rule 105
	"else"         reduce using rule 105
	"new"          reduce using rule 105
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 105
	"&&"           reduce using rule 105
	"&"            shift, and enter state 154
	"||"           reduce using rule 105
	"|"            shift, and enter state 156
	"!="           reduce using rule 105
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           reduce using rule 105
	"{"            reduce using rule 105
	"}"            reduce using rule 105
	"]"            reduce using rule 105
	"="            reduce using rule 105
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 105
	","            reduce using rule 105
	"|="           reduce using rule 105
	"^="           reduce using rule 105
	"&="           reduce using rule 105
	"<<="          reduce using rule 105
	">>="          reduce using rule 105
	"+="           reduce using rule 105
	"-="           reduce using rule 105
	"*="           reduce using rule 105
	"/="           reduce using rule 105
	"%="           reduce using rule 105
	ident          reduce using rule 105
	stringLiteral  reduce using rule 105
	"("            reduce using rule 105
	")"            reduce using rule 105


State 202

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression ">=" Expression .          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 104
	"exponent"     reduce using rule 104
	int            reduce using rule 104
	uint           reduce using rule 104
	bytes          reduce using rule 104
	fixed          reduce using rule 104
	ufixed         reduce using rule 104
	"string"       reduce using rule 104
	"address"      reduce using rule 104
	"bool"         reduce using rule 104
	"do"           reduce using rule 104
	"_"            reduce using rule 104
	"continue"     reduce using rule 104
	"break"        reduce using rule 104
	"return"       reduce using rule 104
	"throw"        reduce using rule 104
	"var"          reduce using rule 104
	"for"          reduce using rule 104
	"true"         reduce using rule 104
	"false"        reduce using rule 104
	"if"           reduce using rule 104
	"while"        reduce using rule 104
	"assembly"     reduce using rule 104
	"else"         reduce using rule 104
	"new"          reduce using rule 104
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 104
	"&&"           reduce using rule 104
	"&"            shift, and enter state 154
	"||"           reduce using rule 104
	"|"            shift, and enter state 156
	"!="           reduce using rule 104
	"<"            reduce using rule 104
	">"            reduce using rule 104
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 104
	">="           reduce using rule 104
	"=="           reduce using rule 104
	"{"            reduce using rule 104
	"}"            reduce using rule 104
	"]"            reduce using rule 104
	"="            reduce using rule 104
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 104
	","            reduce using rule 104
	"|="           reduce using rule 104
	"^="           reduce using rule 104
	"&="           reduce using rule 104
	"<<="          reduce using rule 104
	">>="          reduce using rule 104
	"+="           reduce using rule 104
	"-="           reduce using rule 104
	"*="           reduce using rule 104
	"/="           reduce using rule 104
	"%="           reduce using rule 104
	ident          reduce using rule 104
	stringLiteral  reduce using rule 104
	"("            reduce using rule 104
	")"            reduce using rule 104


State 203

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression "<=" Expression .          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 103
	"exponent"     reduce using rule 103
	int            reduce using rule 103
	uint           reduce using rule 103
	bytes          reduce using rule 103
	fixed          reduce using rule 103
	ufixed         reduce using rule 103
	"string"       reduce using rule 103
	"address"      reduce using rule 103
	"bool"         reduce using rule 103
	"do"           reduce using rule 103
	"_"            reduce using rule 103
	"continue"     reduce using rule 103
	"break"        reduce using rule 103
	"return"       reduce using rule 103
	"throw"        reduce using rule 103
	"var"          reduce using rule 103
	"for"          reduce using rule 103
	"true"         reduce using rule 103
	"false"        reduce using rule 103
	"if"           reduce using rule 103
	"while"        reduce using rule 103
	"assembly"     reduce using rule 103
	"else"         reduce using rule 103
	"new"          reduce using rule 103
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 103
	"&&"           reduce using rule 103
	"&"            shift, and enter state 154
	"||"           reduce using rule 103
	"|"            shift, and enter state 156
	"!="           reduce using rule 103
	"<"            reduce using rule 103
	">"            reduce using rule 103
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 103
	">="           reduce using rule 103
	"=="           reduce using rule 103
	"{"            reduce using rule 103
	"}"            reduce using rule 103
	"]"            reduce using rule 103
	"="            reduce using rule 103
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 103
	","            reduce using rule 103
	"|="           reduce using rule 103
	"^="           reduce using rule 103
	"&="           reduce using rule 103
	"<<="          reduce using rule 103
	">>="          reduce using rule 103
	"+="           reduce using rule 103
	"-="           reduce using rule 103
	"*="           reduce using rule 103
	"/="           reduce using rule 103
	"%="           reduce using rule 103
	ident          reduce using rule 103
	stringLiteral  reduce using rule 103
	"("            reduce using rule 103
	")"            reduce using rule 103


State 204

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression "<<" Expression .          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 96
	"exponent"     reduce using rule 96
	int            reduce using rule 96
	uint           reduce using rule 96
	bytes          reduce using rule 96
	fixed          reduce using rule 96
	ufixed         reduce using rule 96
	"string"       reduce using rule 96
	"address"      reduce using rule 96
	"bool"         reduce using rule 96
	"do"           reduce using rule 96
	"_"            reduce using rule 96
	"continue"     reduce using rule 96
	"break"        reduce using rule 96
	"return"       reduce using rule 96
	"throw"        reduce using rule 96
	"var"          reduce using rule 96
	"for"          reduce using rule 96
	"true"         reduce using rule 96
	"false"        reduce using rule 96
	"if"           reduce using rule 96
	"while"        reduce using rule 96
	"assembly"     reduce using rule 96
	"else"         reduce using rule 96
	"new"          reduce using rule 96
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 96
	"!"            reduce using rule 96
	"&&"           reduce using rule 96
	"&"            reduce using rule 96
	"||"           reduce using rule 96
	"|"            reduce using rule 96
	"!="           reduce using rule 96
	"<"            reduce using rule 96
	">"            reduce using rule 96
	">>"           reduce using rule 96
	"<<"           reduce using rule 96
	"<="           reduce using rule 96
	">="           reduce using rule 96
	"=="           reduce using rule 96
	"{"            reduce using rule 96
	"}"            reduce using rule 96
	"]"            reduce using rule 96
	"="            reduce using rule 96
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 96
	","            reduce using rule 96
	"|="           reduce using rule 96
	"^="           reduce using rule 96
	"&="           reduce using rule 96
	"<<="          reduce using rule 96
	">>="          reduce using rule 96
	"+="           reduce using rule 96
	"-="           reduce using rule 96
	"*="           reduce using rule 96
	"/="           reduce using rule 96
	"%="           reduce using rule 96
	ident          reduce using rule 96
	stringLiteral  reduce using rule 96
	"("            reduce using rule 96
	")"            reduce using rule 96


State 205

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression ">>" Expression .          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 97
	"exponent"     reduce using rule 97
	int            reduce using rule 97
	uint           reduce using rule 97
	bytes          reduce using rule 97
	fixed          reduce using rule 97
	ufixed         reduce using rule 97
	"string"       reduce using rule 97
	"address"      reduce using rule 97
	"bool"         reduce using rule 97
	"do"           reduce using rule 97
	"_"            reduce using rule 97
	"continue"     reduce using rule 97
	"break"        reduce using rule 97
	"return"       reduce using rule 97
	"throw"        reduce using rule 97
	"var"          reduce using rule 97
	"for"          reduce using rule 97
	"true"         reduce using rule 97
	"false"        reduce using rule 97
	"if"           reduce using rule 97
	"while"        reduce using rule 97
	"assembly"     reduce using rule 97
	"else"         reduce using rule 97
	"new"          reduce using rule 97
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 97
	"!"            reduce using rule 97
	"&&"           reduce using rule 97
	"&"            reduce using rule 97
	"||"           reduce using rule 97
	"|"            reduce using rule 97
	"!="           reduce using rule 97
	"<"            reduce using rule 97
	">"            reduce using rule 97
	">>"           reduce using rule 97
	"<<"           reduce using rule 97
	"<="           reduce using rule 97
	">="           reduce using rule 97
	"=="           reduce using rule 97
	"{"            reduce using rule 97
	"}"            reduce using rule 97
	"]"            reduce using rule 97
	"="            reduce using rule 97
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 97
	","            reduce using rule 97
	"|="           reduce using rule 97
	"^="           reduce using rule 97
	"&="           reduce using rule 97
	"<<="          reduce using rule 97
	">>="          reduce using rule 97
	"+="           reduce using rule 97
	"-="           reduce using rule 97
	"*="           reduce using rule 97
	"/="           reduce using rule 97
	"%="           reduce using rule 97
	ident          reduce using rule 97
	stringLiteral  reduce using rule 97
	"("            reduce using rule 97
	")"            reduce using rule 97


State 206

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression ">" Expression .           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 102
	"exponent"     reduce using rule 102
	int            reduce using rule 102
	uint           reduce using rule 102
	bytes          reduce using rule 102
	fixed          reduce using rule 102
	ufixed         reduce using rule 102
	"string"       reduce using rule 102
	"address"      reduce using rule 102
	"bool"         reduce using rule 102
	"do"           reduce using rule 102
	"_"            reduce using rule 102
	"continue"     reduce using rule 102
	"break"        reduce using rule 102
	"return"       reduce using rule 102
	"throw"        reduce using rule 102
	"var"          reduce using rule 102
	"for"          reduce using rule 102
	"true"         reduce using rule 102
	"false"        reduce using rule 102
	"if"           reduce using rule 102
	"while"        reduce using rule 102
	"assembly"     reduce using rule 102
	"else"         reduce using rule 102
	"new"          reduce using rule 102
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 102
	"&&"           reduce using rule 102
	"&"            shift, and enter state 154
	"||"           reduce using rule 102
	"|"            shift, and enter state 156
	"!="           reduce using rule 102
	"<"            reduce using rule 102
	">"            reduce using rule 102
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 102
	">="           reduce using rule 102
	"=="           reduce using rule 102
	"{"            reduce using rule 102
	"}"            reduce using rule 102
	"]"            reduce using rule 102
	"="            reduce using rule 102
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 102
	","            reduce using rule 102
	"|="           reduce using rule 102
	"^="           reduce using rule 102
	"&="           reduce using rule 102
	"<<="          reduce using rule 102
	">>="          reduce using rule 102
	"+="           reduce using rule 102
	"-="           reduce using rule 102
	"*="           reduce using rule 102
	"/="           reduce using rule 102
	"%="           reduce using rule 102
	ident          reduce using rule 102
	stringLiteral  reduce using rule 102
	"("            reduce using rule 102
	")"            reduce using rule 102


State 207

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression "<" Expression .           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 101
	"exponent"     reduce using rule 101
	int            reduce using rule 101
	uint           reduce using rule 101
	bytes          reduce using rule 101
	fixed          reduce using rule 101
	ufixed         reduce using rule 101
	"string"       reduce using rule 101
	"address"      reduce using rule 101
	"bool"         reduce using rule 101
	"do"           reduce using rule 101
	"_"            reduce using rule 101
	"continue"     reduce using rule 101
	"break"        reduce using rule 101
	"return"       reduce using rule 101
	"throw"        reduce using rule 101
	"var"          reduce using rule 101
	"for"          reduce using rule 101
	"true"         reduce using rule 101
	"false"        reduce using rule 101
	"if"           reduce using rule 101
	"while"        reduce using rule 101
	"assembly"     reduce using rule 101
	"else"         reduce using rule 101
	"new"          reduce using rule 101
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 101
	"&&"           reduce using rule 101
	"&"            shift, and enter state 154
	"||"           reduce using rule 101
	"|"            shift, and enter state 156
	"!="           reduce using rule 101
	"<"            reduce using rule 101
	">"            reduce using rule 101
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 101
	">="           reduce using rule 101
	"=="           reduce using rule 101
	"{"            reduce using rule 101
	"}"            reduce using rule 101
	"]"            reduce using rule 101
	"="            reduce using rule 101
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 101
	","            reduce using rule 101
	"|="           reduce using rule 101
	"^="           reduce using rule 101
	"&="           reduce using rule 101
	"<<="          reduce using rule 101
	">>="          reduce using rule 101
	"+="           reduce using rule 101
	"-="           reduce using rule 101
	"*="           reduce using rule 101
	"/="           reduce using rule 101
	"%="           reduce using rule 101
	ident          reduce using rule 101
	stringLiteral  reduce using rule 101
	"("            reduce using rule 101
	")"            reduce using rule 101


State 208

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression "!=" Expression .          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 106
	"exponent"     reduce using rule 106
	int            reduce using rule 106
	uint           reduce using rule 106
	bytes          reduce using rule 106
	fixed          reduce using rule 106
	ufixed         reduce using rule 106
	"string"       reduce using rule 106
	"address"      reduce using rule 106
	"bool"         reduce using rule 106
	"do"           reduce using rule 106
	"_"            reduce using rule 106
	"continue"     reduce using rule 106
	"break"        reduce using rule 106
	"return"       reduce using rule 106
	"throw"        reduce using rule 106
	"var"          reduce using rule 106
	"for"          reduce using rule 106
	"true"         reduce using rule 106
	"false"        reduce using rule 106
	"if"           reduce using rule 106
	"while"        reduce using rule 106
	"assembly"     reduce using rule 106
	"else"         reduce using rule 106
	"new"          reduce using rule 106
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 106
	"&&"           reduce using rule 106
	"&"            shift, and enter state 154
	"||"           reduce using rule 106
	"|"            shift, and enter state 156
	"!="           reduce using rule 106
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           reduce using rule 106
	"{"            reduce using rule 106
	"}"            reduce using rule 106
	"]"            reduce using rule 106
	"="            reduce using rule 106
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 106
	","            reduce using rule 106
	"|="           reduce using rule 106
	"^="           reduce using rule 106
	"&="           reduce using rule 106
	"<<="          reduce using rule 106
	">>="          reduce using rule 106
	"+="           reduce using rule 106
	"-="           reduce using rule 106
	"*="           reduce using rule 106
	"/="           reduce using rule 106
	"%="           reduce using rule 106
	ident          reduce using rule 106
	stringLiteral  reduce using rule 106
	"("            reduce using rule 106
	")"            reduce using rule 106


State 209

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression "|" Expression .           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 100
	"exponent"     reduce using rule 100
	int            reduce using rule 100
	uint           reduce using rule 100
	bytes          reduce using rule 100
	fixed          reduce using rule 100
	ufixed         reduce using rule 100
	"string"       reduce using rule 100
	"address"      reduce using rule 100
	"bool"         reduce using rule 100
	"do"           reduce using rule 100
	"_"            reduce using rule 100
	"continue"     reduce using rule 100
	"break"        reduce using rule 100
	"return"       reduce using rule 100
	"throw"        reduce using rule 100
	"var"          reduce using rule 100
	"for"          reduce using rule 100
	"true"         reduce using rule 100
	"false"        reduce using rule 100
	"if"           reduce using rule 100
	"while"        reduce using rule 100
	"assembly"     reduce using rule 100
	"else"         reduce using rule 100
	"new"          reduce using rule 100
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 100
	"&&"           reduce using rule 100
	"&"            shift, and enter state 154
	"||"           reduce using rule 100
	"|"            reduce using rule 100
	"!="           reduce using rule 100
	"<"            reduce using rule 100
	">"            reduce using rule 100
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 100
	">="           reduce using rule 100
	"=="           reduce using rule 100
	"{"            reduce using rule 100
	"}"            reduce using rule 100
	"]"            reduce using rule 100
	"="            reduce using rule 100
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 100
	","            reduce using rule 100
	"|="           reduce using rule 100
	"^="           reduce using rule 100
	"&="           reduce using rule 100
	"<<="          reduce using rule 100
	">>="          reduce using rule 100
	"+="           reduce using rule 100
	"-="           reduce using rule 100
	"*="           reduce using rule 100
	"/="           reduce using rule 100
	"%="           reduce using rule 100
	ident          reduce using rule 100
	stringLiteral  reduce using rule 100
	"("            reduce using rule 100
	")"            reduce using rule 100


State 210

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression "||" Expression .          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 108
	"exponent"     reduce using rule 108
	int            reduce using rule 108
	uint           reduce using rule 108
	bytes          reduce using rule 108
	fixed          reduce using rule 108
	ufixed         reduce using rule 108
	"string"       reduce using rule 108
	"address"      reduce using rule 108
	"bool"         reduce using rule 108
	"do"           reduce using rule 108
	"_"            reduce using rule 108
	"continue"     reduce using rule 108
	"break"        reduce using rule 108
	"return"       reduce using rule 108
	"throw"        reduce using rule 108
	"var"          reduce using rule 108
	"for"          reduce using rule 108
	"true"         reduce using rule 108
	"false"        reduce using rule 108
	"if"           reduce using rule 108
	"while"        reduce using rule 108
	"assembly"     reduce using rule 108
	"else"         reduce using rule 108
	"new"          reduce using rule 108
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 108
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           reduce using rule 108
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 108
	"}"            reduce using rule 108
	"]"            reduce using rule 108
	"="            reduce using rule 108
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 108
	","            reduce using rule 108
	"|="           reduce using rule 108
	"^="           reduce using rule 108
	"&="           reduce using rule 108
	"<<="          reduce using rule 108
	">>="          reduce using rule 108
	"+="           reduce using rule 108
	"-="           reduce using rule 108
	"*="           reduce using rule 108
	"/="           reduce using rule 108
	"%="           reduce using rule 108
	ident          reduce using rule 108
	stringLiteral  reduce using rule 108
	"("            reduce using rule 108
	")"            reduce using rule 108


State 211

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression "&" Expression .           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 98
	"exponent"     reduce using rule 98
	int            reduce using rule 98
	uint           reduce using rule 98
	bytes          reduce using rule 98
	fixed          reduce using rule 98
	ufixed         reduce using rule 98
	"string"       reduce using rule 98
	"address"      reduce using rule 98
	"bool"         reduce using rule 98
	"do"           reduce using rule 98
	"_"            reduce using rule 98
	"continue"     reduce using rule 98
	"break"        reduce using rule 98
	"return"       reduce using rule 98
	"throw"        reduce using rule 98
	"var"          reduce using rule 98
	"for"          reduce using rule 98
	"true"         reduce using rule 98
	"false"        reduce using rule 98
	"if"           reduce using rule 98
	"while"        reduce using rule 98
	"assembly"     reduce using rule 98
	"else"         reduce using rule 98
	"new"          reduce using rule 98
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 98
	"!"            reduce using rule 98
	"&&"           reduce using rule 98
	"&"            reduce using rule 98
	"||"           reduce using rule 98
	"|"            reduce using rule 98
	"!="           reduce using rule 98
	"<"            reduce using rule 98
	">"            reduce using rule 98
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 98
	">="           reduce using rule 98
	"=="           reduce using rule 98
	"{"            reduce using rule 98
	"}"            reduce using rule 98
	"]"            reduce using rule 98
	"="            reduce using rule 98
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 98
	","            reduce using rule 98
	"|="           reduce using rule 98
	"^="           reduce using rule 98
	"&="           reduce using rule 98
	"<<="          reduce using rule 98
	">>="          reduce using rule 98
	"+="           reduce using rule 98
	"-="           reduce using rule 98
	"*="           reduce using rule 98
	"/="           reduce using rule 98
	"%="           reduce using rule 98
	ident          reduce using rule 98
	stringLiteral  reduce using rule 98
	"("            reduce using rule 98
	")"            reduce using rule 98


State 212

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression "&&" Expression .          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 107
	"exponent"     reduce using rule 107
	int            reduce using rule 107
	uint           reduce using rule 107
	bytes          reduce using rule 107
	fixed          reduce using rule 107
	ufixed         reduce using rule 107
	"string"       reduce using rule 107
	"address"      reduce using rule 107
	"bool"         reduce using rule 107
	"do"           reduce using rule 107
	"_"            reduce using rule 107
	"continue"     reduce using rule 107
	"break"        reduce using rule 107
	"return"       reduce using rule 107
	"throw"        reduce using rule 107
	"var"          reduce using rule 107
	"for"          reduce using rule 107
	"true"         reduce using rule 107
	"false"        reduce using rule 107
	"if"           reduce using rule 107
	"while"        reduce using rule 107
	"assembly"     reduce using rule 107
	"else"         reduce using rule 107
	"new"          reduce using rule 107
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 107
	"&&"           reduce using rule 107
	"&"            shift, and enter state 154
	"||"           reduce using rule 107
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 107
	"}"            reduce using rule 107
	"]"            reduce using rule 107
	"="            reduce using rule 107
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 107
	","            reduce using rule 107
	"|="           reduce using rule 107
	"^="           reduce using rule 107
	"&="           reduce using rule 107
	"<<="          reduce using rule 107
	">>="          reduce using rule 107
	"+="           reduce using rule 107
	"-="           reduce using rule 107
	"*="           reduce using rule 107
	"/="           reduce using rule 107
	"%="           reduce using rule 107
	ident          reduce using rule 107
	stringLiteral  reduce using rule 107
	"("            reduce using rule 107
	")"            reduce using rule 107


State 213

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression "^" Expression .           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	decimalnum     reduce using rule 99
	"exponent"     reduce using rule 99
	int            reduce using rule 99
	uint           reduce using rule 99
	bytes          reduce using rule 99
	fixed          reduce using rule 99
	ufixed         reduce using rule 99
	"string"       reduce using rule 99
	"address"      reduce using rule 99
	"bool"         reduce using rule 99
	"do"           reduce using rule 99
	"_"            reduce using rule 99
	"continue"     reduce using rule 99
	"break"        reduce using rule 99
	"return"       reduce using rule 99
	"throw"        reduce using rule 99
	"var"          reduce using rule 99
	"for"          reduce using rule 99
	"true"         reduce using rule 99
	"false"        reduce using rule 99
	"if"           reduce using rule 99
	"while"        reduce using rule 99
	"assembly"     reduce using rule 99
	"else"         reduce using rule 99
	"new"          reduce using rule 99
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            reduce using rule 99
	"!"            reduce using rule 99
	"&&"           reduce using rule 99
	"&"            shift, and enter state 154
	"||"           reduce using rule 99
	"|"            reduce using rule 99
	"!="           reduce using rule 99
	"<"            reduce using rule 99
	">"            reduce using rule 99
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           reduce using rule 99
	">="           reduce using rule 99
	"=="           reduce using rule 99
	"{"            reduce using rule 99
	"}"            reduce using rule 99
	"]"            reduce using rule 99
	"="            reduce using rule 99
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 99
	","            reduce using rule 99
	"|="           reduce using rule 99
	"^="           reduce using rule 99
	"&="           reduce using rule 99
	"<<="          reduce using rule 99
	">>="          reduce using rule 99
	"+="           reduce using rule 99
	"-="           reduce using rule 99
	"*="           reduce using rule 99
	"/="           reduce using rule 99
	"%="           reduce using rule 99
	ident          reduce using rule 99
	stringLiteral  reduce using rule 99
	"("            reduce using rule 99
	")"            reduce using rule 99


State 214

	InhExpList -> "(" Expression list__CSExpList__ ")" .    (rule 20)

	"{"            reduce using rule 20
	","            reduce using rule 20


State 215

	list1__CSExpList__ -> CSExpList list1__CSExpList__ .    (rule 318)

	")"            reduce using rule 318


State 216

	zero__ExpressionList__ -> ExpressionList .          (rule 263)

	")"            reduce using rule 263


State 217

	ExpressionList -> Expression . list__ExprList__     (rule 84)
	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	","            shift, and enter state 365
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            reduce using rule 224

	ExprList       goto state 362
	list__ExprList__goto state 363
	list1__ExprList__goto state 364

State 218

	OptionalFunctionCall -> "(" FunctionCallArgs . ")"    (rule 136)

	")"            shift, and enter state 361


State 219

	FunctionCallArgs -> zero__ExpressionList__ .        (rule 139)

	")"            reduce using rule 139


State 220

	FunctionCallArgs -> "{" . zero__NameValueList__ "}"    (rule 138)

	"}"            reduce using rule 284
	ident          shift, and enter state 360

	NameValueList  goto state 357
	NameVal        goto state 358
	zero__NameValueList__goto state 359

State 221

	zero__NestedCall__ -> NestedCall .                  (rule 285)

	decimalnum     reduce using rule 285
	"exponent"     reduce using rule 285
	int            reduce using rule 285
	uint           reduce using rule 285
	bytes          reduce using rule 285
	fixed          reduce using rule 285
	ufixed         reduce using rule 285
	"string"       reduce using rule 285
	"address"      reduce using rule 285
	"bool"         reduce using rule 285
	"do"           reduce using rule 285
	"_"            reduce using rule 285
	"continue"     reduce using rule 285
	"break"        reduce using rule 285
	"return"       reduce using rule 285
	"throw"        reduce using rule 285
	"var"          reduce using rule 285
	"for"          reduce using rule 285
	"true"         reduce using rule 285
	"false"        reduce using rule 285
	"if"           reduce using rule 285
	"while"        reduce using rule 285
	"assembly"     reduce using rule 285
	"else"         reduce using rule 285
	"new"          reduce using rule 285
	"++"           reduce using rule 285
	"--"           reduce using rule 285
	"^"            reduce using rule 285
	"!"            reduce using rule 285
	"&&"           reduce using rule 285
	"&"            reduce using rule 285
	"||"           reduce using rule 285
	"|"            reduce using rule 285
	"!="           reduce using rule 285
	"<"            reduce using rule 285
	">"            reduce using rule 285
	">>"           reduce using rule 285
	"<<"           reduce using rule 285
	"<="           reduce using rule 285
	">="           reduce using rule 285
	"=="           reduce using rule 285
	"{"            reduce using rule 285
	"}"            reduce using rule 285
	"]"            reduce using rule 285
	"="            reduce using rule 285
	"*"            reduce using rule 285
	"/"            reduce using rule 285
	"**"           reduce using rule 285
	"%"            reduce using rule 285
	"+"            reduce using rule 285
	"-"            reduce using rule 285
	";"            reduce using rule 285
	","            reduce using rule 285
	"|="           reduce using rule 285
	"^="           reduce using rule 285
	"&="           reduce using rule 285
	"<<="          reduce using rule 285
	">>="          reduce using rule 285
	"+="           reduce using rule 285
	"-="           reduce using rule 285
	"*="           reduce using rule 285
	"/="           reduce using rule 285
	"%="           reduce using rule 285
	ident          reduce using rule 285
	stringLiteral  reduce using rule 285
	"("            reduce using rule 285
	")"            reduce using rule 285


State 222

	TermExpression -> Factor zero__OptionalCallVar__ zero__NestedCall__ .    (rule 130)

	decimalnum     reduce using rule 130
	"exponent"     reduce using rule 130
	int            reduce using rule 130
	uint           reduce using rule 130
	bytes          reduce using rule 130
	fixed          reduce using rule 130
	ufixed         reduce using rule 130
	"string"       reduce using rule 130
	"address"      reduce using rule 130
	"bool"         reduce using rule 130
	"do"           reduce using rule 130
	"_"            reduce using rule 130
	"continue"     reduce using rule 130
	"break"        reduce using rule 130
	"return"       reduce using rule 130
	"throw"        reduce using rule 130
	"var"          reduce using rule 130
	"for"          reduce using rule 130
	"true"         reduce using rule 130
	"false"        reduce using rule 130
	"if"           reduce using rule 130
	"while"        reduce using rule 130
	"assembly"     reduce using rule 130
	"else"         reduce using rule 130
	"new"          reduce using rule 130
	"++"           reduce using rule 130
	"--"           reduce using rule 130
	"^"            reduce using rule 130
	"!"            reduce using rule 130
	"&&"           reduce using rule 130
	"&"            reduce using rule 130
	"||"           reduce using rule 130
	"|"            reduce using rule 130
	"!="           reduce using rule 130
	"<"            reduce using rule 130
	">"            reduce using rule 130
	">>"           reduce using rule 130
	"<<"           reduce using rule 130
	"<="           reduce using rule 130
	">="           reduce using rule 130
	"=="           reduce using rule 130
	"{"            reduce using rule 130
	"}"            reduce using rule 130
	"]"            reduce using rule 130
	"="            reduce using rule 130
	"*"            reduce using rule 130
	"/"            reduce using rule 130
	"**"           reduce using rule 130
	"%"            reduce using rule 130
	"+"            reduce using rule 130
	"-"            reduce using rule 130
	";"            reduce using rule 130
	","            reduce using rule 130
	"|="           reduce using rule 130
	"^="           reduce using rule 130
	"&="           reduce using rule 130
	"<<="          reduce using rule 130
	">>="          reduce using rule 130
	"+="           reduce using rule 130
	"-="           reduce using rule 130
	"*="           reduce using rule 130
	"/="           reduce using rule 130
	"%="           reduce using rule 130
	ident          reduce using rule 130
	stringLiteral  reduce using rule 130
	"("            reduce using rule 130
	")"            reduce using rule 130


State 223

	NestedCall -> "." . TermExpression                  (rule 132)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96

	Factor         goto state 83
	TermExpression goto state 356
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 224

	Expression -> "(" Expression ")" . zero__ParenthesisExpressionFollowup__    (rule 88)

	decimalnum     reduce using rule 296
	"exponent"     reduce using rule 296
	int            reduce using rule 296
	uint           reduce using rule 296
	bytes          reduce using rule 296
	fixed          reduce using rule 296
	ufixed         reduce using rule 296
	"string"       reduce using rule 296
	"address"      reduce using rule 296
	"bool"         reduce using rule 296
	"do"           reduce using rule 296
	"_"            reduce using rule 296
	"continue"     reduce using rule 296
	"break"        reduce using rule 296
	"return"       reduce using rule 296
	"throw"        reduce using rule 296
	"var"          reduce using rule 296
	"for"          reduce using rule 296
	"true"         reduce using rule 296
	"false"        reduce using rule 296
	"if"           reduce using rule 296
	"while"        reduce using rule 296
	"assembly"     reduce using rule 296
	"else"         reduce using rule 296
	"new"          reduce using rule 296
	"++"           reduce using rule 296
	"--"           reduce using rule 296
	"^"            reduce using rule 296
	"!"            reduce using rule 296
	"&&"           reduce using rule 296
	"&"            reduce using rule 296
	"||"           reduce using rule 296
	"|"            reduce using rule 296
	"!="           reduce using rule 296
	"<"            reduce using rule 296
	">"            reduce using rule 296
	">>"           reduce using rule 296
	"<<"           reduce using rule 296
	"<="           reduce using rule 296
	">="           reduce using rule 296
	"=="           reduce using rule 296
	"{"            reduce using rule 296
	"}"            reduce using rule 296
	"["            shift, and enter state 353
	"]"            reduce using rule 296
	"."            shift, and enter state 354
	"="            reduce using rule 296
	"*"            reduce using rule 296
	"/"            reduce using rule 296
	"**"           reduce using rule 296
	"%"            reduce using rule 296
	"+"            reduce using rule 296
	"-"            reduce using rule 296
	";"            reduce using rule 296
	","            reduce using rule 296
	"|="           reduce using rule 296
	"^="           reduce using rule 296
	"&="           reduce using rule 296
	"<<="          reduce using rule 296
	">>="          reduce using rule 296
	"+="           reduce using rule 296
	"-="           reduce using rule 296
	"*="           reduce using rule 296
	"/="           reduce using rule 296
	"%="           reduce using rule 296
	ident          reduce using rule 296
	stringLiteral  reduce using rule 296
	"("            shift, and enter state 355
			(reduce using rule 296)

	")"            reduce using rule 296

	ParenthesisExpressionFollowupgoto state 351
	zero__ParenthesisExpressionFollowup__goto state 352

State 225

	EnumValList -> EnumValue . list__MultiEnumValue__    (rule 59)

	"}"            reduce using rule 240
	","            shift, and enter state 350

	MultiEnumValue goto state 347
	list__MultiEnumValue__goto state 348
	list1__MultiEnumValue__goto state 349

State 226

	EnumDefinition -> "enum" ident "{" EnumValList . "}"    (rule 57)

	"}"            shift, and enter state 346


State 227

	EnumValue -> ident .                                (rule 58)

	"}"            reduce using rule 58
	","            reduce using rule 58


State 228

	ModifierDefinition -> "modifier" ident zero__ParameterList__ Block .    (rule 53)

	int            reduce using rule 53
	uint           reduce using rule 53
	bytes          reduce using rule 53
	fixed          reduce using rule 53
	ufixed         reduce using rule 53
	"string"       reduce using rule 53
	function       reduce using rule 53
	"struct"       reduce using rule 53
	"address"      reduce using rule 53
	"bool"         reduce using rule 53
	"var"          reduce using rule 53
	"mapping"      reduce using rule 53
	"using"        reduce using rule 53
	"event"        reduce using rule 53
	"modifier"     reduce using rule 53
	"enum"         reduce using rule 53
	"}"            reduce using rule 53
	ident          reduce using rule 53
	nestedids      reduce using rule 53


State 229

	Block -> "{" . list__Statement__ "}"                (rule 161)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	"}"            reduce using rule 248
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 320
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	list__Statement__goto state 333
	list1__Statement__goto state 334

State 230

	zero__EventParams__ -> EventParams .                (rule 259)

	")"            reduce using rule 259


State 231

	EventParams -> EParameters . list__EParamList__     (rule 45)

	","            shift, and enter state 318
	")"            reduce using rule 222

	EParamList     goto state 315
	list__EParamList__goto state 316
	list1__EParamList__goto state 317

State 232

	EParameters -> TypeName . zero__Indexed__ ident     (rule 47)
	EParameters -> TypeName . zero__Indexed__ "from"    (rule 48)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"indexed"      shift, and enter state 314
	"["            shift, and enter state 114
	"from"         reduce using rule 274
	ident          reduce using rule 274

	Indexed        goto state 312
	zero__Indexed__goto state 313

State 233

	EventParamList -> "(" zero__EventParams__ . ")"     (rule 44)

	")"            shift, and enter state 311


State 234

	zero__AnonList__ -> AnonList .                      (rule 251)

	";"            reduce using rule 251


State 235

	EventDefinition -> "event" ident zero__EventParamList__ zero__AnonList__ . ";"    (rule 43)

	";"            shift, and enter state 310


State 236

	AnonList -> "anonymous" .                           (rule 61)

	";"            reduce using rule 61


State 237

	UsingForDec -> "using" ident "for" TypeName . ";"    (rule 73)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"["            shift, and enter state 114
	";"            shift, and enter state 309


State 238

	Mapping -> "mapping" "(" ElementaryTypeName "=>" . TypeName ")"    (rule 203)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	TypeName       goto state 308
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51

State 239

	zero__StructVarDecList__ -> StructVarDecList .      (rule 303)

	"}"            reduce using rule 303


State 240

	StructVarDecList -> StructValue . list__StructValue__    (rule 51)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	"}"            reduce using rule 250
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	StructValue    goto state 305
	TypeName       goto state 241
	VariableDeclarationgoto state 242
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	list__StructValue__goto state 306
	list1__StructValue__goto state 307

State 241

	VariableDeclaration -> TypeName . zero__StorageLocation__ ident zero__VarMExp__    (rule 180)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"memory"       shift, and enter state 272
	"storage"      shift, and enter state 273
	"["            shift, and enter state 114
	ident          reduce using rule 302

	StorageLocationgoto state 270
	zero__StorageLocation__goto state 304

State 242

	StructValue -> VariableDeclaration . ";"            (rule 52)

	";"            shift, and enter state 303


State 243

	StructDefinition -> "struct" ident "{" zero__StructVarDecList__ . "}"    (rule 50)

	"}"            shift, and enter state 302


State 244

	zero__Parameters__ -> Parameters .                  (rule 293)

	")"            reduce using rule 293


State 245

	Parameters -> Parameter . list__ParamList__         (rule 32)

	","            shift, and enter state 301
	")"            reduce using rule 246

	ParamList      goto state 298
	list__ParamList__goto state 299
	list1__ParamList__goto state 300

State 246

	Parameter -> TypeName . zero__StorageLocation__ zero__ParamIdent__    (rule 34)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"memory"       shift, and enter state 272
	"storage"      shift, and enter state 273
	"["            shift, and enter state 114
	","            reduce using rule 302
	"from"         reduce using rule 302
	ident          reduce using rule 302
	")"            reduce using rule 302

	StorageLocationgoto state 270
	zero__StorageLocation__goto state 297

State 247

	ParameterList -> "(" zero__Parameters__ . ")"       (rule 31)

	")"            shift, and enter state 296


State 248

	list1__FuncMods__ -> FuncMods .                     (rule 331)
	list1__FuncMods__ -> FuncMods . list1__FuncMods__    (rule 332)

	"external"     shift, and enter state 254
	"public"       shift, and enter state 255
	"internal"     shift, and enter state 256
	"private"      shift, and enter state 257
	"constant"     shift, and enter state 258
	"view"         shift, and enter state 259
	"pure"         shift, and enter state 260
	"payable"      shift, and enter state 261
	"returns"      reduce using rule 331
	"{"            reduce using rule 331
	";"            reduce using rule 331
	ident          shift, and enter state 262

	FuncMods       goto state 248
	ModifierInvocationgoto state 249
	StateMutabilitygoto state 250
	FuncVar        goto state 251
	list1__FuncMods__goto state 295

State 249

	FuncMods -> ModifierInvocation .                    (rule 37)

	"external"     reduce using rule 37
	"public"       reduce using rule 37
	"internal"     reduce using rule 37
	"private"      reduce using rule 37
	"constant"     reduce using rule 37
	"view"         reduce using rule 37
	"pure"         reduce using rule 37
	"payable"      reduce using rule 37
	"returns"      reduce using rule 37
	"{"            reduce using rule 37
	";"            reduce using rule 37
	ident          reduce using rule 37


State 250

	FuncMods -> StateMutability .                       (rule 38)

	"external"     reduce using rule 38
	"public"       reduce using rule 38
	"internal"     reduce using rule 38
	"private"      reduce using rule 38
	"constant"     reduce using rule 38
	"view"         reduce using rule 38
	"pure"         reduce using rule 38
	"payable"      reduce using rule 38
	"returns"      reduce using rule 38
	"{"            reduce using rule 38
	";"            reduce using rule 38
	ident          reduce using rule 38


State 251

	FuncMods -> FuncVar .                               (rule 39)

	"external"     reduce using rule 39
	"public"       reduce using rule 39
	"internal"     reduce using rule 39
	"private"      reduce using rule 39
	"constant"     reduce using rule 39
	"view"         reduce using rule 39
	"pure"         reduce using rule 39
	"payable"      reduce using rule 39
	"returns"      reduce using rule 39
	"{"            reduce using rule 39
	";"            reduce using rule 39
	ident          reduce using rule 39


State 252

	FunctionDefinition -> function ident ParameterList list__FuncMods__ . zero__ReturnParam__ TermBlock    (rule 29)

	"returns"      shift, and enter state 290
	"{"            reduce using rule 298
	";"            reduce using rule 298

	ReturnParam    goto state 288
	zero__ReturnParam__goto state 294

State 253

	list__FuncMods__ -> list1__FuncMods__ .             (rule 231)

	"returns"      reduce using rule 231
	"{"            reduce using rule 231
	";"            reduce using rule 231


State 254

	FuncVar -> "external" .                             (rule 68)

	"external"     reduce using rule 68
	"public"       reduce using rule 68
	"internal"     reduce using rule 68
	"private"      reduce using rule 68
	"constant"     reduce using rule 68
	"view"         reduce using rule 68
	"pure"         reduce using rule 68
	"payable"      reduce using rule 68
	"returns"      reduce using rule 68
	"{"            reduce using rule 68
	";"            reduce using rule 68
	ident          reduce using rule 68


State 255

	FuncVar -> "public" .                               (rule 71)

	"external"     reduce using rule 71
	"public"       reduce using rule 71
	"internal"     reduce using rule 71
	"private"      reduce using rule 71
	"constant"     reduce using rule 71
	"view"         reduce using rule 71
	"pure"         reduce using rule 71
	"payable"      reduce using rule 71
	"returns"      reduce using rule 71
	"{"            reduce using rule 71
	";"            reduce using rule 71
	ident          reduce using rule 71


State 256

	FuncVar -> "internal" .                             (rule 69)

	"external"     reduce using rule 69
	"public"       reduce using rule 69
	"internal"     reduce using rule 69
	"private"      reduce using rule 69
	"constant"     reduce using rule 69
	"view"         reduce using rule 69
	"pure"         reduce using rule 69
	"payable"      reduce using rule 69
	"returns"      reduce using rule 69
	"{"            reduce using rule 69
	";"            reduce using rule 69
	ident          reduce using rule 69


State 257

	FuncVar -> "private" .                              (rule 70)

	"external"     reduce using rule 70
	"public"       reduce using rule 70
	"internal"     reduce using rule 70
	"private"      reduce using rule 70
	"constant"     reduce using rule 70
	"view"         reduce using rule 70
	"pure"         reduce using rule 70
	"payable"      reduce using rule 70
	"returns"      reduce using rule 70
	"{"            reduce using rule 70
	";"            reduce using rule 70
	ident          reduce using rule 70


State 258

	StateMutability -> "constant" .                     (rule 63)

	int            reduce using rule 63
	uint           reduce using rule 63
	bytes          reduce using rule 63
	fixed          reduce using rule 63
	ufixed         reduce using rule 63
	"external"     reduce using rule 63
	"public"       reduce using rule 63
	"internal"     reduce using rule 63
	"private"      reduce using rule 63
	"constant"     reduce using rule 63
	"string"       reduce using rule 63
	function       reduce using rule 63
	"address"      reduce using rule 63
	"bool"         reduce using rule 63
	"var"          reduce using rule 63
	"mapping"      reduce using rule 63
	"indexed"      reduce using rule 63
	"view"         reduce using rule 63
	"pure"         reduce using rule 63
	"payable"      reduce using rule 63
	"returns"      reduce using rule 63
	"memory"       reduce using rule 63
	"storage"      reduce using rule 63
	"{"            reduce using rule 63
	"["            reduce using rule 63
	";"            reduce using rule 63
	","            reduce using rule 63
	"from"         reduce using rule 63
	ident          reduce using rule 63
	nestedids      reduce using rule 63
	")"            reduce using rule 63


State 259

	StateMutability -> "view" .                         (rule 64)

	int            reduce using rule 64
	uint           reduce using rule 64
	bytes          reduce using rule 64
	fixed          reduce using rule 64
	ufixed         reduce using rule 64
	"external"     reduce using rule 64
	"public"       reduce using rule 64
	"internal"     reduce using rule 64
	"private"      reduce using rule 64
	"constant"     reduce using rule 64
	"string"       reduce using rule 64
	function       reduce using rule 64
	"address"      reduce using rule 64
	"bool"         reduce using rule 64
	"var"          reduce using rule 64
	"mapping"      reduce using rule 64
	"indexed"      reduce using rule 64
	"view"         reduce using rule 64
	"pure"         reduce using rule 64
	"payable"      reduce using rule 64
	"returns"      reduce using rule 64
	"memory"       reduce using rule 64
	"storage"      reduce using rule 64
	"{"            reduce using rule 64
	"["            reduce using rule 64
	";"            reduce using rule 64
	","            reduce using rule 64
	"from"         reduce using rule 64
	ident          reduce using rule 64
	nestedids      reduce using rule 64
	")"            reduce using rule 64


State 260

	StateMutability -> "pure" .                         (rule 62)

	int            reduce using rule 62
	uint           reduce using rule 62
	bytes          reduce using rule 62
	fixed          reduce using rule 62
	ufixed         reduce using rule 62
	"external"     reduce using rule 62
	"public"       reduce using rule 62
	"internal"     reduce using rule 62
	"private"      reduce using rule 62
	"constant"     reduce using rule 62
	"string"       reduce using rule 62
	function       reduce using rule 62
	"address"      reduce using rule 62
	"bool"         reduce using rule 62
	"var"          reduce using rule 62
	"mapping"      reduce using rule 62
	"indexed"      reduce using rule 62
	"view"         reduce using rule 62
	"pure"         reduce using rule 62
	"payable"      reduce using rule 62
	"returns"      reduce using rule 62
	"memory"       reduce using rule 62
	"storage"      reduce using rule 62
	"{"            reduce using rule 62
	"["            reduce using rule 62
	";"            reduce using rule 62
	","            reduce using rule 62
	"from"         reduce using rule 62
	ident          reduce using rule 62
	nestedids      reduce using rule 62
	")"            reduce using rule 62


State 261

	StateMutability -> "payable" .                      (rule 65)

	int            reduce using rule 65
	uint           reduce using rule 65
	bytes          reduce using rule 65
	fixed          reduce using rule 65
	ufixed         reduce using rule 65
	"external"     reduce using rule 65
	"public"       reduce using rule 65
	"internal"     reduce using rule 65
	"private"      reduce using rule 65
	"constant"     reduce using rule 65
	"string"       reduce using rule 65
	function       reduce using rule 65
	"address"      reduce using rule 65
	"bool"         reduce using rule 65
	"var"          reduce using rule 65
	"mapping"      reduce using rule 65
	"indexed"      reduce using rule 65
	"view"         reduce using rule 65
	"pure"         reduce using rule 65
	"payable"      reduce using rule 65
	"returns"      reduce using rule 65
	"memory"       reduce using rule 65
	"storage"      reduce using rule 65
	"{"            reduce using rule 65
	"["            reduce using rule 65
	";"            reduce using rule 65
	","            reduce using rule 65
	"from"         reduce using rule 65
	ident          reduce using rule 65
	nestedids      reduce using rule 65
	")"            reduce using rule 65


State 262

	ModifierInvocation -> ident . zero__ZOModExpList__    (rule 54)

	"external"     reduce using rule 308
	"public"       reduce using rule 308
	"internal"     reduce using rule 308
	"private"      reduce using rule 308
	"constant"     reduce using rule 308
	"view"         reduce using rule 308
	"pure"         reduce using rule 308
	"payable"      reduce using rule 308
	"returns"      reduce using rule 308
	"{"            reduce using rule 308
	";"            reduce using rule 308
	ident          reduce using rule 308
	"("            shift, and enter state 293

	ZOModExpList   goto state 291
	zero__ZOModExpList__goto state 292

State 263

	FunctionDefinition -> function "(" ")" list__FuncMods__ . zero__ReturnParam__ TermBlock    (rule 30)

	"returns"      shift, and enter state 290
	"{"            reduce using rule 298
	";"            reduce using rule 298

	ReturnParam    goto state 288
	zero__ReturnParam__goto state 289

State 264

	FunctionTypeName -> function "(" . zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__    (rule 205)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            reduce using rule 266

	TypeName       goto state 120
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	FParameters    goto state 121
	FParam         goto state 122
	zero__FParameters__goto state 123

State 265

	FunctionTypeName -> function "(" zero__FParameters__ ")" . list__FTNParams__ zero__FTNReturn__    (rule 205)

	int            reduce using rule 230
	uint           reduce using rule 230
	bytes          reduce using rule 230
	fixed          reduce using rule 230
	ufixed         reduce using rule 230
	"external"     shift, and enter state 286
	"public"       reduce using rule 230
	"internal"     shift, and enter state 287
			(reduce using rule 230)

	"private"      reduce using rule 230
	"constant"     shift, and enter state 258
			(reduce using rule 230)

	"string"       reduce using rule 230
	function       reduce using rule 230
	"address"      reduce using rule 230
	"bool"         reduce using rule 230
	"var"          reduce using rule 230
	"mapping"      reduce using rule 230
	"indexed"      reduce using rule 230
	"view"         shift, and enter state 259
	"pure"         shift, and enter state 260
	"payable"      shift, and enter state 261
	"returns"      reduce using rule 230
	"memory"       reduce using rule 230
	"storage"      reduce using rule 230
	"["            reduce using rule 230
	";"            reduce using rule 230
	","            reduce using rule 230
	"from"         reduce using rule 230
	ident          reduce using rule 230
	nestedids      reduce using rule 230
	")"            reduce using rule 230

	StateMutabilitygoto state 282
	FTNParams      goto state 283
	list__FTNParams__goto state 284
	list1__FTNParams__goto state 285

State 266

	list1__FParamList__ -> FParamList .                 (rule 325)
	list1__FParamList__ -> FParamList . list1__FParamList__    (rule 326)

	int            reduce using rule 325
	uint           reduce using rule 325
	bytes          reduce using rule 325
	fixed          reduce using rule 325
	ufixed         reduce using rule 325
	"string"       reduce using rule 325
	function       reduce using rule 325
	"address"      reduce using rule 325
	"bool"         reduce using rule 325
	"var"          reduce using rule 325
	"mapping"      reduce using rule 325
	","            shift, and enter state 269
	ident          reduce using rule 325
	nestedids      reduce using rule 325
	")"            reduce using rule 325

	FParamList     goto state 266
	list1__FParamList__goto state 281

State 267

	FParameters -> FParam list__FParamList__ .          (rule 210)

	int            reduce using rule 210
	uint           reduce using rule 210
	bytes          reduce using rule 210
	fixed          reduce using rule 210
	ufixed         reduce using rule 210
	"string"       reduce using rule 210
	function       reduce using rule 210
	"address"      reduce using rule 210
	"bool"         reduce using rule 210
	"var"          reduce using rule 210
	"mapping"      reduce using rule 210
	ident          reduce using rule 210
	nestedids      reduce using rule 210
	")"            reduce using rule 210


State 268

	list__FParamList__ -> list1__FParamList__ .         (rule 225)

	int            reduce using rule 225
	uint           reduce using rule 225
	bytes          reduce using rule 225
	fixed          reduce using rule 225
	ufixed         reduce using rule 225
	"string"       reduce using rule 225
	function       reduce using rule 225
	"address"      reduce using rule 225
	"bool"         reduce using rule 225
	"var"          reduce using rule 225
	"mapping"      reduce using rule 225
	ident          reduce using rule 225
	nestedids      reduce using rule 225
	")"            reduce using rule 225


State 269

	FParamList -> "," . FParam                          (rule 211)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	TypeName       goto state 120
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	FParam         goto state 280

State 270

	zero__StorageLocation__ -> StorageLocation .        (rule 301)

	int            reduce using rule 301
	uint           reduce using rule 301
	bytes          reduce using rule 301
	fixed          reduce using rule 301
	ufixed         reduce using rule 301
	"string"       reduce using rule 301
	function       reduce using rule 301
	"address"      reduce using rule 301
	"bool"         reduce using rule 301
	"var"          reduce using rule 301
	"mapping"      reduce using rule 301
	","            reduce using rule 301
	"from"         reduce using rule 301
	ident          reduce using rule 301
	nestedids      reduce using rule 301
	")"            reduce using rule 301


State 271

	FParam -> TypeName zero__StorageLocation__ .        (rule 212)

	int            reduce using rule 212
	uint           reduce using rule 212
	bytes          reduce using rule 212
	fixed          reduce using rule 212
	ufixed         reduce using rule 212
	"string"       reduce using rule 212
	function       reduce using rule 212
	"address"      reduce using rule 212
	"bool"         reduce using rule 212
	"var"          reduce using rule 212
	"mapping"      reduce using rule 212
	","            reduce using rule 212
	ident          reduce using rule 212
	nestedids      reduce using rule 212
	")"            reduce using rule 212


State 272

	StorageLocation -> "memory" .                       (rule 66)

	int            reduce using rule 66
	uint           reduce using rule 66
	bytes          reduce using rule 66
	fixed          reduce using rule 66
	ufixed         reduce using rule 66
	"string"       reduce using rule 66
	function       reduce using rule 66
	"address"      reduce using rule 66
	"bool"         reduce using rule 66
	"var"          reduce using rule 66
	"mapping"      reduce using rule 66
	","            reduce using rule 66
	"from"         reduce using rule 66
	ident          reduce using rule 66
	nestedids      reduce using rule 66
	")"            reduce using rule 66


State 273

	StorageLocation -> "storage" .                      (rule 67)

	int            reduce using rule 67
	uint           reduce using rule 67
	bytes          reduce using rule 67
	fixed          reduce using rule 67
	ufixed         reduce using rule 67
	"string"       reduce using rule 67
	function       reduce using rule 67
	"address"      reduce using rule 67
	"bool"         reduce using rule 67
	"var"          reduce using rule 67
	"mapping"      reduce using rule 67
	","            reduce using rule 67
	"from"         reduce using rule 67
	ident          reduce using rule 67
	nestedids      reduce using rule 67
	")"            reduce using rule 67


State 274

	zero__MExpression__ -> MExpression .                (rule 279)

	";"            reduce using rule 279


State 275

	StateVarDeclaration -> TypeName list__AssVar__ ident zero__MExpression__ . ";"    (rule 72)

	";"            shift, and enter state 279


State 276

	MExpression -> "=" . Expression                     (rule 83)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 278
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 277

	ArrayTypeName -> TypeName "[" zero__Expression__ "]" .    (rule 204)

	int            reduce using rule 204
	uint           reduce using rule 204
	bytes          reduce using rule 204
	fixed          reduce using rule 204
	ufixed         reduce using rule 204
	"public"       reduce using rule 204
	"internal"     reduce using rule 204
	"private"      reduce using rule 204
	"constant"     reduce using rule 204
	"string"       reduce using rule 204
	function       reduce using rule 204
	"address"      reduce using rule 204
	"bool"         reduce using rule 204
	"var"          reduce using rule 204
	"mapping"      reduce using rule 204
	"indexed"      reduce using rule 204
	"memory"       reduce using rule 204
	"storage"      reduce using rule 204
	"["            reduce using rule 204
	";"            reduce using rule 204
	","            reduce using rule 204
	"from"         reduce using rule 204
	ident          reduce using rule 204
	nestedids      reduce using rule 204
	")"            reduce using rule 204


State 278

	MExpression -> "=" Expression .                     (rule 83)
	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 83
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182


State 279

	StateVarDeclaration -> TypeName list__AssVar__ ident zero__MExpression__ ";" .    (rule 72)

	int            reduce using rule 72
	uint           reduce using rule 72
	bytes          reduce using rule 72
	fixed          reduce using rule 72
	ufixed         reduce using rule 72
	"string"       reduce using rule 72
	function       reduce using rule 72
	"struct"       reduce using rule 72
	"address"      reduce using rule 72
	"bool"         reduce using rule 72
	"var"          reduce using rule 72
	"mapping"      reduce using rule 72
	"using"        reduce using rule 72
	"event"        reduce using rule 72
	"modifier"     reduce using rule 72
	"enum"         reduce using rule 72
	"}"            reduce using rule 72
	ident          reduce using rule 72
	nestedids      reduce using rule 72


State 280

	FParamList -> "," FParam .                          (rule 211)

	int            reduce using rule 211
	uint           reduce using rule 211
	bytes          reduce using rule 211
	fixed          reduce using rule 211
	ufixed         reduce using rule 211
	"string"       reduce using rule 211
	function       reduce using rule 211
	"address"      reduce using rule 211
	"bool"         reduce using rule 211
	"var"          reduce using rule 211
	"mapping"      reduce using rule 211
	","            reduce using rule 211
	ident          reduce using rule 211
	nestedids      reduce using rule 211
	")"            reduce using rule 211


State 281

	list1__FParamList__ -> FParamList list1__FParamList__ .    (rule 326)

	int            reduce using rule 326
	uint           reduce using rule 326
	bytes          reduce using rule 326
	fixed          reduce using rule 326
	ufixed         reduce using rule 326
	"string"       reduce using rule 326
	function       reduce using rule 326
	"address"      reduce using rule 326
	"bool"         reduce using rule 326
	"var"          reduce using rule 326
	"mapping"      reduce using rule 326
	ident          reduce using rule 326
	nestedids      reduce using rule 326
	")"            reduce using rule 326


State 282

	FTNParams -> StateMutability .                      (rule 208)

	int            reduce using rule 208
	uint           reduce using rule 208
	bytes          reduce using rule 208
	fixed          reduce using rule 208
	ufixed         reduce using rule 208
	"external"     reduce using rule 208
	"public"       reduce using rule 208
	"internal"     reduce using rule 208
	"private"      reduce using rule 208
	"constant"     reduce using rule 208
	"string"       reduce using rule 208
	function       reduce using rule 208
	"address"      reduce using rule 208
	"bool"         reduce using rule 208
	"var"          reduce using rule 208
	"mapping"      reduce using rule 208
	"indexed"      reduce using rule 208
	"view"         reduce using rule 208
	"pure"         reduce using rule 208
	"payable"      reduce using rule 208
	"returns"      reduce using rule 208
	"memory"       reduce using rule 208
	"storage"      reduce using rule 208
	"["            reduce using rule 208
	";"            reduce using rule 208
	","            reduce using rule 208
	"from"         reduce using rule 208
	ident          reduce using rule 208
	nestedids      reduce using rule 208
	")"            reduce using rule 208


State 283

	list1__FTNParams__ -> FTNParams .                   (rule 329)
	list1__FTNParams__ -> FTNParams . list1__FTNParams__    (rule 330)

	int            reduce using rule 329
	uint           reduce using rule 329
	bytes          reduce using rule 329
	fixed          reduce using rule 329
	ufixed         reduce using rule 329
	"external"     shift, and enter state 286
	"public"       reduce using rule 329
	"internal"     shift, and enter state 287
			(reduce using rule 329)

	"private"      reduce using rule 329
	"constant"     shift, and enter state 258
			(reduce using rule 329)

	"string"       reduce using rule 329
	function       reduce using rule 329
	"address"      reduce using rule 329
	"bool"         reduce using rule 329
	"var"          reduce using rule 329
	"mapping"      reduce using rule 329
	"indexed"      reduce using rule 329
	"view"         shift, and enter state 259
	"pure"         shift, and enter state 260
	"payable"      shift, and enter state 261
	"returns"      reduce using rule 329
	"memory"       reduce using rule 329
	"storage"      reduce using rule 329
	"["            reduce using rule 329
	";"            reduce using rule 329
	","            reduce using rule 329
	"from"         reduce using rule 329
	ident          reduce using rule 329
	nestedids      reduce using rule 329
	")"            reduce using rule 329

	StateMutabilitygoto state 282
	FTNParams      goto state 283
	list1__FTNParams__goto state 421

State 284

	FunctionTypeName -> function "(" zero__FParameters__ ")" list__FTNParams__ . zero__FTNReturn__    (rule 205)

	int            reduce using rule 268
	uint           reduce using rule 268
	bytes          reduce using rule 268
	fixed          reduce using rule 268
	ufixed         reduce using rule 268
	"public"       reduce using rule 268
	"internal"     reduce using rule 268
	"private"      reduce using rule 268
	"constant"     reduce using rule 268
	"string"       reduce using rule 268
	function       reduce using rule 268
	"address"      reduce using rule 268
	"bool"         reduce using rule 268
	"var"          reduce using rule 268
	"mapping"      reduce using rule 268
	"indexed"      reduce using rule 268
	"returns"      shift, and enter state 420
	"memory"       reduce using rule 268
	"storage"      reduce using rule 268
	"["            reduce using rule 268
	";"            reduce using rule 268
	","            reduce using rule 268
	"from"         reduce using rule 268
	ident          reduce using rule 268
	nestedids      reduce using rule 268
	")"            reduce using rule 268

	FTNReturn      goto state 418
	zero__FTNReturn__goto state 419

State 285

	list__FTNParams__ -> list1__FTNParams__ .           (rule 229)

	int            reduce using rule 229
	uint           reduce using rule 229
	bytes          reduce using rule 229
	fixed          reduce using rule 229
	ufixed         reduce using rule 229
	"public"       reduce using rule 229
	"internal"     reduce using rule 229
	"private"      reduce using rule 229
	"constant"     reduce using rule 229
	"string"       reduce using rule 229
	function       reduce using rule 229
	"address"      reduce using rule 229
	"bool"         reduce using rule 229
	"var"          reduce using rule 229
	"mapping"      reduce using rule 229
	"indexed"      reduce using rule 229
	"returns"      reduce using rule 229
	"memory"       reduce using rule 229
	"storage"      reduce using rule 229
	"["            reduce using rule 229
	";"            reduce using rule 229
	","            reduce using rule 229
	"from"         reduce using rule 229
	ident          reduce using rule 229
	nestedids      reduce using rule 229
	")"            reduce using rule 229


State 286

	FTNParams -> "external" .                           (rule 207)

	int            reduce using rule 207
	uint           reduce using rule 207
	bytes          reduce using rule 207
	fixed          reduce using rule 207
	ufixed         reduce using rule 207
	"external"     reduce using rule 207
	"public"       reduce using rule 207
	"internal"     reduce using rule 207
	"private"      reduce using rule 207
	"constant"     reduce using rule 207
	"string"       reduce using rule 207
	function       reduce using rule 207
	"address"      reduce using rule 207
	"bool"         reduce using rule 207
	"var"          reduce using rule 207
	"mapping"      reduce using rule 207
	"indexed"      reduce using rule 207
	"view"         reduce using rule 207
	"pure"         reduce using rule 207
	"payable"      reduce using rule 207
	"returns"      reduce using rule 207
	"memory"       reduce using rule 207
	"storage"      reduce using rule 207
	"["            reduce using rule 207
	";"            reduce using rule 207
	","            reduce using rule 207
	"from"         reduce using rule 207
	ident          reduce using rule 207
	nestedids      reduce using rule 207
	")"            reduce using rule 207


State 287

	FTNParams -> "internal" .                           (rule 206)

	int            reduce using rule 206
	uint           reduce using rule 206
	bytes          reduce using rule 206
	fixed          reduce using rule 206
	ufixed         reduce using rule 206
	"external"     reduce using rule 206
	"public"       reduce using rule 206
	"internal"     reduce using rule 206
	"private"      reduce using rule 206
	"constant"     reduce using rule 206
	"string"       reduce using rule 206
	function       reduce using rule 206
	"address"      reduce using rule 206
	"bool"         reduce using rule 206
	"var"          reduce using rule 206
	"mapping"      reduce using rule 206
	"indexed"      reduce using rule 206
	"view"         reduce using rule 206
	"pure"         reduce using rule 206
	"payable"      reduce using rule 206
	"returns"      reduce using rule 206
	"memory"       reduce using rule 206
	"storage"      reduce using rule 206
	"["            reduce using rule 206
	";"            reduce using rule 206
	","            reduce using rule 206
	"from"         reduce using rule 206
	ident          reduce using rule 206
	nestedids      reduce using rule 206
	")"            reduce using rule 206


State 288

	zero__ReturnParam__ -> ReturnParam .                (rule 297)

	"{"            reduce using rule 297
	";"            reduce using rule 297


State 289

	FunctionDefinition -> function "(" ")" list__FuncMods__ zero__ReturnParam__ . TermBlock    (rule 30)

	"{"            shift, and enter state 229
	";"            shift, and enter state 412

	TermBlock      goto state 417
	Block          goto state 411

State 290

	ReturnParam -> "returns" . ParameterList            (rule 40)

	"("            shift, and enter state 127

	ParameterList  goto state 416

State 291

	zero__ZOModExpList__ -> ZOModExpList .              (rule 307)

	"external"     reduce using rule 307
	"public"       reduce using rule 307
	"internal"     reduce using rule 307
	"private"      reduce using rule 307
	"constant"     reduce using rule 307
	"view"         reduce using rule 307
	"pure"         reduce using rule 307
	"payable"      reduce using rule 307
	"returns"      reduce using rule 307
	"{"            reduce using rule 307
	";"            reduce using rule 307
	ident          reduce using rule 307


State 292

	ModifierInvocation -> ident zero__ZOModExpList__ .    (rule 54)

	"external"     reduce using rule 54
	"public"       reduce using rule 54
	"internal"     reduce using rule 54
	"private"      reduce using rule 54
	"constant"     reduce using rule 54
	"view"         reduce using rule 54
	"pure"         reduce using rule 54
	"payable"      reduce using rule 54
	"returns"      reduce using rule 54
	"{"            reduce using rule 54
	";"            reduce using rule 54
	ident          reduce using rule 54


State 293

	ZOModExpList -> "(" . zero__ModExpList__ ")"        (rule 55)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97
	")"            reduce using rule 282

	ModExpList     goto state 413
	ExpressionList goto state 414
	Expression     goto state 217
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__ModExpList__goto state 415

State 294

	FunctionDefinition -> function ident ParameterList list__FuncMods__ zero__ReturnParam__ . TermBlock    (rule 29)

	"{"            shift, and enter state 229
	";"            shift, and enter state 412

	TermBlock      goto state 410
	Block          goto state 411

State 295

	list1__FuncMods__ -> FuncMods list1__FuncMods__ .    (rule 332)

	"returns"      reduce using rule 332
	"{"            reduce using rule 332
	";"            reduce using rule 332


State 296

	ParameterList -> "(" zero__Parameters__ ")" .       (rule 31)

	"external"     reduce using rule 31
	"public"       reduce using rule 31
	"internal"     reduce using rule 31
	"private"      reduce using rule 31
	"constant"     reduce using rule 31
	"view"         reduce using rule 31
	"pure"         reduce using rule 31
	"payable"      reduce using rule 31
	"returns"      reduce using rule 31
	"{"            reduce using rule 31
	";"            reduce using rule 31
	ident          reduce using rule 31


State 297

	Parameter -> TypeName zero__StorageLocation__ . zero__ParamIdent__    (rule 34)

	","            reduce using rule 290
	"from"         shift, and enter state 408
	ident          shift, and enter state 409
	")"            reduce using rule 290

	ParamIdent     goto state 406
	zero__ParamIdent__goto state 407

State 298

	list1__ParamList__ -> ParamList .                   (rule 345)
	list1__ParamList__ -> ParamList . list1__ParamList__    (rule 346)

	","            shift, and enter state 301
	")"            reduce using rule 345

	ParamList      goto state 298
	list1__ParamList__goto state 405

State 299

	Parameters -> Parameter list__ParamList__ .         (rule 32)

	")"            reduce using rule 32


State 300

	list__ParamList__ -> list1__ParamList__ .           (rule 245)

	")"            reduce using rule 245


State 301

	ParamList -> "," . Parameter                        (rule 33)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	Parameter      goto state 404
	TypeName       goto state 246
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51

State 302

	StructDefinition -> "struct" ident "{" zero__StructVarDecList__ "}" .    (rule 50)

	int            reduce using rule 50
	uint           reduce using rule 50
	bytes          reduce using rule 50
	fixed          reduce using rule 50
	ufixed         reduce using rule 50
	"string"       reduce using rule 50
	function       reduce using rule 50
	"struct"       reduce using rule 50
	"address"      reduce using rule 50
	"bool"         reduce using rule 50
	"var"          reduce using rule 50
	"mapping"      reduce using rule 50
	"using"        reduce using rule 50
	"event"        reduce using rule 50
	"modifier"     reduce using rule 50
	"enum"         reduce using rule 50
	"}"            reduce using rule 50
	ident          reduce using rule 50
	nestedids      reduce using rule 50


State 303

	StructValue -> VariableDeclaration ";" .            (rule 52)

	int            reduce using rule 52
	uint           reduce using rule 52
	bytes          reduce using rule 52
	fixed          reduce using rule 52
	ufixed         reduce using rule 52
	"string"       reduce using rule 52
	function       reduce using rule 52
	"address"      reduce using rule 52
	"bool"         reduce using rule 52
	"var"          reduce using rule 52
	"mapping"      reduce using rule 52
	"}"            reduce using rule 52
	ident          reduce using rule 52
	nestedids      reduce using rule 52


State 304

	VariableDeclaration -> TypeName zero__StorageLocation__ . ident zero__VarMExp__    (rule 180)

	ident          shift, and enter state 403


State 305

	list1__StructValue__ -> StructValue .               (rule 349)
	list1__StructValue__ -> StructValue . list1__StructValue__    (rule 350)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	"}"            reduce using rule 349
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	StructValue    goto state 305
	TypeName       goto state 241
	VariableDeclarationgoto state 242
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	list1__StructValue__goto state 402

State 306

	StructVarDecList -> StructValue list__StructValue__ .    (rule 51)

	"}"            reduce using rule 51


State 307

	list__StructValue__ -> list1__StructValue__ .       (rule 249)

	"}"            reduce using rule 249


State 308

	Mapping -> "mapping" "(" ElementaryTypeName "=>" TypeName . ")"    (rule 203)
	ArrayTypeName -> TypeName . "[" zero__Expression__ "]"    (rule 204)

	"["            shift, and enter state 114
	")"            shift, and enter state 401


State 309

	UsingForDec -> "using" ident "for" TypeName ";" .    (rule 73)

	int            reduce using rule 73
	uint           reduce using rule 73
	bytes          reduce using rule 73
	fixed          reduce using rule 73
	ufixed         reduce using rule 73
	"string"       reduce using rule 73
	function       reduce using rule 73
	"struct"       reduce using rule 73
	"address"      reduce using rule 73
	"bool"         reduce using rule 73
	"var"          reduce using rule 73
	"mapping"      reduce using rule 73
	"using"        reduce using rule 73
	"event"        reduce using rule 73
	"modifier"     reduce using rule 73
	"enum"         reduce using rule 73
	"}"            reduce using rule 73
	ident          reduce using rule 73
	nestedids      reduce using rule 73


State 310

	EventDefinition -> "event" ident zero__EventParamList__ zero__AnonList__ ";" .    (rule 43)

	int            reduce using rule 43
	uint           reduce using rule 43
	bytes          reduce using rule 43
	fixed          reduce using rule 43
	ufixed         reduce using rule 43
	"string"       reduce using rule 43
	function       reduce using rule 43
	"struct"       reduce using rule 43
	"address"      reduce using rule 43
	"bool"         reduce using rule 43
	"var"          reduce using rule 43
	"mapping"      reduce using rule 43
	"using"        reduce using rule 43
	"event"        reduce using rule 43
	"modifier"     reduce using rule 43
	"enum"         reduce using rule 43
	"}"            reduce using rule 43
	ident          reduce using rule 43
	nestedids      reduce using rule 43


State 311

	EventParamList -> "(" zero__EventParams__ ")" .     (rule 44)

	"anonymous"    reduce using rule 44
	";"            reduce using rule 44


State 312

	zero__Indexed__ -> Indexed .                        (rule 273)

	"from"         reduce using rule 273
	ident          reduce using rule 273


State 313

	EParameters -> TypeName zero__Indexed__ . ident     (rule 47)
	EParameters -> TypeName zero__Indexed__ . "from"    (rule 48)

	"from"         shift, and enter state 399
	ident          shift, and enter state 400


State 314

	Indexed -> "indexed" .                              (rule 49)

	"from"         reduce using rule 49
	ident          reduce using rule 49


State 315

	list1__EParamList__ -> EParamList .                 (rule 321)
	list1__EParamList__ -> EParamList . list1__EParamList__    (rule 322)

	","            shift, and enter state 318
	")"            reduce using rule 321

	EParamList     goto state 315
	list1__EParamList__goto state 398

State 316

	EventParams -> EParameters list__EParamList__ .     (rule 45)

	")"            reduce using rule 45


State 317

	list__EParamList__ -> list1__EParamList__ .         (rule 221)

	")"            reduce using rule 221


State 318

	EParamList -> "," . EParameters                     (rule 46)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36

	EParameters    goto state 397
	TypeName       goto state 232
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51

State 319

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	Statement -> Expression . ";"                       (rule 155)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            shift, and enter state 396
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182


State 320

	list1__Statement__ -> Statement .                   (rule 347)
	list1__Statement__ -> Statement . list1__Statement__    (rule 348)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	"}"            reduce using rule 347
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 320
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	list1__Statement__goto state 395

State 321

	Statement -> IfStatement .                          (rule 143)

	decimalnum     reduce using rule 143
	"exponent"     reduce using rule 143
	int            reduce using rule 143
	uint           reduce using rule 143
	bytes          reduce using rule 143
	fixed          reduce using rule 143
	ufixed         reduce using rule 143
	"string"       reduce using rule 143
	"address"      reduce using rule 143
	"bool"         reduce using rule 143
	"do"           reduce using rule 143
	"_"            reduce using rule 143
	"continue"     reduce using rule 143
	"break"        reduce using rule 143
	"return"       reduce using rule 143
	"throw"        reduce using rule 143
	"var"          reduce using rule 143
	"for"          reduce using rule 143
	"true"         reduce using rule 143
	"false"        reduce using rule 143
	"if"           reduce using rule 143
	"while"        reduce using rule 143
	"assembly"     reduce using rule 143
	"else"         reduce using rule 143
	"new"          reduce using rule 143
	"!"            reduce using rule 143
	"{"            reduce using rule 143
	"}"            reduce using rule 143
	ident          reduce using rule 143
	stringLiteral  reduce using rule 143
	"("            reduce using rule 143


State 322

	Statement -> WhileStatement .                       (rule 144)

	decimalnum     reduce using rule 144
	"exponent"     reduce using rule 144
	int            reduce using rule 144
	uint           reduce using rule 144
	bytes          reduce using rule 144
	fixed          reduce using rule 144
	ufixed         reduce using rule 144
	"string"       reduce using rule 144
	"address"      reduce using rule 144
	"bool"         reduce using rule 144
	"do"           reduce using rule 144
	"_"            reduce using rule 144
	"continue"     reduce using rule 144
	"break"        reduce using rule 144
	"return"       reduce using rule 144
	"throw"        reduce using rule 144
	"var"          reduce using rule 144
	"for"          reduce using rule 144
	"true"         reduce using rule 144
	"false"        reduce using rule 144
	"if"           reduce using rule 144
	"while"        reduce using rule 144
	"assembly"     reduce using rule 144
	"else"         reduce using rule 144
	"new"          reduce using rule 144
	"!"            reduce using rule 144
	"{"            reduce using rule 144
	"}"            reduce using rule 144
	ident          reduce using rule 144
	stringLiteral  reduce using rule 144
	"("            reduce using rule 144


State 323

	Statement -> ForStatement .                         (rule 145)

	decimalnum     reduce using rule 145
	"exponent"     reduce using rule 145
	int            reduce using rule 145
	uint           reduce using rule 145
	bytes          reduce using rule 145
	fixed          reduce using rule 145
	ufixed         reduce using rule 145
	"string"       reduce using rule 145
	"address"      reduce using rule 145
	"bool"         reduce using rule 145
	"do"           reduce using rule 145
	"_"            reduce using rule 145
	"continue"     reduce using rule 145
	"break"        reduce using rule 145
	"return"       reduce using rule 145
	"throw"        reduce using rule 145
	"var"          reduce using rule 145
	"for"          reduce using rule 145
	"true"         reduce using rule 145
	"false"        reduce using rule 145
	"if"           reduce using rule 145
	"while"        reduce using rule 145
	"assembly"     reduce using rule 145
	"else"         reduce using rule 145
	"new"          reduce using rule 145
	"!"            reduce using rule 145
	"{"            reduce using rule 145
	"}"            reduce using rule 145
	ident          reduce using rule 145
	stringLiteral  reduce using rule 145
	"("            reduce using rule 145


State 324

	Statement -> Block .                                (rule 146)

	decimalnum     reduce using rule 146
	"exponent"     reduce using rule 146
	int            reduce using rule 146
	uint           reduce using rule 146
	bytes          reduce using rule 146
	fixed          reduce using rule 146
	ufixed         reduce using rule 146
	"string"       reduce using rule 146
	"address"      reduce using rule 146
	"bool"         reduce using rule 146
	"do"           reduce using rule 146
	"_"            reduce using rule 146
	"continue"     reduce using rule 146
	"break"        reduce using rule 146
	"return"       reduce using rule 146
	"throw"        reduce using rule 146
	"var"          reduce using rule 146
	"for"          reduce using rule 146
	"true"         reduce using rule 146
	"false"        reduce using rule 146
	"if"           reduce using rule 146
	"while"        reduce using rule 146
	"assembly"     reduce using rule 146
	"else"         reduce using rule 146
	"new"          reduce using rule 146
	"!"            reduce using rule 146
	"{"            reduce using rule 146
	"}"            reduce using rule 146
	ident          reduce using rule 146
	stringLiteral  reduce using rule 146
	"("            reduce using rule 146


State 325

	Statement -> InlineAssemblyStatement .              (rule 147)

	decimalnum     reduce using rule 147
	"exponent"     reduce using rule 147
	int            reduce using rule 147
	uint           reduce using rule 147
	bytes          reduce using rule 147
	fixed          reduce using rule 147
	ufixed         reduce using rule 147
	"string"       reduce using rule 147
	"address"      reduce using rule 147
	"bool"         reduce using rule 147
	"do"           reduce using rule 147
	"_"            reduce using rule 147
	"continue"     reduce using rule 147
	"break"        reduce using rule 147
	"return"       reduce using rule 147
	"throw"        reduce using rule 147
	"var"          reduce using rule 147
	"for"          reduce using rule 147
	"true"         reduce using rule 147
	"false"        reduce using rule 147
	"if"           reduce using rule 147
	"while"        reduce using rule 147
	"assembly"     reduce using rule 147
	"else"         reduce using rule 147
	"new"          reduce using rule 147
	"!"            reduce using rule 147
	"{"            reduce using rule 147
	"}"            reduce using rule 147
	ident          reduce using rule 147
	stringLiteral  reduce using rule 147
	"("            reduce using rule 147


State 326

	Statement -> DoWhileStatement . ";"                 (rule 148)

	";"            shift, and enter state 394


State 327

	Statement -> PlaceholderStatement . ";"             (rule 149)

	";"            shift, and enter state 393


State 328

	Statement -> Continue . ";"                         (rule 150)

	";"            shift, and enter state 392


State 329

	Statement -> Break . ";"                            (rule 151)

	";"            shift, and enter state 391


State 330

	Statement -> Return . ";"                           (rule 152)

	";"            shift, and enter state 390


State 331

	Statement -> Throw . ";"                            (rule 153)

	";"            shift, and enter state 389


State 332

	Statement -> VariableDefinition .                   (rule 154)

	decimalnum     reduce using rule 154
	"exponent"     reduce using rule 154
	int            reduce using rule 154
	uint           reduce using rule 154
	bytes          reduce using rule 154
	fixed          reduce using rule 154
	ufixed         reduce using rule 154
	"string"       reduce using rule 154
	"address"      reduce using rule 154
	"bool"         reduce using rule 154
	"do"           reduce using rule 154
	"_"            reduce using rule 154
	"continue"     reduce using rule 154
	"break"        reduce using rule 154
	"return"       reduce using rule 154
	"throw"        reduce using rule 154
	"var"          reduce using rule 154
	"for"          reduce using rule 154
	"true"         reduce using rule 154
	"false"        reduce using rule 154
	"if"           reduce using rule 154
	"while"        reduce using rule 154
	"assembly"     reduce using rule 154
	"else"         reduce using rule 154
	"new"          reduce using rule 154
	"!"            reduce using rule 154
	"{"            reduce using rule 154
	"}"            reduce using rule 154
	ident          reduce using rule 154
	stringLiteral  reduce using rule 154
	"("            reduce using rule 154


State 333

	Block -> "{" list__Statement__ . "}"                (rule 161)

	"}"            shift, and enter state 388


State 334

	list__Statement__ -> list1__Statement__ .           (rule 247)

	"}"            reduce using rule 247


State 335

	DoWhileStatement -> "do" . Statement "while" "(" Expression ")"    (rule 172)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 387
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 336

	PlaceholderStatement -> "_" .                       (rule 173)

	";"            reduce using rule 173


State 337

	Continue -> "continue" .                            (rule 174)

	";"            reduce using rule 174


State 338

	Break -> "break" .                                  (rule 175)

	";"            reduce using rule 175


State 339

	Return -> "return" . zero__Expression__             (rule 176)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	";"            reduce using rule 262
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 116
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__Expression__goto state 386

State 340

	Throw -> "throw" .                                  (rule 177)

	";"            reduce using rule 177


State 341

	VariableDefinition -> "var" . IdentifierList        (rule 179)
	ElementaryTypeName -> "var" .                       (rule 196)

	"++"           reduce using rule 196
	"--"           reduce using rule 196
	"^"            reduce using rule 196
	"&&"           reduce using rule 196
	"&"            reduce using rule 196
	"||"           reduce using rule 196
	"|"            reduce using rule 196
	"!="           reduce using rule 196
	"<"            reduce using rule 196
	">"            reduce using rule 196
	">>"           reduce using rule 196
	"<<"           reduce using rule 196
	"<="           reduce using rule 196
	">="           reduce using rule 196
	"=="           reduce using rule 196
	"."            reduce using rule 196
	"="            reduce using rule 196
	"*"            reduce using rule 196
	"/"            reduce using rule 196
	"**"           reduce using rule 196
	"%"            reduce using rule 196
	"+"            reduce using rule 196
	"-"            reduce using rule 196
	";"            reduce using rule 196
	"|="           reduce using rule 196
	"^="           reduce using rule 196
	"&="           reduce using rule 196
	"<<="          reduce using rule 196
	">>="          reduce using rule 196
	"+="           reduce using rule 196
	"-="           reduce using rule 196
	"*="           reduce using rule 196
	"/="           reduce using rule 196
	"%="           reduce using rule 196
	"("            shift, and enter state 385
			(reduce using rule 196)


	IdentifierList goto state 384

State 342

	ForStatement -> "for" . "(" ForParams ")" Statement    (rule 159)

	"("            shift, and enter state 383


State 343

	IfStatement -> "if" . "(" Expression ")" Statement zero__ElseState__    (rule 156)

	"("            shift, and enter state 382


State 344

	WhileStatement -> "while" . "(" Expression ")" Statement    (rule 158)

	"("            shift, and enter state 381


State 345

	InlineAssemblyStatement -> "assembly" . zero__stringLiteral__ InlineAssemblyBlock    (rule 162)

	"{"            reduce using rule 312
	stringLiteral  shift, and enter state 380

	zero__stringLiteral__goto state 379

State 346

	EnumDefinition -> "enum" ident "{" EnumValList "}" .    (rule 57)

	int            reduce using rule 57
	uint           reduce using rule 57
	bytes          reduce using rule 57
	fixed          reduce using rule 57
	ufixed         reduce using rule 57
	"string"       reduce using rule 57
	function       reduce using rule 57
	"struct"       reduce using rule 57
	"address"      reduce using rule 57
	"bool"         reduce using rule 57
	"var"          reduce using rule 57
	"mapping"      reduce using rule 57
	"using"        reduce using rule 57
	"event"        reduce using rule 57
	"modifier"     reduce using rule 57
	"enum"         reduce using rule 57
	"}"            reduce using rule 57
	ident          reduce using rule 57
	nestedids      reduce using rule 57


State 347

	list1__MultiEnumValue__ -> MultiEnumValue .         (rule 339)
	list1__MultiEnumValue__ -> MultiEnumValue . list1__MultiEnumValue__    (rule 340)

	"}"            reduce using rule 339
	","            shift, and enter state 350

	MultiEnumValue goto state 347
	list1__MultiEnumValue__goto state 378

State 348

	EnumValList -> EnumValue list__MultiEnumValue__ .    (rule 59)

	"}"            reduce using rule 59


State 349

	list__MultiEnumValue__ -> list1__MultiEnumValue__ .    (rule 239)

	"}"            reduce using rule 239


State 350

	MultiEnumValue -> "," . EnumValue                   (rule 60)

	ident          shift, and enter state 227

	EnumValue      goto state 377

State 351

	zero__ParenthesisExpressionFollowup__ -> ParenthesisExpressionFollowup .    (rule 295)

	decimalnum     reduce using rule 295
	"exponent"     reduce using rule 295
	int            reduce using rule 295
	uint           reduce using rule 295
	bytes          reduce using rule 295
	fixed          reduce using rule 295
	ufixed         reduce using rule 295
	"string"       reduce using rule 295
	"address"      reduce using rule 295
	"bool"         reduce using rule 295
	"do"           reduce using rule 295
	"_"            reduce using rule 295
	"continue"     reduce using rule 295
	"break"        reduce using rule 295
	"return"       reduce using rule 295
	"throw"        reduce using rule 295
	"var"          reduce using rule 295
	"for"          reduce using rule 295
	"true"         reduce using rule 295
	"false"        reduce using rule 295
	"if"           reduce using rule 295
	"while"        reduce using rule 295
	"assembly"     reduce using rule 295
	"else"         reduce using rule 295
	"new"          reduce using rule 295
	"++"           reduce using rule 295
	"--"           reduce using rule 295
	"^"            reduce using rule 295
	"!"            reduce using rule 295
	"&&"           reduce using rule 295
	"&"            reduce using rule 295
	"||"           reduce using rule 295
	"|"            reduce using rule 295
	"!="           reduce using rule 295
	"<"            reduce using rule 295
	">"            reduce using rule 295
	">>"           reduce using rule 295
	"<<"           reduce using rule 295
	"<="           reduce using rule 295
	">="           reduce using rule 295
	"=="           reduce using rule 295
	"{"            reduce using rule 295
	"}"            reduce using rule 295
	"]"            reduce using rule 295
	"="            reduce using rule 295
	"*"            reduce using rule 295
	"/"            reduce using rule 295
	"**"           reduce using rule 295
	"%"            reduce using rule 295
	"+"            reduce using rule 295
	"-"            reduce using rule 295
	";"            reduce using rule 295
	","            reduce using rule 295
	"|="           reduce using rule 295
	"^="           reduce using rule 295
	"&="           reduce using rule 295
	"<<="          reduce using rule 295
	">>="          reduce using rule 295
	"+="           reduce using rule 295
	"-="           reduce using rule 295
	"*="           reduce using rule 295
	"/="           reduce using rule 295
	"%="           reduce using rule 295
	ident          reduce using rule 295
	stringLiteral  reduce using rule 295
	"("            reduce using rule 295
	")"            reduce using rule 295


State 352

	Expression -> "(" Expression ")" zero__ParenthesisExpressionFollowup__ .    (rule 88)

	decimalnum     reduce using rule 88
	"exponent"     reduce using rule 88
	int            reduce using rule 88
	uint           reduce using rule 88
	bytes          reduce using rule 88
	fixed          reduce using rule 88
	ufixed         reduce using rule 88
	"string"       reduce using rule 88
	"address"      reduce using rule 88
	"bool"         reduce using rule 88
	"do"           reduce using rule 88
	"_"            reduce using rule 88
	"continue"     reduce using rule 88
	"break"        reduce using rule 88
	"return"       reduce using rule 88
	"throw"        reduce using rule 88
	"var"          reduce using rule 88
	"for"          reduce using rule 88
	"true"         reduce using rule 88
	"false"        reduce using rule 88
	"if"           reduce using rule 88
	"while"        reduce using rule 88
	"assembly"     reduce using rule 88
	"else"         reduce using rule 88
	"new"          reduce using rule 88
	"++"           reduce using rule 88
	"--"           reduce using rule 88
	"^"            reduce using rule 88
	"!"            reduce using rule 88
	"&&"           reduce using rule 88
	"&"            reduce using rule 88
	"||"           reduce using rule 88
	"|"            reduce using rule 88
	"!="           reduce using rule 88
	"<"            reduce using rule 88
	">"            reduce using rule 88
	">>"           reduce using rule 88
	"<<"           reduce using rule 88
	"<="           reduce using rule 88
	">="           reduce using rule 88
	"=="           reduce using rule 88
	"{"            reduce using rule 88
	"}"            reduce using rule 88
	"]"            reduce using rule 88
	"="            reduce using rule 88
	"*"            reduce using rule 88
	"/"            reduce using rule 88
	"**"           reduce using rule 88
	"%"            reduce using rule 88
	"+"            reduce using rule 88
	"-"            reduce using rule 88
	";"            reduce using rule 88
	","            reduce using rule 88
	"|="           reduce using rule 88
	"^="           reduce using rule 88
	"&="           reduce using rule 88
	"<<="          reduce using rule 88
	">>="          reduce using rule 88
	"+="           reduce using rule 88
	"-="           reduce using rule 88
	"*="           reduce using rule 88
	"/="           reduce using rule 88
	"%="           reduce using rule 88
	ident          reduce using rule 88
	stringLiteral  reduce using rule 88
	"("            reduce using rule 88
	")"            reduce using rule 88


State 353

	ParenthesisExpressionFollowup -> "[" . Expression "]"    (rule 121)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 376
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 354

	ParenthesisExpressionFollowup -> "." . TermExpression    (rule 122)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96

	Factor         goto state 83
	TermExpression goto state 375
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 355

	ParenthesisExpressionFollowup -> "(" . Expression ")"    (rule 123)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 374
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 356

	NestedCall -> "." TermExpression .                  (rule 132)

	decimalnum     reduce using rule 132
	"exponent"     reduce using rule 132
	int            reduce using rule 132
	uint           reduce using rule 132
	bytes          reduce using rule 132
	fixed          reduce using rule 132
	ufixed         reduce using rule 132
	"string"       reduce using rule 132
	"address"      reduce using rule 132
	"bool"         reduce using rule 132
	"do"           reduce using rule 132
	"_"            reduce using rule 132
	"continue"     reduce using rule 132
	"break"        reduce using rule 132
	"return"       reduce using rule 132
	"throw"        reduce using rule 132
	"var"          reduce using rule 132
	"for"          reduce using rule 132
	"true"         reduce using rule 132
	"false"        reduce using rule 132
	"if"           reduce using rule 132
	"while"        reduce using rule 132
	"assembly"     reduce using rule 132
	"else"         reduce using rule 132
	"new"          reduce using rule 132
	"++"           reduce using rule 132
	"--"           reduce using rule 132
	"^"            reduce using rule 132
	"!"            reduce using rule 132
	"&&"           reduce using rule 132
	"&"            reduce using rule 132
	"||"           reduce using rule 132
	"|"            reduce using rule 132
	"!="           reduce using rule 132
	"<"            reduce using rule 132
	">"            reduce using rule 132
	">>"           reduce using rule 132
	"<<"           reduce using rule 132
	"<="           reduce using rule 132
	">="           reduce using rule 132
	"=="           reduce using rule 132
	"{"            reduce using rule 132
	"}"            reduce using rule 132
	"]"            reduce using rule 132
	"="            reduce using rule 132
	"*"            reduce using rule 132
	"/"            reduce using rule 132
	"**"           reduce using rule 132
	"%"            reduce using rule 132
	"+"            reduce using rule 132
	"-"            reduce using rule 132
	";"            reduce using rule 132
	","            reduce using rule 132
	"|="           reduce using rule 132
	"^="           reduce using rule 132
	"&="           reduce using rule 132
	"<<="          reduce using rule 132
	">>="          reduce using rule 132
	"+="           reduce using rule 132
	"-="           reduce using rule 132
	"*="           reduce using rule 132
	"/="           reduce using rule 132
	"%="           reduce using rule 132
	ident          reduce using rule 132
	stringLiteral  reduce using rule 132
	"("            reduce using rule 132
	")"            reduce using rule 132


State 357

	zero__NameValueList__ -> NameValueList .            (rule 283)

	"}"            reduce using rule 283


State 358

	NameValueList -> NameVal . list__NameValueList_Lst__    (rule 140)

	"}"            reduce using rule 242
	","            shift, and enter state 373

	NameValueList_Lstgoto state 370
	list__NameValueList_Lst__goto state 371
	list1__NameValueList_Lst__goto state 372

State 359

	FunctionCallArgs -> "{" zero__NameValueList__ . "}"    (rule 138)

	"}"            shift, and enter state 369


State 360

	NameVal -> ident . ":" Expression                   (rule 142)

	":"            shift, and enter state 368


State 361

	OptionalFunctionCall -> "(" FunctionCallArgs ")" .    (rule 136)

	decimalnum     reduce using rule 136
	"exponent"     reduce using rule 136
	int            reduce using rule 136
	uint           reduce using rule 136
	bytes          reduce using rule 136
	fixed          reduce using rule 136
	ufixed         reduce using rule 136
	"string"       reduce using rule 136
	"address"      reduce using rule 136
	"bool"         reduce using rule 136
	"do"           reduce using rule 136
	"_"            reduce using rule 136
	"continue"     reduce using rule 136
	"break"        reduce using rule 136
	"return"       reduce using rule 136
	"throw"        reduce using rule 136
	"var"          reduce using rule 136
	"for"          reduce using rule 136
	"true"         reduce using rule 136
	"false"        reduce using rule 136
	"if"           reduce using rule 136
	"while"        reduce using rule 136
	"assembly"     reduce using rule 136
	"else"         reduce using rule 136
	"new"          reduce using rule 136
	"++"           reduce using rule 136
	"--"           reduce using rule 136
	"^"            reduce using rule 136
	"!"            reduce using rule 136
	"&&"           reduce using rule 136
	"&"            reduce using rule 136
	"||"           reduce using rule 136
	"|"            reduce using rule 136
	"!="           reduce using rule 136
	"<"            reduce using rule 136
	">"            reduce using rule 136
	">>"           reduce using rule 136
	"<<"           reduce using rule 136
	"<="           reduce using rule 136
	">="           reduce using rule 136
	"=="           reduce using rule 136
	"{"            reduce using rule 136
	"}"            reduce using rule 136
	"]"            reduce using rule 136
	"."            reduce using rule 136
	"="            reduce using rule 136
	"*"            reduce using rule 136
	"/"            reduce using rule 136
	"**"           reduce using rule 136
	"%"            reduce using rule 136
	"+"            reduce using rule 136
	"-"            reduce using rule 136
	";"            reduce using rule 136
	","            reduce using rule 136
	"|="           reduce using rule 136
	"^="           reduce using rule 136
	"&="           reduce using rule 136
	"<<="          reduce using rule 136
	">>="          reduce using rule 136
	"+="           reduce using rule 136
	"-="           reduce using rule 136
	"*="           reduce using rule 136
	"/="           reduce using rule 136
	"%="           reduce using rule 136
	ident          reduce using rule 136
	stringLiteral  reduce using rule 136
	"("            reduce using rule 136
	")"            reduce using rule 136


State 362

	list1__ExprList__ -> ExprList .                     (rule 323)
	list1__ExprList__ -> ExprList . list1__ExprList__    (rule 324)

	","            shift, and enter state 365
	")"            reduce using rule 323

	ExprList       goto state 362
	list1__ExprList__goto state 367

State 363

	ExpressionList -> Expression list__ExprList__ .     (rule 84)

	")"            reduce using rule 84


State 364

	list__ExprList__ -> list1__ExprList__ .             (rule 223)

	")"            reduce using rule 223


State 365

	ExprList -> "," . Expression                        (rule 85)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 366
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 366

	ExprList -> "," Expression .                        (rule 85)
	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	","            reduce using rule 85
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            reduce using rule 85


State 367

	list1__ExprList__ -> ExprList list1__ExprList__ .    (rule 324)

	")"            reduce using rule 324


State 368

	NameVal -> ident ":" . Expression                   (rule 142)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 447
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 369

	FunctionCallArgs -> "{" zero__NameValueList__ "}" .    (rule 138)

	")"            reduce using rule 138


State 370

	list1__NameValueList_Lst__ -> NameValueList_Lst .    (rule 341)
	list1__NameValueList_Lst__ -> NameValueList_Lst . list1__NameValueList_Lst__    (rule 342)

	"}"            reduce using rule 341
	","            shift, and enter state 373

	NameValueList_Lstgoto state 370
	list1__NameValueList_Lst__goto state 446

State 371

	NameValueList -> NameVal list__NameValueList_Lst__ .    (rule 140)

	"}"            reduce using rule 140


State 372

	list__NameValueList_Lst__ -> list1__NameValueList_Lst__ .    (rule 241)

	"}"            reduce using rule 241


State 373

	NameValueList_Lst -> "," . NameVal                  (rule 141)

	ident          shift, and enter state 360

	NameVal        goto state 445

State 374

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	ParenthesisExpressionFollowup -> "(" Expression . ")"    (rule 123)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            shift, and enter state 444


State 375

	ParenthesisExpressionFollowup -> "." TermExpression .    (rule 122)

	decimalnum     reduce using rule 122
	"exponent"     reduce using rule 122
	int            reduce using rule 122
	uint           reduce using rule 122
	bytes          reduce using rule 122
	fixed          reduce using rule 122
	ufixed         reduce using rule 122
	"string"       reduce using rule 122
	"address"      reduce using rule 122
	"bool"         reduce using rule 122
	"do"           reduce using rule 122
	"_"            reduce using rule 122
	"continue"     reduce using rule 122
	"break"        reduce using rule 122
	"return"       reduce using rule 122
	"throw"        reduce using rule 122
	"var"          reduce using rule 122
	"for"          reduce using rule 122
	"true"         reduce using rule 122
	"false"        reduce using rule 122
	"if"           reduce using rule 122
	"while"        reduce using rule 122
	"assembly"     reduce using rule 122
	"else"         reduce using rule 122
	"new"          reduce using rule 122
	"++"           reduce using rule 122
	"--"           reduce using rule 122
	"^"            reduce using rule 122
	"!"            reduce using rule 122
	"&&"           reduce using rule 122
	"&"            reduce using rule 122
	"||"           reduce using rule 122
	"|"            reduce using rule 122
	"!="           reduce using rule 122
	"<"            reduce using rule 122
	">"            reduce using rule 122
	">>"           reduce using rule 122
	"<<"           reduce using rule 122
	"<="           reduce using rule 122
	">="           reduce using rule 122
	"=="           reduce using rule 122
	"{"            reduce using rule 122
	"}"            reduce using rule 122
	"]"            reduce using rule 122
	"="            reduce using rule 122
	"*"            reduce using rule 122
	"/"            reduce using rule 122
	"**"           reduce using rule 122
	"%"            reduce using rule 122
	"+"            reduce using rule 122
	"-"            reduce using rule 122
	";"            reduce using rule 122
	","            reduce using rule 122
	"|="           reduce using rule 122
	"^="           reduce using rule 122
	"&="           reduce using rule 122
	"<<="          reduce using rule 122
	">>="          reduce using rule 122
	"+="           reduce using rule 122
	"-="           reduce using rule 122
	"*="           reduce using rule 122
	"/="           reduce using rule 122
	"%="           reduce using rule 122
	ident          reduce using rule 122
	stringLiteral  reduce using rule 122
	"("            reduce using rule 122
	")"            reduce using rule 122


State 376

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	ParenthesisExpressionFollowup -> "[" Expression . "]"    (rule 121)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"]"            shift, and enter state 443
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182


State 377

	MultiEnumValue -> "," EnumValue .                   (rule 60)

	"}"            reduce using rule 60
	","            reduce using rule 60


State 378

	list1__MultiEnumValue__ -> MultiEnumValue list1__MultiEnumValue__ .    (rule 340)

	"}"            reduce using rule 340


State 379

	InlineAssemblyStatement -> "assembly" zero__stringLiteral__ . InlineAssemblyBlock    (rule 162)

	"{"            shift, and enter state 442

	InlineAssemblyBlockgoto state 441

State 380

	zero__stringLiteral__ -> stringLiteral .            (rule 311)

	"{"            reduce using rule 311


State 381

	WhileStatement -> "while" "(" . Expression ")" Statement    (rule 158)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 440
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 382

	IfStatement -> "if" "(" . Expression ")" Statement zero__ElseState__    (rule 156)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 439
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 383

	ForStatement -> "for" "(" . ForParams ")" Statement    (rule 159)

	"var"          shift, and enter state 438
	";"            reduce using rule 300

	ForParams      goto state 434
	SimpleStatementgoto state 435
	VariableDefinitiongoto state 436
	zero__SimpleStatement__goto state 437

State 384

	VariableDefinition -> "var" IdentifierList .        (rule 179)

	decimalnum     reduce using rule 179
	"exponent"     reduce using rule 179
	int            reduce using rule 179
	uint           reduce using rule 179
	bytes          reduce using rule 179
	fixed          reduce using rule 179
	ufixed         reduce using rule 179
	"string"       reduce using rule 179
	"address"      reduce using rule 179
	"bool"         reduce using rule 179
	"do"           reduce using rule 179
	"_"            reduce using rule 179
	"continue"     reduce using rule 179
	"break"        reduce using rule 179
	"return"       reduce using rule 179
	"throw"        reduce using rule 179
	"var"          reduce using rule 179
	"for"          reduce using rule 179
	"true"         reduce using rule 179
	"false"        reduce using rule 179
	"if"           reduce using rule 179
	"while"        reduce using rule 179
	"assembly"     reduce using rule 179
	"else"         reduce using rule 179
	"new"          reduce using rule 179
	"!"            reduce using rule 179
	"{"            reduce using rule 179
	"}"            reduce using rule 179
	";"            reduce using rule 179
	ident          reduce using rule 179
	stringLiteral  reduce using rule 179
	"("            reduce using rule 179


State 385

	IdentifierList -> "(" . list__IdentList__ zero__IdentVar__ ")" zero__VarMExp__    (rule 182)

	","            reduce using rule 270
	ident          shift, and enter state 433
			(reduce using rule 234)

	")"            reduce using rule 234

	IdentList      goto state 428
	IdentVar       goto state 429
	list__IdentList__goto state 430
	zero__IdentVar__goto state 431
	list1__IdentList__goto state 432

State 386

	Return -> "return" zero__Expression__ .             (rule 176)

	";"            reduce using rule 176


State 387

	DoWhileStatement -> "do" Statement . "while" "(" Expression ")"    (rule 172)

	"while"        shift, and enter state 427


State 388

	Block -> "{" list__Statement__ "}" .                (rule 161)

	decimalnum     reduce using rule 161
	"exponent"     reduce using rule 161
	int            reduce using rule 161
	uint           reduce using rule 161
	bytes          reduce using rule 161
	fixed          reduce using rule 161
	ufixed         reduce using rule 161
	"string"       reduce using rule 161
	function       reduce using rule 161
	"struct"       reduce using rule 161
	"address"      reduce using rule 161
	"bool"         reduce using rule 161
	"do"           reduce using rule 161
	"_"            reduce using rule 161
	"continue"     reduce using rule 161
	"break"        reduce using rule 161
	"return"       reduce using rule 161
	"throw"        reduce using rule 161
	"var"          reduce using rule 161
	"mapping"      reduce using rule 161
	"using"        reduce using rule 161
	"for"          reduce using rule 161
	"true"         reduce using rule 161
	"false"        reduce using rule 161
	"if"           reduce using rule 161
	"while"        reduce using rule 161
	"assembly"     reduce using rule 161
	"else"         reduce using rule 161
	"event"        reduce using rule 161
	"modifier"     reduce using rule 161
	"enum"         reduce using rule 161
	"new"          reduce using rule 161
	"!"            reduce using rule 161
	"{"            reduce using rule 161
	"}"            reduce using rule 161
	ident          reduce using rule 161
	nestedids      reduce using rule 161
	stringLiteral  reduce using rule 161
	"("            reduce using rule 161


State 389

	Statement -> Throw ";" .                            (rule 153)

	decimalnum     reduce using rule 153
	"exponent"     reduce using rule 153
	int            reduce using rule 153
	uint           reduce using rule 153
	bytes          reduce using rule 153
	fixed          reduce using rule 153
	ufixed         reduce using rule 153
	"string"       reduce using rule 153
	"address"      reduce using rule 153
	"bool"         reduce using rule 153
	"do"           reduce using rule 153
	"_"            reduce using rule 153
	"continue"     reduce using rule 153
	"break"        reduce using rule 153
	"return"       reduce using rule 153
	"throw"        reduce using rule 153
	"var"          reduce using rule 153
	"for"          reduce using rule 153
	"true"         reduce using rule 153
	"false"        reduce using rule 153
	"if"           reduce using rule 153
	"while"        reduce using rule 153
	"assembly"     reduce using rule 153
	"else"         reduce using rule 153
	"new"          reduce using rule 153
	"!"            reduce using rule 153
	"{"            reduce using rule 153
	"}"            reduce using rule 153
	ident          reduce using rule 153
	stringLiteral  reduce using rule 153
	"("            reduce using rule 153


State 390

	Statement -> Return ";" .                           (rule 152)

	decimalnum     reduce using rule 152
	"exponent"     reduce using rule 152
	int            reduce using rule 152
	uint           reduce using rule 152
	bytes          reduce using rule 152
	fixed          reduce using rule 152
	ufixed         reduce using rule 152
	"string"       reduce using rule 152
	"address"      reduce using rule 152
	"bool"         reduce using rule 152
	"do"           reduce using rule 152
	"_"            reduce using rule 152
	"continue"     reduce using rule 152
	"break"        reduce using rule 152
	"return"       reduce using rule 152
	"throw"        reduce using rule 152
	"var"          reduce using rule 152
	"for"          reduce using rule 152
	"true"         reduce using rule 152
	"false"        reduce using rule 152
	"if"           reduce using rule 152
	"while"        reduce using rule 152
	"assembly"     reduce using rule 152
	"else"         reduce using rule 152
	"new"          reduce using rule 152
	"!"            reduce using rule 152
	"{"            reduce using rule 152
	"}"            reduce using rule 152
	ident          reduce using rule 152
	stringLiteral  reduce using rule 152
	"("            reduce using rule 152


State 391

	Statement -> Break ";" .                            (rule 151)

	decimalnum     reduce using rule 151
	"exponent"     reduce using rule 151
	int            reduce using rule 151
	uint           reduce using rule 151
	bytes          reduce using rule 151
	fixed          reduce using rule 151
	ufixed         reduce using rule 151
	"string"       reduce using rule 151
	"address"      reduce using rule 151
	"bool"         reduce using rule 151
	"do"           reduce using rule 151
	"_"            reduce using rule 151
	"continue"     reduce using rule 151
	"break"        reduce using rule 151
	"return"       reduce using rule 151
	"throw"        reduce using rule 151
	"var"          reduce using rule 151
	"for"          reduce using rule 151
	"true"         reduce using rule 151
	"false"        reduce using rule 151
	"if"           reduce using rule 151
	"while"        reduce using rule 151
	"assembly"     reduce using rule 151
	"else"         reduce using rule 151
	"new"          reduce using rule 151
	"!"            reduce using rule 151
	"{"            reduce using rule 151
	"}"            reduce using rule 151
	ident          reduce using rule 151
	stringLiteral  reduce using rule 151
	"("            reduce using rule 151


State 392

	Statement -> Continue ";" .                         (rule 150)

	decimalnum     reduce using rule 150
	"exponent"     reduce using rule 150
	int            reduce using rule 150
	uint           reduce using rule 150
	bytes          reduce using rule 150
	fixed          reduce using rule 150
	ufixed         reduce using rule 150
	"string"       reduce using rule 150
	"address"      reduce using rule 150
	"bool"         reduce using rule 150
	"do"           reduce using rule 150
	"_"            reduce using rule 150
	"continue"     reduce using rule 150
	"break"        reduce using rule 150
	"return"       reduce using rule 150
	"throw"        reduce using rule 150
	"var"          reduce using rule 150
	"for"          reduce using rule 150
	"true"         reduce using rule 150
	"false"        reduce using rule 150
	"if"           reduce using rule 150
	"while"        reduce using rule 150
	"assembly"     reduce using rule 150
	"else"         reduce using rule 150
	"new"          reduce using rule 150
	"!"            reduce using rule 150
	"{"            reduce using rule 150
	"}"            reduce using rule 150
	ident          reduce using rule 150
	stringLiteral  reduce using rule 150
	"("            reduce using rule 150


State 393

	Statement -> PlaceholderStatement ";" .             (rule 149)

	decimalnum     reduce using rule 149
	"exponent"     reduce using rule 149
	int            reduce using rule 149
	uint           reduce using rule 149
	bytes          reduce using rule 149
	fixed          reduce using rule 149
	ufixed         reduce using rule 149
	"string"       reduce using rule 149
	"address"      reduce using rule 149
	"bool"         reduce using rule 149
	"do"           reduce using rule 149
	"_"            reduce using rule 149
	"continue"     reduce using rule 149
	"break"        reduce using rule 149
	"return"       reduce using rule 149
	"throw"        reduce using rule 149
	"var"          reduce using rule 149
	"for"          reduce using rule 149
	"true"         reduce using rule 149
	"false"        reduce using rule 149
	"if"           reduce using rule 149
	"while"        reduce using rule 149
	"assembly"     reduce using rule 149
	"else"         reduce using rule 149
	"new"          reduce using rule 149
	"!"            reduce using rule 149
	"{"            reduce using rule 149
	"}"            reduce using rule 149
	ident          reduce using rule 149
	stringLiteral  reduce using rule 149
	"("            reduce using rule 149


State 394

	Statement -> DoWhileStatement ";" .                 (rule 148)

	decimalnum     reduce using rule 148
	"exponent"     reduce using rule 148
	int            reduce using rule 148
	uint           reduce using rule 148
	bytes          reduce using rule 148
	fixed          reduce using rule 148
	ufixed         reduce using rule 148
	"string"       reduce using rule 148
	"address"      reduce using rule 148
	"bool"         reduce using rule 148
	"do"           reduce using rule 148
	"_"            reduce using rule 148
	"continue"     reduce using rule 148
	"break"        reduce using rule 148
	"return"       reduce using rule 148
	"throw"        reduce using rule 148
	"var"          reduce using rule 148
	"for"          reduce using rule 148
	"true"         reduce using rule 148
	"false"        reduce using rule 148
	"if"           reduce using rule 148
	"while"        reduce using rule 148
	"assembly"     reduce using rule 148
	"else"         reduce using rule 148
	"new"          reduce using rule 148
	"!"            reduce using rule 148
	"{"            reduce using rule 148
	"}"            reduce using rule 148
	ident          reduce using rule 148
	stringLiteral  reduce using rule 148
	"("            reduce using rule 148


State 395

	list1__Statement__ -> Statement list1__Statement__ .    (rule 348)

	"}"            reduce using rule 348


State 396

	Statement -> Expression ";" .                       (rule 155)

	decimalnum     reduce using rule 155
	"exponent"     reduce using rule 155
	int            reduce using rule 155
	uint           reduce using rule 155
	bytes          reduce using rule 155
	fixed          reduce using rule 155
	ufixed         reduce using rule 155
	"string"       reduce using rule 155
	"address"      reduce using rule 155
	"bool"         reduce using rule 155
	"do"           reduce using rule 155
	"_"            reduce using rule 155
	"continue"     reduce using rule 155
	"break"        reduce using rule 155
	"return"       reduce using rule 155
	"throw"        reduce using rule 155
	"var"          reduce using rule 155
	"for"          reduce using rule 155
	"true"         reduce using rule 155
	"false"        reduce using rule 155
	"if"           reduce using rule 155
	"while"        reduce using rule 155
	"assembly"     reduce using rule 155
	"else"         reduce using rule 155
	"new"          reduce using rule 155
	"!"            reduce using rule 155
	"{"            reduce using rule 155
	"}"            reduce using rule 155
	ident          reduce using rule 155
	stringLiteral  reduce using rule 155
	"("            reduce using rule 155


State 397

	EParamList -> "," EParameters .                     (rule 46)

	","            reduce using rule 46
	")"            reduce using rule 46


State 398

	list1__EParamList__ -> EParamList list1__EParamList__ .    (rule 322)

	")"            reduce using rule 322


State 399

	EParameters -> TypeName zero__Indexed__ "from" .    (rule 48)

	","            reduce using rule 48
	")"            reduce using rule 48


State 400

	EParameters -> TypeName zero__Indexed__ ident .     (rule 47)

	","            reduce using rule 47
	")"            reduce using rule 47


State 401

	Mapping -> "mapping" "(" ElementaryTypeName "=>" TypeName ")" .    (rule 203)

	int            reduce using rule 203
	uint           reduce using rule 203
	bytes          reduce using rule 203
	fixed          reduce using rule 203
	ufixed         reduce using rule 203
	"public"       reduce using rule 203
	"internal"     reduce using rule 203
	"private"      reduce using rule 203
	"constant"     reduce using rule 203
	"string"       reduce using rule 203
	function       reduce using rule 203
	"address"      reduce using rule 203
	"bool"         reduce using rule 203
	"var"          reduce using rule 203
	"mapping"      reduce using rule 203
	"indexed"      reduce using rule 203
	"memory"       reduce using rule 203
	"storage"      reduce using rule 203
	"["            reduce using rule 203
	";"            reduce using rule 203
	","            reduce using rule 203
	"from"         reduce using rule 203
	ident          reduce using rule 203
	nestedids      reduce using rule 203
	")"            reduce using rule 203


State 402

	list1__StructValue__ -> StructValue list1__StructValue__ .    (rule 350)

	"}"            reduce using rule 350


State 403

	VariableDeclaration -> TypeName zero__StorageLocation__ ident . zero__VarMExp__    (rule 180)

	"="            shift, and enter state 426
	";"            reduce using rule 306

	VarMExp        goto state 424
	zero__VarMExp__goto state 425

State 404

	ParamList -> "," Parameter .                        (rule 33)

	","            reduce using rule 33
	")"            reduce using rule 33


State 405

	list1__ParamList__ -> ParamList list1__ParamList__ .    (rule 346)

	")"            reduce using rule 346


State 406

	zero__ParamIdent__ -> ParamIdent .                  (rule 289)

	","            reduce using rule 289
	")"            reduce using rule 289


State 407

	Parameter -> TypeName zero__StorageLocation__ zero__ParamIdent__ .    (rule 34)

	","            reduce using rule 34
	")"            reduce using rule 34


State 408

	ParamIdent -> "from" .                              (rule 36)

	","            reduce using rule 36
	")"            reduce using rule 36


State 409

	ParamIdent -> ident .                               (rule 35)

	","            reduce using rule 35
	")"            reduce using rule 35


State 410

	FunctionDefinition -> function ident ParameterList list__FuncMods__ zero__ReturnParam__ TermBlock .    (rule 29)

	int            reduce using rule 29
	uint           reduce using rule 29
	bytes          reduce using rule 29
	fixed          reduce using rule 29
	ufixed         reduce using rule 29
	"string"       reduce using rule 29
	function       reduce using rule 29
	"struct"       reduce using rule 29
	"address"      reduce using rule 29
	"bool"         reduce using rule 29
	"var"          reduce using rule 29
	"mapping"      reduce using rule 29
	"using"        reduce using rule 29
	"event"        reduce using rule 29
	"modifier"     reduce using rule 29
	"enum"         reduce using rule 29
	"}"            reduce using rule 29
	ident          reduce using rule 29
	nestedids      reduce using rule 29


State 411

	TermBlock -> Block .                                (rule 42)

	int            reduce using rule 42
	uint           reduce using rule 42
	bytes          reduce using rule 42
	fixed          reduce using rule 42
	ufixed         reduce using rule 42
	"string"       reduce using rule 42
	function       reduce using rule 42
	"struct"       reduce using rule 42
	"address"      reduce using rule 42
	"bool"         reduce using rule 42
	"var"          reduce using rule 42
	"mapping"      reduce using rule 42
	"using"        reduce using rule 42
	"event"        reduce using rule 42
	"modifier"     reduce using rule 42
	"enum"         reduce using rule 42
	"}"            reduce using rule 42
	ident          reduce using rule 42
	nestedids      reduce using rule 42


State 412

	TermBlock -> ";" .                                  (rule 41)

	int            reduce using rule 41
	uint           reduce using rule 41
	bytes          reduce using rule 41
	fixed          reduce using rule 41
	ufixed         reduce using rule 41
	"string"       reduce using rule 41
	function       reduce using rule 41
	"struct"       reduce using rule 41
	"address"      reduce using rule 41
	"bool"         reduce using rule 41
	"var"          reduce using rule 41
	"mapping"      reduce using rule 41
	"using"        reduce using rule 41
	"event"        reduce using rule 41
	"modifier"     reduce using rule 41
	"enum"         reduce using rule 41
	"}"            reduce using rule 41
	ident          reduce using rule 41
	nestedids      reduce using rule 41


State 413

	zero__ModExpList__ -> ModExpList .                  (rule 281)

	")"            reduce using rule 281


State 414

	ModExpList -> ExpressionList .                      (rule 56)

	")"            reduce using rule 56


State 415

	ZOModExpList -> "(" zero__ModExpList__ . ")"        (rule 55)

	")"            shift, and enter state 423


State 416

	ReturnParam -> "returns" ParameterList .            (rule 40)

	"{"            reduce using rule 40
	";"            reduce using rule 40


State 417

	FunctionDefinition -> function "(" ")" list__FuncMods__ zero__ReturnParam__ TermBlock .    (rule 30)

	int            reduce using rule 30
	uint           reduce using rule 30
	bytes          reduce using rule 30
	fixed          reduce using rule 30
	ufixed         reduce using rule 30
	"string"       reduce using rule 30
	function       reduce using rule 30
	"struct"       reduce using rule 30
	"address"      reduce using rule 30
	"bool"         reduce using rule 30
	"var"          reduce using rule 30
	"mapping"      reduce using rule 30
	"using"        reduce using rule 30
	"event"        reduce using rule 30
	"modifier"     reduce using rule 30
	"enum"         reduce using rule 30
	"}"            reduce using rule 30
	ident          reduce using rule 30
	nestedids      reduce using rule 30


State 418

	zero__FTNReturn__ -> FTNReturn .                    (rule 267)

	int            reduce using rule 267
	uint           reduce using rule 267
	bytes          reduce using rule 267
	fixed          reduce using rule 267
	ufixed         reduce using rule 267
	"public"       reduce using rule 267
	"internal"     reduce using rule 267
	"private"      reduce using rule 267
	"constant"     reduce using rule 267
	"string"       reduce using rule 267
	function       reduce using rule 267
	"address"      reduce using rule 267
	"bool"         reduce using rule 267
	"var"          reduce using rule 267
	"mapping"      reduce using rule 267
	"indexed"      reduce using rule 267
	"memory"       reduce using rule 267
	"storage"      reduce using rule 267
	"["            reduce using rule 267
	";"            reduce using rule 267
	","            reduce using rule 267
	"from"         reduce using rule 267
	ident          reduce using rule 267
	nestedids      reduce using rule 267
	")"            reduce using rule 267


State 419

	FunctionTypeName -> function "(" zero__FParameters__ ")" list__FTNParams__ zero__FTNReturn__ .    (rule 205)

	int            reduce using rule 205
	uint           reduce using rule 205
	bytes          reduce using rule 205
	fixed          reduce using rule 205
	ufixed         reduce using rule 205
	"public"       reduce using rule 205
	"internal"     reduce using rule 205
	"private"      reduce using rule 205
	"constant"     reduce using rule 205
	"string"       reduce using rule 205
	function       reduce using rule 205
	"address"      reduce using rule 205
	"bool"         reduce using rule 205
	"var"          reduce using rule 205
	"mapping"      reduce using rule 205
	"indexed"      reduce using rule 205
	"memory"       reduce using rule 205
	"storage"      reduce using rule 205
	"["            reduce using rule 205
	";"            reduce using rule 205
	","            reduce using rule 205
	"from"         reduce using rule 205
	ident          reduce using rule 205
	nestedids      reduce using rule 205
	")"            reduce using rule 205


State 420

	FTNReturn -> "returns" . "(" list__FParameters__ ")"    (rule 209)

	"("            shift, and enter state 422


State 421

	list1__FTNParams__ -> FTNParams list1__FTNParams__ .    (rule 330)

	int            reduce using rule 330
	uint           reduce using rule 330
	bytes          reduce using rule 330
	fixed          reduce using rule 330
	ufixed         reduce using rule 330
	"public"       reduce using rule 330
	"internal"     reduce using rule 330
	"private"      reduce using rule 330
	"constant"     reduce using rule 330
	"string"       reduce using rule 330
	function       reduce using rule 330
	"address"      reduce using rule 330
	"bool"         reduce using rule 330
	"var"          reduce using rule 330
	"mapping"      reduce using rule 330
	"indexed"      reduce using rule 330
	"returns"      reduce using rule 330
	"memory"       reduce using rule 330
	"storage"      reduce using rule 330
	"["            reduce using rule 330
	";"            reduce using rule 330
	","            reduce using rule 330
	"from"         reduce using rule 330
	ident          reduce using rule 330
	nestedids      reduce using rule 330
	")"            reduce using rule 330


State 422

	FTNReturn -> "returns" "(" . list__FParameters__ ")"    (rule 209)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            reduce using rule 228

	TypeName       goto state 120
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	FParameters    goto state 466
	FParam         goto state 122
	list__FParameters__goto state 467
	list1__FParameters__goto state 468

State 423

	ZOModExpList -> "(" zero__ModExpList__ ")" .        (rule 55)

	"external"     reduce using rule 55
	"public"       reduce using rule 55
	"internal"     reduce using rule 55
	"private"      reduce using rule 55
	"constant"     reduce using rule 55
	"view"         reduce using rule 55
	"pure"         reduce using rule 55
	"payable"      reduce using rule 55
	"returns"      reduce using rule 55
	"{"            reduce using rule 55
	";"            reduce using rule 55
	ident          reduce using rule 55


State 424

	zero__VarMExp__ -> VarMExp .                        (rule 305)

	decimalnum     reduce using rule 305
	"exponent"     reduce using rule 305
	int            reduce using rule 305
	uint           reduce using rule 305
	bytes          reduce using rule 305
	fixed          reduce using rule 305
	ufixed         reduce using rule 305
	"string"       reduce using rule 305
	"address"      reduce using rule 305
	"bool"         reduce using rule 305
	"do"           reduce using rule 305
	"_"            reduce using rule 305
	"continue"     reduce using rule 305
	"break"        reduce using rule 305
	"return"       reduce using rule 305
	"throw"        reduce using rule 305
	"var"          reduce using rule 305
	"for"          reduce using rule 305
	"true"         reduce using rule 305
	"false"        reduce using rule 305
	"if"           reduce using rule 305
	"while"        reduce using rule 305
	"assembly"     reduce using rule 305
	"else"         reduce using rule 305
	"new"          reduce using rule 305
	"!"            reduce using rule 305
	"{"            reduce using rule 305
	"}"            reduce using rule 305
	";"            reduce using rule 305
	ident          reduce using rule 305
	stringLiteral  reduce using rule 305
	"("            reduce using rule 305


State 425

	VariableDeclaration -> TypeName zero__StorageLocation__ ident zero__VarMExp__ .    (rule 180)

	";"            reduce using rule 180


State 426

	VarMExp -> "=" . Expression                         (rule 181)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 465
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 427

	DoWhileStatement -> "do" Statement "while" . "(" Expression ")"    (rule 172)

	"("            shift, and enter state 464


State 428

	list1__IdentList__ -> IdentList .                   (rule 333)
	list1__IdentList__ -> IdentList . list1__IdentList__    (rule 334)

	","            reduce using rule 270
	ident          shift, and enter state 433
			(reduce using rule 333)

	")"            reduce using rule 333

	IdentList      goto state 428
	IdentVar       goto state 429
	zero__IdentVar__goto state 431
	list1__IdentList__goto state 463

State 429

	zero__IdentVar__ -> IdentVar .                      (rule 269)

	","            reduce using rule 269
	")"            reduce using rule 269


State 430

	IdentifierList -> "(" list__IdentList__ . zero__IdentVar__ ")" zero__VarMExp__    (rule 182)

	ident          shift, and enter state 433
	")"            reduce using rule 270

	IdentVar       goto state 429
	zero__IdentVar__goto state 462

State 431

	IdentList -> zero__IdentVar__ . ","                 (rule 183)

	","            shift, and enter state 461


State 432

	list__IdentList__ -> list1__IdentList__ .           (rule 233)

	ident          reduce using rule 233
	")"            reduce using rule 233


State 433

	IdentVar -> ident .                                 (rule 184)

	","            reduce using rule 184
	")"            reduce using rule 184


State 434

	ForStatement -> "for" "(" ForParams . ")" Statement    (rule 159)

	")"            shift, and enter state 460


State 435

	zero__SimpleStatement__ -> SimpleStatement .        (rule 299)

	";"            reduce using rule 299


State 436

	SimpleStatement -> VariableDefinition .             (rule 178)

	";"            reduce using rule 178


State 437

	ForParams -> zero__SimpleStatement__ . ";" zero__Expression__ ";" zero__ExpressionList__    (rule 160)

	";"            shift, and enter state 459


State 438

	VariableDefinition -> "var" . IdentifierList        (rule 179)

	"("            shift, and enter state 385

	IdentifierList goto state 384

State 439

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	IfStatement -> "if" "(" Expression . ")" Statement zero__ElseState__    (rule 156)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            shift, and enter state 458


State 440

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	WhileStatement -> "while" "(" Expression . ")" Statement    (rule 158)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            shift, and enter state 457


State 441

	InlineAssemblyStatement -> "assembly" zero__stringLiteral__ InlineAssemblyBlock .    (rule 162)

	decimalnum     reduce using rule 162
	"exponent"     reduce using rule 162
	int            reduce using rule 162
	uint           reduce using rule 162
	bytes          reduce using rule 162
	fixed          reduce using rule 162
	ufixed         reduce using rule 162
	"string"       reduce using rule 162
	"address"      reduce using rule 162
	"bool"         reduce using rule 162
	"do"           reduce using rule 162
	"_"            reduce using rule 162
	"continue"     reduce using rule 162
	"break"        reduce using rule 162
	"return"       reduce using rule 162
	"throw"        reduce using rule 162
	"var"          reduce using rule 162
	"for"          reduce using rule 162
	"true"         reduce using rule 162
	"false"        reduce using rule 162
	"if"           reduce using rule 162
	"while"        reduce using rule 162
	"assembly"     reduce using rule 162
	"else"         reduce using rule 162
	"new"          reduce using rule 162
	"!"            reduce using rule 162
	"{"            reduce using rule 162
	"}"            reduce using rule 162
	ident          reduce using rule 162
	stringLiteral  reduce using rule 162
	"("            reduce using rule 162


State 442

	InlineAssemblyBlock -> "{" . list__AssemblyItem__ "}"    (rule 163)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	"let"          shift, and enter state 454
	"{"            shift, and enter state 442
	"}"            reduce using rule 216
	ident          shift, and enter state 455
	stringLiteral  shift, and enter state 456

	InlineAssemblyBlockgoto state 448
	AssemblyItem   goto state 449
	AssemblyLocalBindinggoto state 450
	NumberLiteral  goto state 451
	list__AssemblyItem__goto state 452
	list1__AssemblyItem__goto state 453

State 443

	ParenthesisExpressionFollowup -> "[" Expression "]" .    (rule 121)

	decimalnum     reduce using rule 121
	"exponent"     reduce using rule 121
	int            reduce using rule 121
	uint           reduce using rule 121
	bytes          reduce using rule 121
	fixed          reduce using rule 121
	ufixed         reduce using rule 121
	"string"       reduce using rule 121
	"address"      reduce using rule 121
	"bool"         reduce using rule 121
	"do"           reduce using rule 121
	"_"            reduce using rule 121
	"continue"     reduce using rule 121
	"break"        reduce using rule 121
	"return"       reduce using rule 121
	"throw"        reduce using rule 121
	"var"          reduce using rule 121
	"for"          reduce using rule 121
	"true"         reduce using rule 121
	"false"        reduce using rule 121
	"if"           reduce using rule 121
	"while"        reduce using rule 121
	"assembly"     reduce using rule 121
	"else"         reduce using rule 121
	"new"          reduce using rule 121
	"++"           reduce using rule 121
	"--"           reduce using rule 121
	"^"            reduce using rule 121
	"!"            reduce using rule 121
	"&&"           reduce using rule 121
	"&"            reduce using rule 121
	"||"           reduce using rule 121
	"|"            reduce using rule 121
	"!="           reduce using rule 121
	"<"            reduce using rule 121
	">"            reduce using rule 121
	">>"           reduce using rule 121
	"<<"           reduce using rule 121
	"<="           reduce using rule 121
	">="           reduce using rule 121
	"=="           reduce using rule 121
	"{"            reduce using rule 121
	"}"            reduce using rule 121
	"]"            reduce using rule 121
	"="            reduce using rule 121
	"*"            reduce using rule 121
	"/"            reduce using rule 121
	"**"           reduce using rule 121
	"%"            reduce using rule 121
	"+"            reduce using rule 121
	"-"            reduce using rule 121
	";"            reduce using rule 121
	","            reduce using rule 121
	"|="           reduce using rule 121
	"^="           reduce using rule 121
	"&="           reduce using rule 121
	"<<="          reduce using rule 121
	">>="          reduce using rule 121
	"+="           reduce using rule 121
	"-="           reduce using rule 121
	"*="           reduce using rule 121
	"/="           reduce using rule 121
	"%="           reduce using rule 121
	ident          reduce using rule 121
	stringLiteral  reduce using rule 121
	"("            reduce using rule 121
	")"            reduce using rule 121


State 444

	ParenthesisExpressionFollowup -> "(" Expression ")" .    (rule 123)

	decimalnum     reduce using rule 123
	"exponent"     reduce using rule 123
	int            reduce using rule 123
	uint           reduce using rule 123
	bytes          reduce using rule 123
	fixed          reduce using rule 123
	ufixed         reduce using rule 123
	"string"       reduce using rule 123
	"address"      reduce using rule 123
	"bool"         reduce using rule 123
	"do"           reduce using rule 123
	"_"            reduce using rule 123
	"continue"     reduce using rule 123
	"break"        reduce using rule 123
	"return"       reduce using rule 123
	"throw"        reduce using rule 123
	"var"          reduce using rule 123
	"for"          reduce using rule 123
	"true"         reduce using rule 123
	"false"        reduce using rule 123
	"if"           reduce using rule 123
	"while"        reduce using rule 123
	"assembly"     reduce using rule 123
	"else"         reduce using rule 123
	"new"          reduce using rule 123
	"++"           reduce using rule 123
	"--"           reduce using rule 123
	"^"            reduce using rule 123
	"!"            reduce using rule 123
	"&&"           reduce using rule 123
	"&"            reduce using rule 123
	"||"           reduce using rule 123
	"|"            reduce using rule 123
	"!="           reduce using rule 123
	"<"            reduce using rule 123
	">"            reduce using rule 123
	">>"           reduce using rule 123
	"<<"           reduce using rule 123
	"<="           reduce using rule 123
	">="           reduce using rule 123
	"=="           reduce using rule 123
	"{"            reduce using rule 123
	"}"            reduce using rule 123
	"]"            reduce using rule 123
	"="            reduce using rule 123
	"*"            reduce using rule 123
	"/"            reduce using rule 123
	"**"           reduce using rule 123
	"%"            reduce using rule 123
	"+"            reduce using rule 123
	"-"            reduce using rule 123
	";"            reduce using rule 123
	","            reduce using rule 123
	"|="           reduce using rule 123
	"^="           reduce using rule 123
	"&="           reduce using rule 123
	"<<="          reduce using rule 123
	">>="          reduce using rule 123
	"+="           reduce using rule 123
	"-="           reduce using rule 123
	"*="           reduce using rule 123
	"/="           reduce using rule 123
	"%="           reduce using rule 123
	ident          reduce using rule 123
	stringLiteral  reduce using rule 123
	"("            reduce using rule 123
	")"            reduce using rule 123


State 445

	NameValueList_Lst -> "," NameVal .                  (rule 141)

	"}"            reduce using rule 141
	","            reduce using rule 141


State 446

	list1__NameValueList_Lst__ -> NameValueList_Lst list1__NameValueList_Lst__ .    (rule 342)

	"}"            reduce using rule 342


State 447

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	NameVal -> ident ":" Expression .                   (rule 142)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"}"            reduce using rule 142
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	","            reduce using rule 142
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182


State 448

	AssemblyItem -> InlineAssemblyBlock .               (rule 165)

	decimalnum     reduce using rule 165
	"exponent"     reduce using rule 165
	"let"          reduce using rule 165
	"{"            reduce using rule 165
	"}"            reduce using rule 165
	","            reduce using rule 165
	ident          reduce using rule 165
	stringLiteral  reduce using rule 165
	")"            reduce using rule 165


State 449

	list1__AssemblyItem__ -> AssemblyItem .             (rule 315)
	list1__AssemblyItem__ -> AssemblyItem . list1__AssemblyItem__    (rule 316)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	"let"          shift, and enter state 454
	"{"            shift, and enter state 442
	"}"            reduce using rule 315
	ident          shift, and enter state 455
	stringLiteral  shift, and enter state 456

	InlineAssemblyBlockgoto state 448
	AssemblyItem   goto state 449
	AssemblyLocalBindinggoto state 450
	NumberLiteral  goto state 451
	list1__AssemblyItem__goto state 479

State 450

	AssemblyItem -> AssemblyLocalBinding .              (rule 166)

	decimalnum     reduce using rule 166
	"exponent"     reduce using rule 166
	"let"          reduce using rule 166
	"{"            reduce using rule 166
	"}"            reduce using rule 166
	","            reduce using rule 166
	ident          reduce using rule 166
	stringLiteral  reduce using rule 166
	")"            reduce using rule 166


State 451

	AssemblyItem -> NumberLiteral .                     (rule 167)

	decimalnum     reduce using rule 167
	"exponent"     reduce using rule 167
	"let"          reduce using rule 167
	"{"            reduce using rule 167
	"}"            reduce using rule 167
	","            reduce using rule 167
	ident          reduce using rule 167
	stringLiteral  reduce using rule 167
	")"            reduce using rule 167


State 452

	InlineAssemblyBlock -> "{" list__AssemblyItem__ . "}"    (rule 163)

	"}"            shift, and enter state 478


State 453

	list__AssemblyItem__ -> list1__AssemblyItem__ .     (rule 215)

	"}"            reduce using rule 215


State 454

	AssemblyLocalBinding -> "let" . ident ":=" FunctionalAssemblyExpression    (rule 169)

	ident          shift, and enter state 477


State 455

	AssemblyItem -> ident .                             (rule 164)

	decimalnum     reduce using rule 164
	"exponent"     reduce using rule 164
	"let"          reduce using rule 164
	"{"            reduce using rule 164
	"}"            reduce using rule 164
	","            reduce using rule 164
	ident          reduce using rule 164
	stringLiteral  reduce using rule 164
	")"            reduce using rule 164


State 456

	AssemblyItem -> stringLiteral .                     (rule 168)

	decimalnum     reduce using rule 168
	"exponent"     reduce using rule 168
	"let"          reduce using rule 168
	"{"            reduce using rule 168
	"}"            reduce using rule 168
	","            reduce using rule 168
	ident          reduce using rule 168
	stringLiteral  reduce using rule 168
	")"            reduce using rule 168


State 457

	WhileStatement -> "while" "(" Expression ")" . Statement    (rule 158)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 476
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 458

	IfStatement -> "if" "(" Expression ")" . Statement zero__ElseState__    (rule 156)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 475
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 459

	ForParams -> zero__SimpleStatement__ ";" . zero__Expression__ ";" zero__ExpressionList__    (rule 160)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	";"            reduce using rule 262
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 116
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__Expression__goto state 474

State 460

	ForStatement -> "for" "(" ForParams ")" . Statement    (rule 159)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 473
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 461

	IdentList -> zero__IdentVar__ "," .                 (rule 183)

	","            reduce using rule 183
	ident          reduce using rule 183
	")"            reduce using rule 183


State 462

	IdentifierList -> "(" list__IdentList__ zero__IdentVar__ . ")" zero__VarMExp__    (rule 182)

	")"            shift, and enter state 472


State 463

	list1__IdentList__ -> IdentList list1__IdentList__ .    (rule 334)

	ident          reduce using rule 334
	")"            reduce using rule 334


State 464

	DoWhileStatement -> "do" Statement "while" "(" . Expression ")"    (rule 172)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 471
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 465

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	VarMExp -> "=" Expression .                         (rule 181)

	decimalnum     reduce using rule 181
	"exponent"     reduce using rule 181
	int            reduce using rule 181
	uint           reduce using rule 181
	bytes          reduce using rule 181
	fixed          reduce using rule 181
	ufixed         reduce using rule 181
	"string"       reduce using rule 181
	"address"      reduce using rule 181
	"bool"         reduce using rule 181
	"do"           reduce using rule 181
	"_"            reduce using rule 181
	"continue"     reduce using rule 181
	"break"        reduce using rule 181
	"return"       reduce using rule 181
	"throw"        reduce using rule 181
	"var"          reduce using rule 181
	"for"          reduce using rule 181
	"true"         reduce using rule 181
	"false"        reduce using rule 181
	"if"           reduce using rule 181
	"while"        reduce using rule 181
	"assembly"     reduce using rule 181
	"else"         reduce using rule 181
	"new"          reduce using rule 181
	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"!"            reduce using rule 181
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"{"            reduce using rule 181
	"}"            reduce using rule 181
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	";"            reduce using rule 181
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	ident          reduce using rule 181
	stringLiteral  reduce using rule 181
	"("            reduce using rule 181


State 466

	list1__FParameters__ -> FParameters .               (rule 327)
	list1__FParameters__ -> FParameters . list1__FParameters__    (rule 328)

	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	function       shift, and enter state 124
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"mapping"      shift, and enter state 65
	ident          shift, and enter state 35
	nestedids      shift, and enter state 36
	")"            reduce using rule 327

	TypeName       goto state 120
	UserDefinedTypeNamegoto state 47
	ElementaryTypeNamegoto state 48
	Mapping        goto state 49
	ArrayTypeName  goto state 50
	FunctionTypeNamegoto state 51
	FParameters    goto state 466
	FParam         goto state 122
	list1__FParameters__goto state 470

State 467

	FTNReturn -> "returns" "(" list__FParameters__ . ")"    (rule 209)

	")"            shift, and enter state 469


State 468

	list__FParameters__ -> list1__FParameters__ .       (rule 227)

	")"            reduce using rule 227


State 469

	FTNReturn -> "returns" "(" list__FParameters__ ")" .    (rule 209)

	int            reduce using rule 209
	uint           reduce using rule 209
	bytes          reduce using rule 209
	fixed          reduce using rule 209
	ufixed         reduce using rule 209
	"public"       reduce using rule 209
	"internal"     reduce using rule 209
	"private"      reduce using rule 209
	"constant"     reduce using rule 209
	"string"       reduce using rule 209
	function       reduce using rule 209
	"address"      reduce using rule 209
	"bool"         reduce using rule 209
	"var"          reduce using rule 209
	"mapping"      reduce using rule 209
	"indexed"      reduce using rule 209
	"memory"       reduce using rule 209
	"storage"      reduce using rule 209
	"["            reduce using rule 209
	";"            reduce using rule 209
	","            reduce using rule 209
	"from"         reduce using rule 209
	ident          reduce using rule 209
	nestedids      reduce using rule 209
	")"            reduce using rule 209


State 470

	list1__FParameters__ -> FParameters list1__FParameters__ .    (rule 328)

	")"            reduce using rule 328


State 471

	Expression -> Expression . "++"                     (rule 86)
	Expression -> Expression . "--"                     (rule 87)
	Expression -> Expression . "**" Expression          (rule 90)
	Expression -> Expression . "*" Expression           (rule 91)
	Expression -> Expression . "/" Expression           (rule 92)
	Expression -> Expression . "%" Expression           (rule 93)
	Expression -> Expression . "+" Expression           (rule 94)
	Expression -> Expression . "-" Expression           (rule 95)
	Expression -> Expression . "<<" Expression          (rule 96)
	Expression -> Expression . ">>" Expression          (rule 97)
	Expression -> Expression . "&" Expression           (rule 98)
	Expression -> Expression . "^" Expression           (rule 99)
	Expression -> Expression . "|" Expression           (rule 100)
	Expression -> Expression . "<" Expression           (rule 101)
	Expression -> Expression . ">" Expression           (rule 102)
	Expression -> Expression . "<=" Expression          (rule 103)
	Expression -> Expression . ">=" Expression          (rule 104)
	Expression -> Expression . "==" Expression          (rule 105)
	Expression -> Expression . "!=" Expression          (rule 106)
	Expression -> Expression . "&&" Expression          (rule 107)
	Expression -> Expression . "||" Expression          (rule 108)
	Expression -> Expression . "=" Expression           (rule 109)
	Expression -> Expression . "|=" Expression          (rule 110)
	Expression -> Expression . "^=" Expression          (rule 111)
	Expression -> Expression . "&=" Expression          (rule 112)
	Expression -> Expression . "<<=" Expression         (rule 113)
	Expression -> Expression . ">>=" Expression         (rule 114)
	Expression -> Expression . "+=" Expression          (rule 115)
	Expression -> Expression . "-=" Expression          (rule 116)
	Expression -> Expression . "*=" Expression          (rule 117)
	Expression -> Expression . "/=" Expression          (rule 118)
	Expression -> Expression . "%=" Expression          (rule 119)
	DoWhileStatement -> "do" Statement "while" "(" Expression . ")"    (rule 172)

	"++"           shift, and enter state 150
	"--"           shift, and enter state 151
	"^"            shift, and enter state 152
	"&&"           shift, and enter state 153
	"&"            shift, and enter state 154
	"||"           shift, and enter state 155
	"|"            shift, and enter state 156
	"!="           shift, and enter state 157
	"<"            shift, and enter state 158
	">"            shift, and enter state 159
	">>"           shift, and enter state 160
	"<<"           shift, and enter state 161
	"<="           shift, and enter state 162
	">="           shift, and enter state 163
	"=="           shift, and enter state 164
	"="            shift, and enter state 165
	"*"            shift, and enter state 166
	"/"            shift, and enter state 167
	"**"           shift, and enter state 168
	"%"            shift, and enter state 169
	"+"            shift, and enter state 170
	"-"            shift, and enter state 171
	"|="           shift, and enter state 173
	"^="           shift, and enter state 174
	"&="           shift, and enter state 175
	"<<="          shift, and enter state 176
	">>="          shift, and enter state 177
	"+="           shift, and enter state 178
	"-="           shift, and enter state 179
	"*="           shift, and enter state 180
	"/="           shift, and enter state 181
	"%="           shift, and enter state 182
	")"            shift, and enter state 486


State 472

	IdentifierList -> "(" list__IdentList__ zero__IdentVar__ ")" . zero__VarMExp__    (rule 182)

	decimalnum     reduce using rule 306
	"exponent"     reduce using rule 306
	int            reduce using rule 306
	uint           reduce using rule 306
	bytes          reduce using rule 306
	fixed          reduce using rule 306
	ufixed         reduce using rule 306
	"string"       reduce using rule 306
	"address"      reduce using rule 306
	"bool"         reduce using rule 306
	"do"           reduce using rule 306
	"_"            reduce using rule 306
	"continue"     reduce using rule 306
	"break"        reduce using rule 306
	"return"       reduce using rule 306
	"throw"        reduce using rule 306
	"var"          reduce using rule 306
	"for"          reduce using rule 306
	"true"         reduce using rule 306
	"false"        reduce using rule 306
	"if"           reduce using rule 306
	"while"        reduce using rule 306
	"assembly"     reduce using rule 306
	"else"         reduce using rule 306
	"new"          reduce using rule 306
	"!"            reduce using rule 306
	"{"            reduce using rule 306
	"}"            reduce using rule 306
	"="            shift, and enter state 426
	";"            reduce using rule 306
	ident          reduce using rule 306
	stringLiteral  reduce using rule 306
	"("            reduce using rule 306

	VarMExp        goto state 424
	zero__VarMExp__goto state 485

State 473

	ForStatement -> "for" "(" ForParams ")" Statement .    (rule 159)

	decimalnum     reduce using rule 159
	"exponent"     reduce using rule 159
	int            reduce using rule 159
	uint           reduce using rule 159
	bytes          reduce using rule 159
	fixed          reduce using rule 159
	ufixed         reduce using rule 159
	"string"       reduce using rule 159
	"address"      reduce using rule 159
	"bool"         reduce using rule 159
	"do"           reduce using rule 159
	"_"            reduce using rule 159
	"continue"     reduce using rule 159
	"break"        reduce using rule 159
	"return"       reduce using rule 159
	"throw"        reduce using rule 159
	"var"          reduce using rule 159
	"for"          reduce using rule 159
	"true"         reduce using rule 159
	"false"        reduce using rule 159
	"if"           reduce using rule 159
	"while"        reduce using rule 159
	"assembly"     reduce using rule 159
	"else"         reduce using rule 159
	"new"          reduce using rule 159
	"!"            reduce using rule 159
	"{"            reduce using rule 159
	"}"            reduce using rule 159
	ident          reduce using rule 159
	stringLiteral  reduce using rule 159
	"("            reduce using rule 159


State 474

	ForParams -> zero__SimpleStatement__ ";" zero__Expression__ . ";" zero__ExpressionList__    (rule 160)

	";"            shift, and enter state 484


State 475

	IfStatement -> "if" "(" Expression ")" Statement . zero__ElseState__    (rule 156)

	decimalnum     reduce using rule 256
	"exponent"     reduce using rule 256
	int            reduce using rule 256
	uint           reduce using rule 256
	bytes          reduce using rule 256
	fixed          reduce using rule 256
	ufixed         reduce using rule 256
	"string"       reduce using rule 256
	"address"      reduce using rule 256
	"bool"         reduce using rule 256
	"do"           reduce using rule 256
	"_"            reduce using rule 256
	"continue"     reduce using rule 256
	"break"        reduce using rule 256
	"return"       reduce using rule 256
	"throw"        reduce using rule 256
	"var"          reduce using rule 256
	"for"          reduce using rule 256
	"true"         reduce using rule 256
	"false"        reduce using rule 256
	"if"           reduce using rule 256
	"while"        reduce using rule 256
	"assembly"     reduce using rule 256
	"else"         shift, and enter state 483
			(reduce using rule 256)

	"new"          reduce using rule 256
	"!"            reduce using rule 256
	"{"            reduce using rule 256
	"}"            reduce using rule 256
	ident          reduce using rule 256
	stringLiteral  reduce using rule 256
	"("            reduce using rule 256

	ElseState      goto state 481
	zero__ElseState__goto state 482

State 476

	WhileStatement -> "while" "(" Expression ")" Statement .    (rule 158)

	decimalnum     reduce using rule 158
	"exponent"     reduce using rule 158
	int            reduce using rule 158
	uint           reduce using rule 158
	bytes          reduce using rule 158
	fixed          reduce using rule 158
	ufixed         reduce using rule 158
	"string"       reduce using rule 158
	"address"      reduce using rule 158
	"bool"         reduce using rule 158
	"do"           reduce using rule 158
	"_"            reduce using rule 158
	"continue"     reduce using rule 158
	"break"        reduce using rule 158
	"return"       reduce using rule 158
	"throw"        reduce using rule 158
	"var"          reduce using rule 158
	"for"          reduce using rule 158
	"true"         reduce using rule 158
	"false"        reduce using rule 158
	"if"           reduce using rule 158
	"while"        reduce using rule 158
	"assembly"     reduce using rule 158
	"else"         reduce using rule 158
	"new"          reduce using rule 158
	"!"            reduce using rule 158
	"{"            reduce using rule 158
	"}"            reduce using rule 158
	ident          reduce using rule 158
	stringLiteral  reduce using rule 158
	"("            reduce using rule 158


State 477

	AssemblyLocalBinding -> "let" ident . ":=" FunctionalAssemblyExpression    (rule 169)

	":="           shift, and enter state 480


State 478

	InlineAssemblyBlock -> "{" list__AssemblyItem__ "}" .    (rule 163)

	decimalnum     reduce using rule 163
	"exponent"     reduce using rule 163
	int            reduce using rule 163
	uint           reduce using rule 163
	bytes          reduce using rule 163
	fixed          reduce using rule 163
	ufixed         reduce using rule 163
	"string"       reduce using rule 163
	"address"      reduce using rule 163
	"bool"         reduce using rule 163
	"do"           reduce using rule 163
	"_"            reduce using rule 163
	"continue"     reduce using rule 163
	"break"        reduce using rule 163
	"return"       reduce using rule 163
	"throw"        reduce using rule 163
	"var"          reduce using rule 163
	"for"          reduce using rule 163
	"true"         reduce using rule 163
	"false"        reduce using rule 163
	"if"           reduce using rule 163
	"while"        reduce using rule 163
	"assembly"     reduce using rule 163
	"let"          reduce using rule 163
	"else"         reduce using rule 163
	"new"          reduce using rule 163
	"!"            reduce using rule 163
	"{"            reduce using rule 163
	"}"            reduce using rule 163
	","            reduce using rule 163
	ident          reduce using rule 163
	stringLiteral  reduce using rule 163
	"("            reduce using rule 163
	")"            reduce using rule 163


State 479

	list1__AssemblyItem__ -> AssemblyItem list1__AssemblyItem__ .    (rule 316)

	"}"            reduce using rule 316


State 480

	AssemblyLocalBinding -> "let" ident ":=" . FunctionalAssemblyExpression    (rule 169)

	ident          shift, and enter state 490

	FunctionalAssemblyExpressiongoto state 489

State 481

	zero__ElseState__ -> ElseState .                    (rule 255)

	decimalnum     reduce using rule 255
	"exponent"     reduce using rule 255
	int            reduce using rule 255
	uint           reduce using rule 255
	bytes          reduce using rule 255
	fixed          reduce using rule 255
	ufixed         reduce using rule 255
	"string"       reduce using rule 255
	"address"      reduce using rule 255
	"bool"         reduce using rule 255
	"do"           reduce using rule 255
	"_"            reduce using rule 255
	"continue"     reduce using rule 255
	"break"        reduce using rule 255
	"return"       reduce using rule 255
	"throw"        reduce using rule 255
	"var"          reduce using rule 255
	"for"          reduce using rule 255
	"true"         reduce using rule 255
	"false"        reduce using rule 255
	"if"           reduce using rule 255
	"while"        reduce using rule 255
	"assembly"     reduce using rule 255
	"else"         reduce using rule 255
	"new"          reduce using rule 255
	"!"            reduce using rule 255
	"{"            reduce using rule 255
	"}"            reduce using rule 255
	ident          reduce using rule 255
	stringLiteral  reduce using rule 255
	"("            reduce using rule 255


State 482

	IfStatement -> "if" "(" Expression ")" Statement zero__ElseState__ .    (rule 156)

	decimalnum     reduce using rule 156
	"exponent"     reduce using rule 156
	int            reduce using rule 156
	uint           reduce using rule 156
	bytes          reduce using rule 156
	fixed          reduce using rule 156
	ufixed         reduce using rule 156
	"string"       reduce using rule 156
	"address"      reduce using rule 156
	"bool"         reduce using rule 156
	"do"           reduce using rule 156
	"_"            reduce using rule 156
	"continue"     reduce using rule 156
	"break"        reduce using rule 156
	"return"       reduce using rule 156
	"throw"        reduce using rule 156
	"var"          reduce using rule 156
	"for"          reduce using rule 156
	"true"         reduce using rule 156
	"false"        reduce using rule 156
	"if"           reduce using rule 156
	"while"        reduce using rule 156
	"assembly"     reduce using rule 156
	"else"         reduce using rule 156
	"new"          reduce using rule 156
	"!"            reduce using rule 156
	"{"            reduce using rule 156
	"}"            reduce using rule 156
	ident          reduce using rule 156
	stringLiteral  reduce using rule 156
	"("            reduce using rule 156


State 483

	ElseState -> "else" . Statement                     (rule 157)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"do"           shift, and enter state 335
	"_"            shift, and enter state 336
	"continue"     shift, and enter state 337
	"break"        shift, and enter state 338
	"return"       shift, and enter state 339
	"throw"        shift, and enter state 340
	"var"          shift, and enter state 341
	"for"          shift, and enter state 342
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"if"           shift, and enter state 343
	"while"        shift, and enter state 344
	"assembly"     shift, and enter state 345
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	"{"            shift, and enter state 229
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97

	Expression     goto state 319
	Factor         goto state 83
	TermExpression goto state 84
	Statement      goto state 488
	IfStatement    goto state 321
	WhileStatement goto state 322
	ForStatement   goto state 323
	Block          goto state 324
	InlineAssemblyStatementgoto state 325
	DoWhileStatementgoto state 326
	PlaceholderStatementgoto state 327
	Continue       goto state 328
	Break          goto state 329
	Return         goto state 330
	Throw          goto state 331
	VariableDefinitiongoto state 332
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88

State 484

	ForParams -> zero__SimpleStatement__ ";" zero__Expression__ ";" . zero__ExpressionList__    (rule 160)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	int            shift, and enter state 54
	uint           shift, and enter state 55
	bytes          shift, and enter state 56
	fixed          shift, and enter state 57
	ufixed         shift, and enter state 58
	"string"       shift, and enter state 59
	"address"      shift, and enter state 62
	"bool"         shift, and enter state 63
	"var"          shift, and enter state 64
	"true"         shift, and enter state 91
	"false"        shift, and enter state 92
	"new"          shift, and enter state 93
	"!"            shift, and enter state 94
	ident          shift, and enter state 95
	stringLiteral  shift, and enter state 96
	"("            shift, and enter state 97
	")"            reduce using rule 264

	ExpressionList goto state 216
	Expression     goto state 217
	Factor         goto state 83
	TermExpression goto state 84
	BooleanLiteral goto state 85
	NumberLiteral  goto state 86
	ElementaryTypeNameExpressiongoto state 87
	ElementaryTypeNamegoto state 88
	zero__ExpressionList__goto state 487

State 485

	IdentifierList -> "(" list__IdentList__ zero__IdentVar__ ")" zero__VarMExp__ .    (rule 182)

	decimalnum     reduce using rule 182
	"exponent"     reduce using rule 182
	int            reduce using rule 182
	uint           reduce using rule 182
	bytes          reduce using rule 182
	fixed          reduce using rule 182
	ufixed         reduce using rule 182
	"string"       reduce using rule 182
	"address"      reduce using rule 182
	"bool"         reduce using rule 182
	"do"           reduce using rule 182
	"_"            reduce using rule 182
	"continue"     reduce using rule 182
	"break"        reduce using rule 182
	"return"       reduce using rule 182
	"throw"        reduce using rule 182
	"var"          reduce using rule 182
	"for"          reduce using rule 182
	"true"         reduce using rule 182
	"false"        reduce using rule 182
	"if"           reduce using rule 182
	"while"        reduce using rule 182
	"assembly"     reduce using rule 182
	"else"         reduce using rule 182
	"new"          reduce using rule 182
	"!"            reduce using rule 182
	"{"            reduce using rule 182
	"}"            reduce using rule 182
	";"            reduce using rule 182
	ident          reduce using rule 182
	stringLiteral  reduce using rule 182
	"("            reduce using rule 182


State 486

	DoWhileStatement -> "do" Statement "while" "(" Expression ")" .    (rule 172)

	";"            reduce using rule 172


State 487

	ForParams -> zero__SimpleStatement__ ";" zero__Expression__ ";" zero__ExpressionList__ .    (rule 160)

	")"            reduce using rule 160


State 488

	ElseState -> "else" Statement .                     (rule 157)

	decimalnum     reduce using rule 157
	"exponent"     reduce using rule 157
	int            reduce using rule 157
	uint           reduce using rule 157
	bytes          reduce using rule 157
	fixed          reduce using rule 157
	ufixed         reduce using rule 157
	"string"       reduce using rule 157
	"address"      reduce using rule 157
	"bool"         reduce using rule 157
	"do"           reduce using rule 157
	"_"            reduce using rule 157
	"continue"     reduce using rule 157
	"break"        reduce using rule 157
	"return"       reduce using rule 157
	"throw"        reduce using rule 157
	"var"          reduce using rule 157
	"for"          reduce using rule 157
	"true"         reduce using rule 157
	"false"        reduce using rule 157
	"if"           reduce using rule 157
	"while"        reduce using rule 157
	"assembly"     reduce using rule 157
	"else"         reduce using rule 157
	"new"          reduce using rule 157
	"!"            reduce using rule 157
	"{"            reduce using rule 157
	"}"            reduce using rule 157
	ident          reduce using rule 157
	stringLiteral  reduce using rule 157
	"("            reduce using rule 157


State 489

	AssemblyLocalBinding -> "let" ident ":=" FunctionalAssemblyExpression .    (rule 169)

	decimalnum     reduce using rule 169
	"exponent"     reduce using rule 169
	"let"          reduce using rule 169
	"{"            reduce using rule 169
	"}"            reduce using rule 169
	","            reduce using rule 169
	ident          reduce using rule 169
	stringLiteral  reduce using rule 169
	")"            reduce using rule 169


State 490

	FunctionalAssemblyExpression -> ident . "(" zero__AssemblyItem__ list__MAssemblyItem__ ")"    (rule 170)

	"("            shift, and enter state 491


State 491

	FunctionalAssemblyExpression -> ident "(" . zero__AssemblyItem__ list__MAssemblyItem__ ")"    (rule 170)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	"let"          shift, and enter state 454
	"{"            shift, and enter state 442
	","            reduce using rule 254
	ident          shift, and enter state 455
	stringLiteral  shift, and enter state 456
	")"            reduce using rule 254

	InlineAssemblyBlockgoto state 448
	AssemblyItem   goto state 492
	AssemblyLocalBindinggoto state 450
	NumberLiteral  goto state 451
	zero__AssemblyItem__goto state 493

State 492

	zero__AssemblyItem__ -> AssemblyItem .              (rule 253)

	","            reduce using rule 253
	")"            reduce using rule 253


State 493

	FunctionalAssemblyExpression -> ident "(" zero__AssemblyItem__ . list__MAssemblyItem__ ")"    (rule 170)

	","            shift, and enter state 497
	")"            reduce using rule 236

	MAssemblyItem  goto state 494
	list__MAssemblyItem__goto state 495
	list1__MAssemblyItem__goto state 496

State 494

	list1__MAssemblyItem__ -> MAssemblyItem .           (rule 335)
	list1__MAssemblyItem__ -> MAssemblyItem . list1__MAssemblyItem__    (rule 336)

	","            shift, and enter state 497
	")"            reduce using rule 335

	MAssemblyItem  goto state 494
	list1__MAssemblyItem__goto state 500

State 495

	FunctionalAssemblyExpression -> ident "(" zero__AssemblyItem__ list__MAssemblyItem__ . ")"    (rule 170)

	")"            shift, and enter state 499


State 496

	list__MAssemblyItem__ -> list1__MAssemblyItem__ .    (rule 235)

	")"            reduce using rule 235


State 497

	MAssemblyItem -> "," . AssemblyItem                 (rule 171)

	decimalnum     shift, and enter state 89
	"exponent"     shift, and enter state 90
	"let"          shift, and enter state 454
	"{"            shift, and enter state 442
	ident          shift, and enter state 455
	stringLiteral  shift, and enter state 456

	InlineAssemblyBlockgoto state 448
	AssemblyItem   goto state 498
	AssemblyLocalBindinggoto state 450
	NumberLiteral  goto state 451

State 498

	MAssemblyItem -> "," AssemblyItem .                 (rule 171)

	","            reduce using rule 171
	")"            reduce using rule 171


State 499

	FunctionalAssemblyExpression -> ident "(" zero__AssemblyItem__ list__MAssemblyItem__ ")" .    (rule 170)

	decimalnum     reduce using rule 170
	"exponent"     reduce using rule 170
	"let"          reduce using rule 170
	"{"            reduce using rule 170
	"}"            reduce using rule 170
	","            reduce using rule 170
	ident          reduce using rule 170
	stringLiteral  reduce using rule 170
	")"            reduce using rule 170


State 500

	list1__MAssemblyItem__ -> MAssemblyItem list1__MAssemblyItem__ .    (rule 336)

	")"            reduce using rule 336


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 351
Number of terminals: 106
Number of non-terminals: 175
Number of states: 501
